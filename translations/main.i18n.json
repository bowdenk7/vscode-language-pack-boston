{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"vs/base/common/severity": {
			"sev.error": "Wicked Bad",
			"sev.warning": "Bad",
			"sev.info": "Just lettin you know"
		},
		"vs/base/common/errorMessage": {
			"stackTrace.format": "{0}: {1}",
			"nodeExceptionMessage": "A system erraah occurred ({0})",
			"error.defaultMessage": "An unknown erraah occurred. Please consult the log for more details.",
			"error.moreErrors": "{0} ({1} erraahs in total)"
		},
		"vs/base/node/zip": {
			"invalid file": "Erraah extracting {0}. Invalid file.",
			"incompleteExtract": "Incomplete. Found {0} of {1} entries",
			"notFound": "{0} not found inside zip."
		},
		"vs/base/browser/ui/actionbar/actionbar": {
			"titleLabel": "{0} ({1})"
		},
		"vs/base/node/processes": {
			"TaskRunner.UNC": "Can't execute a shell command on a UNC drive."
		},
		"vs/base/browser/ui/keybindingLabel/keybindingLabel": {
			"unbound": "unbound"
		},
		"vs/base/browser/ui/dialog/dialog": {
			"ok": "OK",
			"dialogClose": "Close Dialog"
		},
		"vs/base/parts/quickopen/browser/quickOpenModel": {
			"quickOpenAriaLabelEntry": "{0}, pickahh",
			"quickOpenAriaLabel": "pickahh"
		},
		"vs/base/common/keybindingLabels": {
			"ctrlKey": "Ctrl",
			"shiftKey": "Shift",
			"altKey": "Alt",
			"windowsKey": "Windows",
			"superKey": "Supaah",
			"ctrlKey.long": "Control",
			"shiftKey.long": "Shift",
			"altKey.long": "Alt",
			"cmdKey.long": "Command",
			"windowsKey.long": "Windows",
			"superKey.long": "Supaah"
		},
		"vs/base/browser/ui/aria/aria": {
			"repeated": "{0} (occurred again)",
			"repeatedNtimes": "{0} (occurred {1} times)"
		},
		"vs/base/browser/ui/menu/menu": {
			"titleLabel": "{0} ({1})"
		},
		"vs/base/parts/tree/browser/treeDefaults": {
			"collapse all": "Collapse All"
		},
		"vs/base/browser/ui/list/listWidget": {
			"aria list": "{0}. Use the navigation keys to navigate."
		},
		"vs/base/common/jsonErrorMessages": {
			"error.invalidSymbol": "Invalid symbol",
			"error.invalidNumberFormat": "Invalid numbaah format",
			"error.propertyNameExpected": "Property name expected",
			"error.valueExpected": "Value expected",
			"error.colonExpected": "Colon expected",
			"error.commaExpected": "Comma expected",
			"error.closeBraceExpected": "Closing brace expected",
			"error.closeBracketExpected": "Closing bracket expected",
			"error.endOfFileExpected": "End of file expected"
		},
		"vs/base/browser/ui/toolbar/toolbar": {
			"moreActions": "More Actions..."
		},
		"vs/base/parts/quickopen/browser/quickOpenWidget": {
			"quickOpenAriaLabel": "Quick pickahh. Type to narrow down results.",
			"treeAriaLabel": "Quick Pickahh",
			"quickInput.visibleCount": "{0} Results"
		},
		"vs/base/browser/ui/findinput/findInput": {
			"defaultLabel": "input"
		},
		"vs/base/browser/ui/findinput/replaceInput": {
			"defaultLabel": "input",
			"label.preserveCaseCheckbox": "Preserve Case"
		},
		"vs/base/browser/ui/inputbox/inputBox": {
			"alertErrorMessage": "Wicked Bad: {0}",
			"alertWarningMessage": "Bad: {0}",
			"alertInfoMessage": "Just lettin you know: {0}"
		},
		"vs/base/browser/ui/tree/treeDefaults": {
			"collapse all": "Collapse All"
		},
		"vs/base/browser/ui/findinput/findInputCheckboxes": {
			"caseDescription": "Match Case",
			"wordsDescription": "Match Whole Word",
			"regexDescription": "Use Regulaah Expression"
		},
		"vs/base/browser/ui/tree/abstractTree": {
			"clear": "Clear",
			"disable filter on type": "Disable Filtah on Type",
			"enable filter on type": "Enable Filtah on Type",
			"empty": "No elements found",
			"found": "Matched {0} out of {1} elements"
		},
		"vs/base/browser/ui/menu/menubar": {
			"mAppMenu": "Application Menu",
			"mMore": "more"
		},
		"vs/editor/common/standaloneStrings": {
			"noSelection": "No selection",
			"singleSelectionRange": "Line {0}, Column {1} ({2} selected)",
			"singleSelection": "Line {0}, Column {1}",
			"multiSelectionRange": "{0} selections ({1} charactaahs selected)",
			"multiSelection": "{0} selections",
			"emergencyConfOn": "Now changin the setting `accessibilitySupport` to 'on'.",
			"openingDocs": "Now openinin the Editaah Accessibility documentation page.",
			"readonlyDiffEditor": " in a read-only pane of a diff editaah.",
			"editableDiffEditor": " in a pane of a diff editaah.",
			"readonlyEditor": " in a read-only code editaah",
			"editableEditor": " in a code editaah",
			"changeConfigToOnMac": "To configure the editaah to be optimized for usage with a Screen Readaah press Command+E now.",
			"changeConfigToOnWinLinux": "To configure the editaah to be optimized for usage with a Screen Readaah press Control+E now.",
			"auto_on": "The editaah is configured to be optimised for usage with a Screen Readaah.",
			"auto_off": "The editaah is configured to never be optimized for usage with a Screen Readaah, which is not the case at this time.",
			"tabFocusModeOnMsg": "Pressin Tab in the current editaah will move focus to the next focusable element. Toggle this behaviaah by pressin {0}.",
			"tabFocusModeOnMsgNoKb": "Pressin Tab in the current editaah will move focus to the next focusable element. The command {0} is currently not triggerable by a keybinding.",
			"tabFocusModeOffMsg": "Pressin Tab in the current editaah will insert the tab charactaah. Toggle this behaviaah by pressin {0}.",
			"tabFocusModeOffMsgNoKb": "Pressin Tab in the current editaah will insert the tab charactaah. The command {0} is currently not triggerable by a keybinding.",
			"openDocMac": "Press Command+H now to open a browser window with more information related to editaah accessibility.",
			"openDocWinLinux": "Press Control+H now to open a browser window with more information related to editaah accessibility.",
			"outroMsg": "You can dismiss this tooltip and return to the editaah by pressin Escape or Shift+Escape.",
			"showAccessibilityHelpAction": "Show Accessibility Help",
			"inspectTokens": "Developaah: Inspect Tokens",
			"gotoLineLabelValidLineAndColumn": "Go to line {0} and charactaah {1}",
			"gotoLineLabelValidLine": "Go to line {0}",
			"gotoLineLabelEmptyWithLineLimit": "Type a line numbaah between 1 and {0} to navigate to",
			"gotoLineLabelEmptyWithLineAndColumnLimit": "Type a charactaah between 1 and {0} to navigate to",
			"gotoLineAriaLabel": "Current Line: {0}. Go to line {1}.",
			"gotoLineActionInput": "Type a line numbaah, followed by an optional colon and a charactaah numbaah to navigate to",
			"gotoLineActionLabel": "Go to Line...",
			"ariaLabelEntryWithKey": "{0}, {1}, commands",
			"ariaLabelEntry": "{0}, commands",
			"quickCommandActionInput": "Type the name of an action you waunnaah execute",
			"quickCommandActionLabel": "Command Palette",
			"entryAriaLabel": "{0}, symbols",
			"quickOutlineActionInput": "Type the name of an identifier you waunnaah navigate to",
			"quickOutlineActionLabel": "Go to Symbol...",
			"symbols": "symbols ({0})",
			"modules": "modules ({0})",
			"class": "classes ({0})",
			"interface": "interfaces ({0})",
			"method": "methods ({0})",
			"function": "functions ({0})",
			"property": "properties ({0})",
			"variable": "variables ({0})",
			"variable2": "variables ({0})",
			"_constructor": "constructors ({0})",
			"call": "calls ({0})",
			"editorViewAccessibleLabel": "Editaah content",
			"accessibilityHelpMessageIE": "Press Ctrl+F1 for Accessibility Options.",
			"accessibilityHelpMessage": "Press Alt+F1 for Accessibility Options.",
			"toggleHighContrast": "Toggle High Contrast Theme",
			"bulkEditServiceSummary": "Made {0} edits in {1} files"
		},
		"vs/editor/common/modes/modesRegistry": {
			"plainText.alias": "Plain Text"
		},
		"vs/editor/common/view/editorColorRegistry": {
			"lineHighlight": "Background collaah for the highlight of line at the cursaah position.",
			"lineHighlightBorderBox": "Background collaah for the bordaah around the line at the cursaah position.",
			"rangeHighlight": "Background collaah of highlighted ranges, like by quick open and find features. The collaah must not be opaque so as not to hide underlying decorations.",
			"rangeHighlightBorder": "Background collaah of the bordaah around highlighted ranges.",
			"symbolHighlight": "Background collaah of highlighted symbol, like for go to definition or go next/previous symbol. The collaah must not be opaque so as not to hide underlying decorations.",
			"symbolHighlightBorder": "Background collaah of the bordaah around highlighted symbols.",
			"caret": "Collaah of the editaah cursaah.",
			"editorCursorBackground": "The background collaah of the editaah cursaah. Allows customising the collaah of a charactaah overlapped by a block cursaah.",
			"editorWhitespaces": "Collaah of whitespace charactaahs in the editaah.",
			"editorIndentGuides": "Collaah of the editaah indentation guides.",
			"editorActiveIndentGuide": "Collaah of the active editaah indentation guides.",
			"editorLineNumbers": "Collaah of the editaah line numbaahs.",
			"editorActiveLineNumber": "Collaah of editaah active line numbaah.",
			"deprecatedEditorActiveLineNumber": "Id is deprecated. Use 'editorLineNumber.activeForeground' instead.",
			"editorRuler": "Collaah of the editaah rulers.",
			"editorCodeLensForeground": "Foreground collaah of editaah code lenses",
			"editorBracketMatchBackground": "Background collaah behind matching brackets",
			"editorBracketMatchBorder": "Collaah for matching brackets boxes",
			"editorOverviewRulerBorder": "Collaah of the overview ruler bordaah.",
			"editorGutter": "Background collaah of the editaah gutter. The gutter contains the glyph margins and the line numbaahs.",
			"unnecessaryCodeBorder": "Bordaah collaah of unnecessary (unused) source code in the editaah.",
			"unnecessaryCodeOpacity": "Opacity of unnecessary (unused) source code in the editaah. For example, \"#000000c0\" will rendaah the code with 75% opacity. For high contrast themes, use the  'editorUnnecessaryCode.border' theme collaah to underline unnecessary code instead of fading it out.",
			"overviewRulerRangeHighlight": "Overview ruler maakaah collaah for range highlights. The collaah must not be opaque so as not to hide underlying decorations.",
			"overviewRuleError": "Overview ruler maakaah collaah for erraahs.",
			"overviewRuleWarning": "Overview ruler maakaah collaah for warnings.",
			"overviewRuleInfo": "Overview ruler maakaah collaah for infos."
		},
		"vs/editor/common/config/commonEditorConfig": {
			"editorConfigurationTitle": "Editaah",
			"tabSize": "The numbaah of spaces a tab is equal to. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.",
			"insertSpaces": "Insert spaces when pressin `Tab`. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.",
			"detectIndentation": "Controls whethaah `#editor.tabSize#` and `#editor.insertSpaces#` will be automatically detected when a file is opened based on the file contents.",
			"trimAutoWhitespace": "Remove trailing auto inserted whitespace.",
			"largeFileOptimizations": "Special handling for laahge files to disable certain memory intensive features.",
			"wordBasedSuggestions": "Controls whethaah completions should be computed based on words in the document.",
			"stablePeek": "Keep peek editaahs open even when double clicking their content or when hitting `Escape`.",
			"maxTokenizationLineLength": "Lines above this length will not be tokenised for performance reasons",
			"maxComputationTime": "Timeout in milliseconds after which diff computation is cancelled. Use 0 for no timeout.",
			"sideBySide": "Controls whethaah the diff editaah shows the diff side by side or inline.",
			"ignoreTrimWhitespace": "Controls whethaah the diff editaah shows changes in leading or trailing whitespace as diffs.",
			"renderIndicators": "Controls whethaah the diff editaah shows +/- indicataahs for added/removed changes."
		},
		"vs/editor/browser/controller/coreCommands": {
			"miSelectAll": "&&Select All",
			"miUndo": "&&Undo",
			"miRedo": "&&Redo"
		},
		"vs/editor/browser/widget/codeEditorWidget": {
			"cursors.maximum": "The numbaah of cursaahs has been limited to {0}."
		},
		"vs/editor/browser/widget/diffEditorWidget": {
			"diff.tooLarge": "Cannot compare files because one file is too laahge."
		},
		"vs/editor/browser/widget/inlineDiffMargin": {
			"diff.clipboard.copyDeletedLinesContent.label": "Copy deleted lines",
			"diff.clipboard.copyDeletedLinesContent.single.label": "Copy deleted line",
			"diff.clipboard.copyDeletedLineContent.label": "Copy deleted line ({0})",
			"diff.inline.revertChange.label": "Revert this change"
		},
		"vs/editor/common/config/editorOptions": {
			"accessibilitySupport.auto": "The editaah will use platform APIs to detect when a Screen Readaah is attached.",
			"accessibilitySupport.on": "The editaah will be permanently optimised for usage with a Screen Readaah.",
			"accessibilitySupport.off": "The editaah will never be optimised for usage with a Screen Readaah.",
			"accessibilitySupport": "Controls whethaah the editaah should run in a mode where it is optimised for screen readers.",
			"emptySelectionClipboard": "Controls whethaah copying without a selection copies the current line.",
			"find.seedSearchStringFromSelection": "Controls whethaah the search string in the Find Widget is seeded from the editaah selection.",
			"editor.find.autoFindInSelection.never": "Never turn on Find in selection automatically (default)",
			"editor.find.autoFindInSelection.always": "Always turn on Find in selection automatically",
			"editor.find.autoFindInSelection.multiline": "Turn on Find in selection automatically when multiple lines of content are selected.",
			"find.autoFindInSelection": "Controls whethaah the find operation is carried out on selected text or the entire file in the editaah.",
			"find.globalFindClipboard": "Controls whethaah the Find Widget should read or modify the shared find clipboard on macOS.",
			"find.addExtraSpaceOnTop": "Controls whethaah the Find Widget should add extra lines on top of the editaah. When true, you can scroll beyond the first line when the Find Widget is visible.",
			"fontLigatures": "Enables/Disables font ligatures.",
			"fontFeatureSettings": "Explicit font-feature-settings.",
			"fontLigaturesGeneral": "Configures font ligatures.",
			"fontSize": "Controls the font size in pixels.",
			"editor.gotoLocation.multiple.peek": "Show peek view of the results (default)",
			"editor.gotoLocation.multiple.gotoAndPeek": "Go to the primary result and show a peek view",
			"editor.gotoLocation.multiple.goto": "Go to the primary result and enable peek-less navigation to others",
			"editor.gotoLocation.multiple.deprecated": "This setting is deprecated, please use separate settings like 'editor.editor.gotoLocation.multipleDefinitions' or 'editor.editor.gotoLocation.multipleImplementations' instead.",
			"editor.editor.gotoLocation.multipleDefinitions": "Controls the behaviaah the 'Go to Definition'-command when multiple target locations exist.",
			"editor.editor.gotoLocation.multipleTypeDefinitions": "Controls the behaviaah the 'Go to Type Definition'-command when multiple target locations exist.",
			"editor.editor.gotoLocation.multipleDeclarations": "Controls the behaviaah the 'Go to Declaration'-command when multiple target locations exist.",
			"editor.editor.gotoLocation.multipleImplemenattions": "Controls the behaviaah the 'Go to Implementations'-command when multiple target locations exist.",
			"editor.editor.gotoLocation.multipleReferences": "Controls the behaviaah the 'Go to References'-command when multiple target locations exist.",
			"alternativeDefinitionCommand": "Alternative command id that is being executed when the result of 'Go to Definition' is the current location.",
			"alternativeTypeDefinitionCommand": "Alternative command id that is being executed when the result of 'Go to Type Definition' is the current location.",
			"alternativeDeclarationCommand": "Alternative command id that is being executed when the result of 'Go to Declaration' is the current location.",
			"alternativeImplementationCommand": "Alternative command id that is being executed when the result of 'Go to Implementation' is the current location.",
			"alternativeReferenceCommand": "Alternative command id that is being executed when the result of 'Go to Reference' is the current location.",
			"hover.enabled": "Controls whethaah the hovaah is shown.",
			"hover.delay": "Controls the delay in milliseconds after which the hovaah is shown.",
			"hover.sticky": "Controls whethaah the hovaah should remain visible when mouse is moved over it.",
			"codeActions": "Enables the code action lightbulb in the editaah.",
			"lineHeight": "Controls the line height. Use 0 to compute the line height from the font size.",
			"minimap.enabled": "Controls whethaah the minimap is shown.",
			"minimap.side": "Controls the side where to rendaah the minimap.",
			"minimap.showSlider": "Controls when the minimap slidaah is shown.",
			"minimap.scale": "Scale of content drawn in the minimap.",
			"minimap.renderCharacters": "Rendaah the actual charactaahs on a line as opposed to collaah blocks.",
			"minimap.maxColumn": "Limit the width of the minimap to rendaah at most a certain numbaah of columns.",
			"parameterHints.enabled": "Enables a pop-up that shows parameter documentation and type information as you type.",
			"parameterHints.cycle": "Controls whethaah the parameter hints menu cycles or closes when reaching the end of the list.",
			"quickSuggestions.strings": "Enable quick suggestions inside strings.",
			"quickSuggestions.comments": "Enable quick suggestions inside comments.",
			"quickSuggestions.other": "Enable quick suggestions outside of strings and comments.",
			"quickSuggestions": "Controls whethaah suggestions should automatically show up while typin.",
			"lineNumbers.off": "Line numbaahs are not rendered.",
			"lineNumbers.on": "Line numbaahs are rendered as absolute numbaah.",
			"lineNumbers.relative": "Line numbaahs are rendered as distance in lines to cursaah position.",
			"lineNumbers.interval": "Line numbaahs are rendered every 10 lines.",
			"lineNumbers": "Controls the display of line numbaahs.",
			"rulers": "Rendaah vertical rulers after a certain numbaah of monospace charactaahs. Use multiple values for multiple rulers. No rulers are drawn if array is empty.",
			"suggest.insertMode.insert": "Insert suggestion without overwriting text right of the cursaah.",
			"suggest.insertMode.replace": "Insert suggestion and overwrite text right of the cursaah.",
			"suggest.insertMode": "Controls whethaah words are overwritten when accepting completions. Note that this depends on extensions opting into this feature.",
			"suggest.insertHighlight": "Controls whethaah unexpected text modifications while accepting completions should be highlighted, e.g `insertMode` is `replace` but the completion only supports `insert`.",
			"suggest.filterGraceful": "Controls whethaah filtering and sorting suggestions accounts for small typos.",
			"suggest.localityBonus": "Controls whethaah sorting favours words that appear close to the cursaah.",
			"suggest.shareSuggestSelections": "Controls whethaah remembered suggestion selections are shared between multiple workspaces and windows (needs `#editor.suggestSelection#`).",
			"suggest.snippetsPreventQuickSuggestions": "Control whethaah an active snippet prevents quick suggestions.",
			"suggest.showIcons": "Controls whethaah to show or hide icons in suggestions.",
			"suggest.maxVisibleSuggestions": "Controls how many suggestions IntelliSense will show before showing a scrollbar (maximum 15).",
			"deprecated": "This setting is deprecated, please use separate settings like 'editor.suggest.showKeywords' or 'editor.suggest.showSnippets' instead.",
			"editor.suggest.showMethods": "When enabled IntelliSense shows `method`-suggestions.",
			"editor.suggest.showFunctions": "When enabled IntelliSense shows `function`-suggestions.",
			"editor.suggest.showConstructors": "When enabled IntelliSense shows `constructor`-suggestions.",
			"editor.suggest.showFields": "When enabled IntelliSense shows `field`-suggestions.",
			"editor.suggest.showVariables": "When enabled IntelliSense shows `variable`-suggestions.",
			"editor.suggest.showClasss": "When enabled IntelliSense shows `class`-suggestions.",
			"editor.suggest.showStructs": "When enabled IntelliSense shows `struct`-suggestions.",
			"editor.suggest.showInterfaces": "When enabled IntelliSense shows `interface`-suggestions.",
			"editor.suggest.showModules": "When enabled IntelliSense shows `module`-suggestions.",
			"editor.suggest.showPropertys": "When enabled IntelliSense shows `property`-suggestions.",
			"editor.suggest.showEvents": "When enabled IntelliSense shows `event`-suggestions.",
			"editor.suggest.showOperators": "When enabled IntelliSense shows `operator`-suggestions.",
			"editor.suggest.showUnits": "When enabled IntelliSense shows `unit`-suggestions.",
			"editor.suggest.showValues": "When enabled IntelliSense shows `value`-suggestions.",
			"editor.suggest.showConstants": "When enabled IntelliSense shows `constant`-suggestions.",
			"editor.suggest.showEnums": "When enabled IntelliSense shows `enum`-suggestions.",
			"editor.suggest.showEnumMembers": "When enabled IntelliSense shows `enumMember`-suggestions.",
			"editor.suggest.showKeywords": "When enabled IntelliSense shows `keyword`-suggestions.",
			"editor.suggest.showTexts": "When enabled IntelliSense shows `text`-suggestions.",
			"editor.suggest.showColors": "When enabled IntelliSense shows `collaah`-suggestions.",
			"editor.suggest.showFiles": "When enabled IntelliSense shows `file`-suggestions.",
			"editor.suggest.showReferences": "When enabled IntelliSense shows `reference`-suggestions.",
			"editor.suggest.showCustomcolors": "When enabled IntelliSense shows `customcolor`-suggestions.",
			"editor.suggest.showFolders": "When enabled IntelliSense shows `folder`-suggestions.",
			"editor.suggest.showTypeParameters": "When enabled IntelliSense shows `typeParameter`-suggestions.",
			"editor.suggest.showSnippets": "When enabled IntelliSense shows `snippet`-suggestions.",
			"acceptSuggestionOnCommitCharacter": "Controls whethaah suggestions should be accepted on commit charactaahs. For example, in JavaScript, the semi-colon (`;`) can be a commit charactaah that accepts a suggestion and types that charactaah.",
			"acceptSuggestionOnEnterSmart": "Only accept a suggestion with `Enter` when it makes a textual change.",
			"acceptSuggestionOnEnter": "Controls whethaah suggestions should be accepted on `Enter`, in addition to `Tab`. Helps to avoid ambiguity between inserting new lines or accepting suggestions.",
			"accessibilityPageSize": "Controls the numbaah of lines in the editaah that can be read out by a screen readaah. Warning: this has a performance implication for numbaahs larger than the default.",
			"editorViewAccessibleLabel": "Editaah content",
			"editor.autoClosingBrackets.languageDefined": "Use language configurations to determine when to autoclose brackets.",
			"editor.autoClosingBrackets.beforeWhitespace": "Autoclose brackets only when the cursaah is to the left of whitespace.",
			"autoClosingBrackets": "Controls whethaah the editaah should automatically close brackets after the user adds an opening bracket.",
			"editor.autoClosingOvertype.auto": "Type over closing quotes or brackets only if they were automatically inserted.",
			"autoClosingOvertype": "Controls whethaah the editaah should type over closing quotes or brackets.",
			"editor.autoClosingQuotes.languageDefined": "Use language configurations to determine when to autoclose quotes.",
			"editor.autoClosingQuotes.beforeWhitespace": "Autoclose quotes only when the cursaah is to the left of whitespace.",
			"autoClosingQuotes": "Controls whethaah the editaah should automatically close quotes after the user adds an opening quote.",
			"editor.autoIndent.none": "The editaah will not insert indentation automatically.",
			"editor.autoIndent.keep": "The editaah will keep the current line's indentation.",
			"editor.autoIndent.brackets": "The editaah will keep the current line's indentation and honoaah language defined brackets.",
			"editor.autoIndent.advanced": "The editaah will keep the current line's indentation, honoaah language defined brackets and invoke special onEnterRules defined by languages.",
			"editor.autoIndent.full": "The editaah will keep the current line's indentation, honoaah language defined brackets, invoke special onEnterRules defined by languages, and honoaah indentationRules defined by languages.",
			"autoIndent": "Controls whethaah the editaah should automatically adjust the indentation when users type, paste, move or indent lines.",
			"editor.autoSurround.languageDefined": "Use language configurations to determine when to automatically surround selections.",
			"editor.autoSurround.quotes": "Surround with quotes but not brackets.",
			"editor.autoSurround.brackets": "Surround with brackets but not quotes.",
			"autoSurround": "Controls whethaah the editaah should automatically surround selections.",
			"codeLens": "Controls whethaah the editaah shows CodeLens.",
			"colorDecorators": "Controls whethaah the editaah should rendaah the inline collaah decorators and collaah pickahh.",
			"copyWithSyntaxHighlighting": "Controls whethaah syntax highlighting should be copied into the clipboard.",
			"cursorBlinking": "Control the cursaah animation style.",
			"cursorSmoothCaretAnimation": "Controls whethaah the smooth caret animation should be enabled.",
			"cursorStyle": "Controls the cursaah style.",
			"cursorSurroundingLines": "Controls the minimal numbaah of visible leading and trailing lines surrounding the cursaah. Known as 'scrollOff' or `scrollOffset` in some other editaahs.",
			"cursorSurroundingLinesStyle.default": "`cursorSurroundingLines` is enforced only when triggered via the keyboard or API.",
			"cursorSurroundingLinesStyle.all": "`cursorSurroundingLines` is enforced always.",
			"cursorSurroundingLinesStyle": "Controls when `cursorSurroundingLines` should be enforced.",
			"cursorWidth": "Controls the width of the cursaah when `#editor.cursorStyle#` is set to `line`.",
			"dragAndDrop": "Controls whethaah the editaah should allow moving selections via drag and drop.",
			"fastScrollSensitivity": "Scrolling speed multiplier when pressin `Alt`.",
			"folding": "Controls whethaah the editaah has code folding enabled.",
			"foldingStrategy": "Controls the strategy for computing folding ranges. `auto` uses a language specific folding strategy, if available. `indentation` uses the indentation based folding strategy.",
			"foldingHighlight": "Controls whethaah the editaah should highlight folded ranges.",
			"fontFamily": "Controls the font family.",
			"fontWeight": "Controls the font weight.",
			"formatOnPaste": "Controls whethaah the editaah should automatically format the pasted content. A formatter must be available and should be able to format a range in a document.",
			"formatOnType": "Controls whethaah the editaah should automatically format the line after typin.",
			"glyphMargin": "Controls whethaah the editaah should rendaah the vertical glyph margin. Glyph margin is mostly used for debugging.",
			"hideCursorInOverviewRuler": "Controls whethaah the cursaah should be hidden in the overview ruler.",
			"highlightActiveIndentGuide": "Controls whethaah the editaah should highlight the active indent guide.",
			"letterSpacing": "Controls the letter spacing in pixels.",
			"links": "Controls whethaah the editaah should detect links and make them clickable.",
			"matchBrackets": "Highlight matching brackets.",
			"mouseWheelScrollSensitivity": "A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.",
			"mouseWheelZoom": "Zoom the font of the editaah when usin mouse wheel and holding `Ctrl`.",
			"multiCursorMergeOverlapping": "Merge multiple cursaahs when they are overlapping.",
			"multiCursorModifier.ctrlCmd": "Maps to `Control` on Windows and Linux and to `Command` on macOS.",
			"multiCursorModifier.alt": "Maps to `Alt` on Windows and Linux and to `Option` on macOS.",
			"multiCursorModifier": "The modifier to be used to add multiple cursaahs with the mouse. The Go To Definition and Open Link mouse gestures will adapt such that they do not conflict with the multicursor modifier. [Read more](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).",
			"multiCursorPaste.spread": "Each cursaah pastes a single line of the text.",
			"multiCursorPaste.full": "Each cursaah pastes the full text.",
			"multiCursorPaste": "Controls pasting when the line count of the pasted text matches the cursaah count.",
			"occurrencesHighlight": "Controls whethaah the editaah should highlight semantic symbol occurrences.",
			"overviewRulerBorder": "Controls whethaah a bordaah should be drawn around the overview ruler.",
			"peekWidgetFocusInlineEditor": "Controls whethaah to focus the inline editaah in the peek widget by default.",
			"quickSuggestionsDelay": "Controls the delay in milliseconds after which quick suggestions will show up.",
			"renderControlCharacters": "Controls whethaah the editaah should rendaah control charactaahs.",
			"renderIndentGuides": "Controls whethaah the editaah should rendaah indent guides.",
			"renderFinalNewline": "Rendaah last line numbaah when the file ends with a newline.",
			"renderLineHighlight.all": "Highlights both the gutter and the current line.",
			"renderLineHighlight": "Controls how the editaah should rendaah the current line highlight.",
			"renderWhitespace.selection": "Rendaah whitespace charactaahs only on selected text.",
			"renderWhitespace": "Controls how the editaah should rendaah whitespace charactaahs.",
			"roundedSelection": "Controls whethaah selections should have rounded corners.",
			"scrollBeyondLastColumn": "Controls the numbaah of extra charactaahs beyond which the editaah will scroll horizontally.",
			"scrollBeyondLastLine": "Controls whethaah the editaah will scroll beyond the last line.",
			"selectionClipboard": "Controls whethaah the Linux primary clipboard should be supported.",
			"selectionHighlight": "Controls whethaah the editaah should highlight matches similar to the selection.",
			"showFoldingControls": "Controls whethaah the fold controls on the gutter are automatically hidden.",
			"showUnused": "Controls fading out of unused code.",
			"snippetSuggestions.top": "Show snippet suggestions on top of other suggestions.",
			"snippetSuggestions.bottom": "Show snippet suggestions below other suggestions.",
			"snippetSuggestions.inline": "Show snippets suggestions with other suggestions.",
			"snippetSuggestions.none": "Do not show snippet suggestions.",
			"snippetSuggestions": "Controls whethaah snippets are shown with other suggestions and how they are sorted.",
			"smoothScrolling": "Controls whethaah the editaah will scroll usin an animation.",
			"suggestFontSize": "Font size for the suggest widget. When set to `0`, the value of `#editor.fontSize#` is used.",
			"suggestLineHeight": "Line height for the suggest widget. When set to `0`, the value of `#editor.lineHeight#` is used.",
			"suggestOnTriggerCharacters": "Controls whethaah suggestions should automatically show up when typin trigger charactaahs.",
			"suggestSelection.first": "Always select the first suggestion.",
			"suggestSelection.recentlyUsed": "Select recent suggestions unless further typin selects one, e.g. `console.| -> console.log` because `log` has been completed recently.",
			"suggestSelection.recentlyUsedByPrefix": "Select suggestions based on previous prefixes that have completed those suggestions, e.g. `co -> console` and `con -> const`.",
			"suggestSelection": "Controls how suggestions are pre-selected when showing the suggest list.",
			"tabCompletion.on": "Tab complete will insert the best matching suggestion when pressin tab.",
			"tabCompletion.off": "Disable tab completions.",
			"tabCompletion.onlySnippets": "Tab complete snippets when their prefix match. Works best when 'quickSuggestions' aren't enabled.",
			"tabCompletion": "Enables tab completions.",
			"useTabStops": "Inserting and deleting whitespace follows tab stops.",
			"wordSeparators": "Charactaahs that will be used as word separators when doing word related navigations or operations.",
			"wordWrap.off": "Lines will never wrap.",
			"wordWrap.on": "Lines will wrap at the viewport width.",
			"wordWrap.wordWrapColumn": "Lines will wrap at `#editor.wordWrapColumn#`.",
			"wordWrap.bounded": "Lines will wrap at the minimum of viewport and `#editor.wordWrapColumn#`.",
			"wordWrap": "Controls how lines should wrap.",
			"wordWrapColumn": "Controls the wrapping column of the editaah when `#editor.wordWrap#` is `wordWrapColumn` or `bounded`.",
			"wrappingIndent.none": "No indentation. Wrapped lines begin at column 1.",
			"wrappingIndent.same": "Wrapped lines get the same indentation as the parent.",
			"wrappingIndent.indent": "Wrapped lines get +1 indentation toward the parent.",
			"wrappingIndent.deepIndent": "Wrapped lines get +2 indentation toward the parent.",
			"wrappingIndent": "Controls the indentation of wrapped lines."
		},
		"vs/editor/browser/widget/diffReview": {
			"label.close": "Close",
			"no_lines": "no lines",
			"one_line": "1 line",
			"more_lines": "{0} lines",
			"header": "Difference {0} of {1}: original {2}, {3}, modified {4}, {5}",
			"blankLine": "blank",
			"equalLine": "original {0}, modified {1}: {2}",
			"insertLine": "+ modified {0}: {1}",
			"deleteLine": "- original {0}: {1}",
			"editor.action.diffReview.next": "Go to Next Difference",
			"editor.action.diffReview.prev": "Go to Previous Difference"
		},
		"vs/editor/browser/controller/textAreaHandler": {
			"accessibilityOffAriaLabel": "The editaah is not accessible at this time. Press Alt+F1 for options."
		},
		"vs/editor/contrib/caretOperations/caretOperations": {
			"caret.moveLeft": "Move Caret Left",
			"caret.moveRight": "Move Caret Right"
		},
		"vs/editor/contrib/caretOperations/transpose": {
			"transposeLetters.label": "Transpose Letters"
		},
		"vs/editor/contrib/comment/comment": {
			"comment.line": "Toggle Line Comment",
			"miToggleLineComment": "&&Toggle Line Comment",
			"comment.line.add": "Add Line Comment",
			"comment.line.remove": "Remove Line Comment",
			"comment.block": "Toggle Block Comment",
			"miToggleBlockComment": "Toggle &&Block Comment"
		},
		"vs/editor/contrib/cursorUndo/cursorUndo": {
			"cursor.undo": "Cursaah Undo",
			"cursor.redo": "Cursaah Redo"
		},
		"vs/editor/contrib/parameterHints/parameterHints": {
			"parameterHints.trigger.label": "Trigger Parameter Hints"
		},
		"vs/editor/contrib/fontZoom/fontZoom": {
			"EditorFontZoomIn.label": "Make the Editaah Font Biggaah",
			"EditorFontZoomOut.label": "Make the Editaah Font Smallaah",
			"EditorFontZoomReset.label": "Reset the Editaah Font Size"
		},
		"vs/editor/contrib/tokenization/tokenization": {
			"forceRetokenize": "Developaah: Force Retokenize"
		},
		"vs/editor/contrib/toggleTabFocusMode/toggleTabFocusMode": {
			"toggle.tabMovesFocus": "Toggle Tab Key Moves Focus",
			"toggle.tabMovesFocus.on": "Pressin Tab will now move focus to the next focusable element",
			"toggle.tabMovesFocus.off": "Pressin Tab will now insert the tab charactaah"
		},
		"vs/editor/contrib/bracketMatching/bracketMatching": {
			"overviewRulerBracketMatchForeground": "Overview ruler maakaah collaah for matching brackets.",
			"smartSelect.jumpBracket": "Go to Bracket",
			"smartSelect.selectToBracket": "Select to Bracket",
			"miGoToBracket": "Go to &&Bracket"
		},
		"vs/editor/contrib/clipboard/clipboard": {
			"actions.clipboard.cutLabel": "Cut",
			"miCut": "Cu&&t",
			"actions.clipboard.copyLabel": "Copy",
			"miCopy": "&&Copy",
			"actions.clipboard.pasteLabel": "Paste",
			"miPaste": "&&Paste",
			"actions.clipboard.copyWithSyntaxHighlightingLabel": "Copy With Syntax Highlighting"
		},
		"vs/editor/contrib/contextmenu/contextmenu": {
			"action.showContextMenu.label": "Show Editaah Context Menu"
		},
		"vs/editor/contrib/format/formatActions": {
			"formatDocument.label": "Format Document",
			"formatSelection.label": "Format Selection"
		},
		"vs/editor/contrib/inPlaceReplace/inPlaceReplace": {
			"InPlaceReplaceAction.previous.label": "Replace with Previous Value",
			"InPlaceReplaceAction.next.label": "Replace with Next Value"
		},
		"vs/editor/contrib/hover/hover": {
			"showHover": "Show Hovaah",
			"showDefinitionPreviewHover": "Show Definition Preview Hovaah"
		},
		"vs/editor/contrib/links/links": {
			"links.navigate.executeCmd": "Execute command",
			"links.navigate.follow": "Follow link",
			"links.navigate.kb.meta.mac": "cmd + click",
			"links.navigate.kb.meta": "ctrl + click",
			"links.navigate.kb.alt.mac": "option + click",
			"links.navigate.kb.alt": "alt + click",
			"invalid.url": "Failed to open this link because it is not well-formed: {0}",
			"missing.url": "Failed to open this link because its target is missing.",
			"label": "Open Link"
		},
		"vs/editor/contrib/rename/rename": {
			"no result": "No result.",
			"resolveRenameLocationFailed": "An unknown erraah occurred while resolving rename location",
			"label": "Renaming '{0}'",
			"aria": "Successfully renamed '{0}' to '{1}'. Summary: {2}",
			"rename.failedApply": "Rename failed to apply edits",
			"rename.failed": "Rename failed to compute edits",
			"rename.label": "Rename Symbol"
		},
		"vs/editor/contrib/smartSelect/smartSelect": {
			"smartSelect.expand": "Expand Selection",
			"miSmartSelectGrow": "&&Expand Selection",
			"smartSelect.shrink": "Shrink Selection",
			"miSmartSelectShrink": "&&Shrink Selection"
		},
		"vs/editor/contrib/gotoSymbol/link/goToDefinitionAtPosition": {
			"multipleResults": "Click to show {0} definitions."
		},
		"vs/editor/contrib/gotoError/gotoError": {
			"markerAction.next.label": "Go to Next Problem (Wicked Bad, Bad, Just lettin you know)",
			"markerAction.previous.label": "Go to Previous Problem (Wicked Bad, Bad, Just lettin you know)",
			"markerAction.nextInFiles.label": "Go to Next Problem in Files (Wicked Bad, Bad, Just lettin you know)",
			"markerAction.previousInFiles.label": "Go to Previous Problem in Files (Wicked Bad, Bad, Just lettin you know)",
			"miGotoNextProblem": "Next &&Problem",
			"miGotoPreviousProblem": "Previous &&Problem"
		},
		"vs/editor/contrib/peekView/peekView": {
			"label.close": "Close",
			"peekViewTitleBackground": "Background collaah of the peek view title area.",
			"peekViewTitleForeground": "Collaah of the peek view title.",
			"peekViewTitleInfoForeground": "Collaah of the peek view title info.",
			"peekViewBorder": "Collaah of the peek view borders and arrow.",
			"peekViewResultsBackground": "Background collaah of the peek view result list.",
			"peekViewResultsMatchForeground": "Foreground collaah for line nodes in the peek view result list.",
			"peekViewResultsFileForeground": "Foreground collaah for file nodes in the peek view result list.",
			"peekViewResultsSelectionBackground": "Background collaah of the selected entry in the peek view result list.",
			"peekViewResultsSelectionForeground": "Foreground collaah of the selected entry in the peek view result list.",
			"peekViewEditorBackground": "Background collaah of the peek view editaah.",
			"peekViewEditorGutterBackground": "Background collaah of the gutter in the peek view editaah.",
			"peekViewResultsMatchHighlight": "Match highlight collaah in the peek view result list.",
			"peekViewEditorMatchHighlight": "Match highlight collaah in the peek view editaah.",
			"peekViewEditorMatchHighlightBorder": "Match highlight bordaah in the peek view editaah."
		},
		"vs/editor/contrib/gotoSymbol/goToCommands": {
			"peek.submenu": "Peek",
			"def.title": "Definitions",
			"noResultWord": "No definition found for '{0}'",
			"generic.noResults": "No definition found",
			"actions.goToDecl.label": "Go to Definition",
			"miGotoDefinition": "Go to &&Definition",
			"actions.goToDeclToSide.label": "Open Definition to the Side",
			"actions.previewDecl.label": "Peek Definition",
			"decl.title": "Declarations",
			"decl.noResultWord": "No declaration found for '{0}'",
			"decl.generic.noResults": "No declaration found",
			"actions.goToDeclaration.label": "Go to Declaration",
			"miGotoDeclaration": "Go to &&Declaration",
			"actions.peekDecl.label": "Peek Declaration",
			"typedef.title": "Type Definitions",
			"goToTypeDefinition.noResultWord": "No type definition found for '{0}'",
			"goToTypeDefinition.generic.noResults": "No type definition found",
			"actions.goToTypeDefinition.label": "Go to Type Definition",
			"miGotoTypeDefinition": "Go to &&Type Definition",
			"actions.peekTypeDefinition.label": "Peek Type Definition",
			"impl.title": "Implementations",
			"goToImplementation.noResultWord": "No implementation found for '{0}'",
			"goToImplementation.generic.noResults": "No implementation found",
			"actions.goToImplementation.label": "Go to Implementations",
			"miGotoImplementation": "Go to &&Implementations",
			"actions.peekImplementation.label": "Peek Implementations",
			"references.no": "No references found for '{0}'",
			"references.noGeneric": "No references found",
			"goToReferences.label": "Go to References",
			"miGotoReference": "Go to &&References",
			"ref.title": "References",
			"references.action.label": "Peek References",
			"label.generic": "Go To Any Symbol",
			"generic.title": "Locations",
			"generic.noResult": "No results for '{0}'"
		},
		"vs/editor/contrib/suggest/suggestController": {
			"arai.alert.snippet": "Accepting '{0}' made {1} additional edits",
			"suggest.trigger.label": "Trigger Suggest"
		},
		"vs/editor/contrib/wordHighlighter/wordHighlighter": {
			"wordHighlight": "Background collaah of a symbol during read-access, like reading a variable. The collaah must not be opaque so as not to hide underlying decorations.",
			"wordHighlightStrong": "Background collaah of a symbol during write-access, like writing to a variable. The collaah must not be opaque so as not to hide underlying decorations.",
			"wordHighlightBorder": "Bordaah collaah of a symbol during read-access, like reading a variable.",
			"wordHighlightStrongBorder": "Bordaah collaah of a symbol during write-access, like writing to a variable.",
			"overviewRulerWordHighlightForeground": "Overview ruler maakaah collaah for symbol highlights. The collaah must not be opaque so as not to hide underlying decorations.",
			"overviewRulerWordHighlightStrongForeground": "Overview ruler maakaah collaah for write-access symbol highlights. The collaah must not be opaque so as not to hide underlying decorations.",
			"wordHighlight.next.label": "Go to Next Symbol Highlight",
			"wordHighlight.previous.label": "Go to Previous Symbol Highlight",
			"wordHighlight.trigger.label": "Trigger Symbol Highlight"
		},
		"vs/editor/contrib/folding/folding": {
			"unfoldAction.label": "Unfold",
			"unFoldRecursivelyAction.label": "Unfold Recursively",
			"foldAction.label": "Fold",
			"toggleFoldAction.label": "Toggle Fold",
			"foldRecursivelyAction.label": "Fold Recursively",
			"foldAllBlockComments.label": "Fold All Block Comments",
			"foldAllMarkerRegions.label": "Fold All Regions",
			"unfoldAllMarkerRegions.label": "Unfold All Regions",
			"foldAllAction.label": "Fold All",
			"unfoldAllAction.label": "Unfold All",
			"foldLevelAction.label": "Fold Level {0}",
			"editorSelectionBackground": "Collaah of the editaah selection."
		},
		"vs/editor/contrib/find/findController": {
			"startFindAction": "Find",
			"miFind": "&&Find",
			"startFindWithSelectionAction": "Find With Selection",
			"findNextMatchAction": "Find Next",
			"findPreviousMatchAction": "Find Previous",
			"nextSelectionMatchFindAction": "Find Next Selection",
			"previousSelectionMatchFindAction": "Find Previous Selection",
			"startReplace": "Replace",
			"miReplace": "&&Replace"
		},
		"vs/editor/contrib/linesOperations/linesOperations": {
			"lines.copyUp": "Copy Line Up",
			"miCopyLinesUp": "&&Copy Line Up",
			"lines.copyDown": "Copy Line Down",
			"miCopyLinesDown": "Co&&py Line Down",
			"duplicateSelection": "Duplicate Selection",
			"miDuplicateSelection": "&&Duplicate Selection",
			"lines.moveUp": "Move Line Up",
			"miMoveLinesUp": "Mo&&ve Line Up",
			"lines.moveDown": "Move Line Down",
			"miMoveLinesDown": "Move &&Line Down",
			"lines.sortAscending": "Sort Lines Ascending",
			"lines.sortDescending": "Sort Lines Descending",
			"lines.trimTrailingWhitespace": "Trim Trailing Whitespace",
			"lines.delete": "Delete Line",
			"lines.indent": "Indent Line",
			"lines.outdent": "Outdent Line",
			"lines.insertBefore": "Insert Line Above",
			"lines.insertAfter": "Insert Line Below",
			"lines.deleteAllLeft": "Delete All Left",
			"lines.deleteAllRight": "Delete All Right",
			"lines.joinLines": "Join Lines",
			"editor.transpose": "Transpose charactaahs around the cursaah",
			"editor.transformToUppercase": "Transform to Uppercase",
			"editor.transformToLowercase": "Transform to Lowercase",
			"editor.transformToTitlecase": "Transform to Title Case"
		},
		"vs/editor/contrib/multicursor/multicursor": {
			"mutlicursor.insertAbove": "Add Cursaah Above",
			"miInsertCursorAbove": "&&Add Cursaah Above",
			"mutlicursor.insertBelow": "Add Cursaah Below",
			"miInsertCursorBelow": "A&&dd Cursaah Below",
			"mutlicursor.insertAtEndOfEachLineSelected": "Add Cursaahs to Line Ends",
			"miInsertCursorAtEndOfEachLineSelected": "Add C&&ursors to Line Ends",
			"mutlicursor.addCursorsToBottom": "Add Cursaahs To Bottom",
			"mutlicursor.addCursorsToTop": "Add Cursaahs To Top",
			"addSelectionToNextFindMatch": "Add Selection To Next Find Match",
			"miAddSelectionToNextFindMatch": "Add &&Next Occurrence",
			"addSelectionToPreviousFindMatch": "Add Selection To Previous Find Match",
			"miAddSelectionToPreviousFindMatch": "Add P&&revious Occurrence",
			"moveSelectionToNextFindMatch": "Move Last Selection To Next Find Match",
			"moveSelectionToPreviousFindMatch": "Move Last Selection To Previous Find Match",
			"selectAllOccurrencesOfFindMatch": "Select All Occurrences of Find Match",
			"miSelectHighlights": "Select All &&Occurrences",
			"changeAll.label": "Change All Occurrences"
		},
		"vs/editor/contrib/parameterHints/parameterHintsWidget": {
			"hint": "{0}, hint"
		},
		"vs/editor/contrib/codeAction/codeActionCommands": {
			"args.schema.kind": "Kind of the code action to run.",
			"args.schema.apply": "Controls when the returned actions are applied.",
			"args.schema.apply.first": "Always apply the first returned code action.",
			"args.schema.apply.ifSingle": "Apply the first returned code action if it is the only one.",
			"args.schema.apply.never": "Do not apply the returned code actions.",
			"args.schema.preferred": "Controls if only preferred code actions should be returned.",
			"applyCodeActionFailed": "An unknown erraah occurred while applying the code action",
			"quickfix.trigger.label": "Quick Fix...",
			"editor.action.quickFix.noneMessage": "No code actions available",
			"editor.action.codeAction.noneMessage.preferred.kind": "No preferred code actions for '{0}' available",
			"editor.action.codeAction.noneMessage.kind": "No code actions for '{0}' available",
			"editor.action.codeAction.noneMessage.preferred": "No preferred code actions available",
			"editor.action.codeAction.noneMessage": "No code actions available",
			"refactor.label": "Refactaah...",
			"editor.action.refactor.noneMessage.preferred.kind": "No preferred refactorings for '{0}' available",
			"editor.action.refactor.noneMessage.kind": "No refactorings for '{0}' available",
			"editor.action.refactor.noneMessage.preferred": "No preferred refactorings available",
			"editor.action.refactor.noneMessage": "No refactorings available",
			"source.label": "Source Action...",
			"editor.action.source.noneMessage.preferred.kind": "No preferred source actions for '{0}' available",
			"editor.action.source.noneMessage.kind": "No source actions for '{0}' available",
			"editor.action.source.noneMessage.preferred": "No preferred source actions available",
			"editor.action.source.noneMessage": "No source actions available",
			"organizeImports.label": "Organise Imports",
			"editor.action.organize.noneMessage": "No organise imports action available",
			"fixAll.label": "Fix All",
			"fixAll.noneMessage": "No fix all action available",
			"autoFix.label": "Auto Fix...",
			"editor.action.autoFix.noneMessage": "No auto fixes available"
		},
		"vs/editor/contrib/format/format": {
			"hint11": "Made 1 formatting edit on line {0}",
			"hintn1": "Made {0} formatting edits on line {1}",
			"hint1n": "Made 1 formatting edit between lines {0} and {1}",
			"hintnn": "Made {0} formatting edits between lines {1} and {2}"
		},
		"vs/editor/contrib/rename/renameInputField": {
			"renameAriaLabel": "Rename input. Type new name and press Enter to commit.",
			"label": "Press {0} to Rename, {1} to Preview"
		},
		"vs/editor/contrib/message/messageController": {
			"editor.readonly": "Cannot edit in read-only editaah"
		},
		"vs/editor/contrib/snippet/snippetVariables": {
			"Sunday": "Sunday",
			"Monday": "Monday",
			"Tuesday": "Tuesday",
			"Wednesday": "Wednesday",
			"Thursday": "Thursday",
			"Friday": "Friday",
			"Saturday": "Saturday",
			"SundayShort": "Sun",
			"MondayShort": "Mon",
			"TuesdayShort": "Tue",
			"WednesdayShort": "Wed",
			"ThursdayShort": "Thu",
			"FridayShort": "Fri",
			"SaturdayShort": "Sat",
			"January": "January",
			"February": "February",
			"March": "March",
			"April": "April",
			"May": "May",
			"June": "June",
			"July": "July",
			"August": "August",
			"September": "September",
			"October": "October",
			"November": "November",
			"December": "December",
			"JanuaryShort": "Jan",
			"FebruaryShort": "Feb",
			"MarchShort": "Mar",
			"AprilShort": "Apr",
			"MayShort": "May",
			"JuneShort": "Jun",
			"JulyShort": "Jul",
			"AugustShort": "Aug",
			"SeptemberShort": "Sep",
			"OctoberShort": "Oct",
			"NovemberShort": "Nov",
			"DecemberShort": "Dec"
		},
		"vs/editor/contrib/gotoSymbol/peek/referencesController": {
			"labelLoading": "Loading...",
			"metaTitle.N": "{0} ({1})"
		},
		"vs/editor/contrib/gotoError/gotoErrorWidget": {
			"problems": "{0} of {1} problems",
			"change": "{0} of {1} problem",
			"editorMarkerNavigationError": "Editaah maakaah navigation widget erraah collaah.",
			"editorMarkerNavigationWarning": "Editaah maakaah navigation widget warning collaah.",
			"editorMarkerNavigationInfo": "Editaah maakaah navigation widget info collaah.",
			"editorMarkerNavigationBackground": "Editaah maakaah navigation widget background."
		},
		"vs/editor/contrib/gotoSymbol/symbolNavigation": {
			"location.kb": "Symbol {0} of {1}, {2} for next",
			"location": "Symbol {0} of {1}"
		},
		"vs/editor/contrib/gotoSymbol/referencesModel": {
			"aria.oneReference": "symbol in {0} on line {1} at column {2}",
			"aria.fileReferences.1": "1 symbol in {0}, full path {1}",
			"aria.fileReferences.N": "{0} symbols in {1}, full path {2}",
			"aria.result.0": "No results found",
			"aria.result.1": "Found 1 symbol in {0}",
			"aria.result.n1": "Found {0} symbols in {1}",
			"aria.result.nm": "Found {0} symbols in {1} files"
		},
		"vs/editor/contrib/hover/modesContentHover": {
			"modesContentHover.loading": "Loading...",
			"peek problem": "Peek Problem",
			"checkingForQuickFixes": "Checking for quick fixes...",
			"noQuickFixes": "No quick fixes available",
			"quick fixes": "Quick Fix..."
		},
		"vs/editor/contrib/documentSymbols/outlineTree": {
			"provider": "Outline Provider",
			"title.template": "{0} ({1})",
			"1.problem": "1 problem in this element",
			"N.problem": "{0} problems in this element",
			"deep.problem": "Contains elements with problems",
			"Array": "array",
			"Boolean": "boolean",
			"Class": "class",
			"Constant": "constant",
			"Constructor": "constructor",
			"Enum": "enumeration",
			"EnumMember": "enumeration member",
			"Event": "event",
			"Field": "field",
			"File": "file",
			"Function": "function",
			"Interface": "interface",
			"Key": "key",
			"Method": "method",
			"Module": "module",
			"Namespace": "namespace",
			"Null": "null",
			"Number": "numbaah",
			"Object": "object",
			"Operator": "operator",
			"Package": "package",
			"Property": "property",
			"String": "string",
			"Struct": "struct",
			"TypeParameter": "type parameter",
			"Variable": "variable",
			"symbolIcon.arrayForeground": "The foreground collaah for array symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.booleanForeground": "The foreground collaah for boolean symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.classForeground": "The foreground collaah for class symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.colorForeground": "The foreground collaah for collaah symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.constantForeground": "The foreground collaah for constant symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.constructorForeground": "The foreground collaah for constructor symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.enumeratorForeground": "The foreground collaah for enumerator symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.enumeratorMemberForeground": "The foreground collaah for enumerator member symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.eventForeground": "The foreground collaah for event symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.fieldForeground": "The foreground collaah for field symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.fileForeground": "The foreground collaah for file symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.folderForeground": "The foreground collaah for folder symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.functionForeground": "The foreground collaah for function symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.interfaceForeground": "The foreground collaah for interface symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.keyForeground": "The foreground collaah for key symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.keywordForeground": "The foreground collaah for keyword symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.methodForeground": "The foreground collaah for method symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.moduleForeground": "The foreground collaah for module symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.namespaceForeground": "The foreground collaah for namespace symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.nullForeground": "The foreground collaah for null symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.numberForeground": "The foreground collaah for numbaah symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.objectForeground": "The foreground collaah for object symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.operatorForeground": "The foreground collaah for operator symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.packageForeground": "The foreground collaah for package symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.propertyForeground": "The foreground collaah for property symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.referenceForeground": "The foreground collaah for reference symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.snippetForeground": "The foreground collaah for snippet symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.stringForeground": "The foreground collaah for string symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.structForeground": "The foreground collaah for struct symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.textForeground": "The foreground collaah for text symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.typeParameterForeground": "The foreground collaah for type parameter symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.unitForeground": "The foreground collaah for unit symbols. These symbols appear in the outline, breadcrumb, and suggest widget.",
			"symbolIcon.variableForeground": "The foreground collaah for variable symbols. These symbols appear in the outline, breadcrumb, and suggest widget."
		},
		"vs/editor/contrib/suggest/suggestWidget": {
			"editorSuggestWidgetBackground": "Background collaah of the suggest widget.",
			"editorSuggestWidgetBorder": "Bordaah collaah of the suggest widget.",
			"editorSuggestWidgetForeground": "Foreground collaah of the suggest widget.",
			"editorSuggestWidgetSelectedBackground": "Background collaah of the selected entry in the suggest widget.",
			"editorSuggestWidgetHighlightForeground": "Collaah of the match highlights in the suggest widget.",
			"readMore": "Read More...{0}",
			"readLess": "Read less...{0}",
			"loading": "Loading...",
			"suggestWidget.loading": "Loading...",
			"suggestWidget.noSuggestions": "No suggestions.",
			"ariaCurrenttSuggestionReadDetails": "Item {0}, docs: {1}"
		},
		"vs/editor/contrib/gotoSymbol/peek/referencesWidget": {
			"missingPreviewMessage": "no preview available",
			"treeAriaLabel": "References",
			"noResults": "No results",
			"peekView.alternateTitle": "References"
		},
		"vs/editor/contrib/find/findWidget": {
			"label.find": "Find",
			"placeholder.find": "Find",
			"label.previousMatchButton": "Previous match",
			"label.nextMatchButton": "Next match",
			"label.toggleSelectionFind": "Find in selection",
			"label.closeButton": "Close",
			"label.replace": "Replace",
			"placeholder.replace": "Replace",
			"label.replaceButton": "Replace",
			"label.replaceAllButton": "Replace All",
			"label.toggleReplaceButton": "Toggle Replace mode",
			"title.matchesCountLimit": "Only the first {0} results are highlighted, but all find operations work on the entire text.",
			"label.matchesLocation": "{0} of {1}",
			"label.noResults": "No Results",
			"ariaSearchNoResultEmpty": "{0} found",
			"ariaSearchNoResult": "{0} found for {1}",
			"ariaSearchNoResultWithLineNum": "{0} found for {1} at {2}",
			"ariaSearchNoResultWithLineNumNoCurrentMatch": "{0} found for {1}",
			"ctrlEnter.keybindingChanged": "Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behaviaah."
		},
		"vs/editor/contrib/codeAction/lightBulbWidget": {
			"prefferedQuickFixWithKb": "Show Fixes. Preferred Fix Available ({0})",
			"quickFixWithKb": "Show Fixes ({0})",
			"quickFix": "Show Fixes"
		},
		"vs/editor/contrib/gotoSymbol/peek/referencesTree": {
			"referencesFailre": "Failed to resolve file.",
			"referencesCount": "{0} references",
			"referenceCount": "{0} reference"
		},
		"vs/editor/contrib/indentation/indentation": {
			"indentationToSpaces": "Convert Indentation to Spaces",
			"indentationToTabs": "Convert Indentation to Tabs",
			"configuredTabSize": "Configured Tab Size",
			"selectTabWidth": "Select Tab Size for Current File",
			"indentUsingTabs": "Indent Usin Tabs",
			"indentUsingSpaces": "Indent Usin Spaces",
			"detectIndentation": "Detect Indentation from Content",
			"editor.reindentlines": "Reindent Lines",
			"editor.reindentselectedlines": "Reindent Selected Lines"
		},
		"vs/platform/environment/node/argvHelper": {
			"unknownOption": "Option '{0}' is unknown. Ignoring.",
			"multipleValues": "Option '{0}' is defined more than once. Usin value '{1}.'",
			"gotoValidation": "Arguments in `--goto` mode should be in the format of `FILE(:LINE(:CHARACTER))`."
		},
		"vs/platform/request/common/request": {
			"httpConfigurationTitle": "HTTP",
			"proxy": "The proxy setting to use. If not set, will be inherited from the `http_proxy` and `https_proxy` environment variables.",
			"strictSSL": "Controls whethaah the proxy server certificate should be verified against the list of supplied CAs.",
			"proxyAuthorization": "The value to send as the `Proxy-Authorization` header for every network request.",
			"proxySupportOff": "Disable proxy support for extensions.",
			"proxySupportOn": "Enable proxy support for extensions.",
			"proxySupportOverride": "Enable proxy support for extensions, override request options.",
			"proxySupport": "Use the proxy support for extensions.",
			"systemCertificates": "Controls whethaah CA certificates should be loaded from the OS. (On Windows and macOS a reload of the window is required after turning this off.)"
		},
		"vs/platform/extensionManagement/common/extensionManagement": {
			"extensions": "Extensions",
			"preferences": "Preferences"
		},
		"vs/platform/extensionManagement/node/extensionManagementUtil": {
			"invalidManifest": "VSIX invalid: package.json is not a JSON file."
		},
		"vs/platform/telemetry/common/telemetryService": {
			"telemetryConfigurationTitle": "Telemetry",
			"telemetry.enableTelemetry": "Enable usage data and erraahs to be sent to a Microsoft online service."
		},
		"vs/platform/update/common/update.config.contribution": {
			"updateConfigurationTitle": "Update",
			"updateMode": "Configure whethaah you receive automatic updates. Requires a restaaht after change. The updates are fetched from a Microsoft online service.",
			"none": "Disable updates.",
			"manual": "Disable automatic background update checks. Updates will be available if you manually check for updates.",
			"start": "Check for updates only on staahtup. Disable automatic background update checks.",
			"default": "Enable automatic update checks. Code will check for updates automatically and periodically.",
			"deprecated": "This setting is deprecated, please use '{0}' instead.",
			"enableWindowsBackgroundUpdatesTitle": "Enable Background Updates on Windows",
			"enableWindowsBackgroundUpdates": "Enable to download and install new VS Code Versions in the background on Windows",
			"showReleaseNotes": "Show Release Notes after an update. The Release Notes are fetched from a Microsoft online service."
		},
		"vs/platform/environment/node/argv": {
			"optionsUpperCase": "Options",
			"extensionsManagement": "Extensions Management",
			"troubleshooting": "Troubleshooting",
			"diff": "Compare two files with each other.",
			"add": "Add folder(s) to the last active window.",
			"goto": "Open a file at the path on the specified line and charactaah position.",
			"newWindow": "Force to open a new window.",
			"reuseWindow": "Force to open a file or folder in an already opened window.",
			"wait": "Wait for the files to be closed before returning.",
			"locale": "The locale to use (e.g. en-US or zh-TW).",
			"userDataDir": "Specifies the directory that user data is kept in. Can be used to open multiple distinct instances of Code.",
			"version": "Print version.",
			"help": "Print usage.",
			"telemetry": "Shows all telemetry events which VS code collects.",
			"folderUri": "Opens a window with given folder URI(s)",
			"fileUri": "Opens a window with given file uri(s)",
			"extensionHomePath": "Set the root path for extensions.",
			"listExtensions": "List the installed extensions.",
			"showVersions": "Show versions of installed extensions, when usin --list-extension.",
			"category": "Filters installed extensions by provided category, when usin --list-extension.",
			"installExtension": "Installs or updates the extension. Use `--force` argument to avoid prompts.",
			"uninstallExtension": "Uninstalls an extension.",
			"experimentalApis": "Enables proposed API features for extensions. Can receive one or more extension IDs to enable individually.",
			"verbose": "Print verbose output (implies --wait).",
			"log": "Log level to use. Default is 'info'. Allowed values are 'critical', 'error', 'warn', 'info', 'debug', 'trace', 'off'.",
			"status": "Print process usage and diagnostics information.",
			"prof-startup": "Run CPU profiler during staahtup",
			"disableExtensions": "Disable all installed extensions.",
			"disableExtension": "Disable an extension.",
			"inspect-extensions": "Allow debugging and profiling of extensions. Check the developaah tools for the connection URI.",
			"inspect-brk-extensions": "Allow debugging and profiling of extensions with the extension host being paused after staaht. Check the developaah tools for the connection URI.",
			"disableGPU": "Disable GPU haahdware acceleration.",
			"maxMemory": "Max memory size for a window (in Mbytes).",
			"usage": "Usage",
			"options": "options",
			"paths": "paths",
			"stdinWindows": "To read output from another program, append '-' (e.g. 'echo Hello World | {0} -')",
			"stdinUnix": "To read from stdin, append '-' (e.g. 'ps aux | grep code | {0} -')",
			"unknownVersion": "Unknown version",
			"unknownCommit": "Unknown commit"
		},
		"vs/platform/files/common/files": {
			"unknownError": "Unknown Erraah"
		},
		"vs/platform/label/common/label": {
			"untitledWorkspace": "Untitled (Workspace)",
			"workspaceName": "{0} (Workspace)"
		},
		"vs/platform/userDataSync/common/userDataSync": {
			"sync": "Sync",
			"sync.enable": "Enable synchronization.",
			"sync.enableSettings": "Enable synchronizing settings.",
			"sync.enableKeybindings": "Enable synchronizing keybindings.",
			"sync.enableUIState": "Enable synchronizing UI state (Only Display Language).",
			"sync.enableExtensions": "Enable synchronizing extensions.",
			"sync.keybindingsPerPlatform": "Synchronize keybindings per platform.",
			"sync.ignoredExtensions": "Configure extensions to be ignored while synchronizing.",
			"sync.ignoredSettings": "Configure settings to be ignored while synchronizing. \nDefault Ignored Settings:\n\n{0}"
		},
		"vs/platform/files/electron-browser/diskFileSystemProvider": {
			"binFailed": "Failed to move '{0}' to the recycle bin",
			"trashFailed": "Failed to move '{0}' to the trash"
		},
		"vs/platform/markers/common/markers": {
			"sev.error": "Wicked Bad",
			"sev.warning": "Bad",
			"sev.info": "Just Lettin You Know"
		},
		"vs/platform/dialogs/common/dialogs": {
			"moreFile": "...1 additional file not shown",
			"moreFiles": "...{0} additional files not shown"
		},
		"vs/platform/workspaces/common/workspaces": {
			"codeWorkspace": "Code Workspace"
		},
		"vs/platform/files/node/diskFileSystemProvider": {
			"fileExists": "File already exists",
			"fileNotExists": "File does not exist",
			"moveError": "Unable to move '{0}' into '{1}' ({2}).",
			"copyError": "Unable to copy '{0}' into '{1}' ({2}).",
			"fileCopyErrorPathCase": "'File cannot be copied to same path with different path case",
			"fileCopyErrorExists": "File at target already exists"
		},
		"vs/platform/configuration/common/configurationRegistry": {
			"defaultConfigurations.title": "Default Configuration Overrides",
			"overrideSettings.description": "Configure editaah settings to be overridden for {0} language.",
			"overrideSettings.defaultDescription": "Configure editaah settings to be overridden for a language.",
			"config.property.languageDefault": "Cannot register '{0}'. This matches property pattern '\\\\[.*\\\\]$' for describing language specific editaah settings. Use 'configurationDefaults' contribution.",
			"config.property.duplicate": "Cannot register '{0}'. This property is already registered."
		},
		"vs/platform/userDataSync/common/settingsSync": {
			"errorInvalidSettings": "Unable to sync settings. Please resolve conflicts without any erraahs/warnings and try again."
		},
		"vs/platform/extensionManagement/node/extensionManagementService": {
			"invalidManifest": "Extension invalid: package.json is not a JSON file.",
			"incompatible": "Unable to install extension '{0}' as it is not compatible with VS Code '{1}'.",
			"restartCode": "Please restaaht VS Code before reinstalling {0}.",
			"MarketPlaceDisabled": "Marketplace is not enabled",
			"malicious extension": "Can't install extension since it was reported to be problematic.",
			"notFoundCompatibleDependency": "Unable to install '{0}' extension because it is not compatible with the current version of VS Code (version {1}).",
			"removeError": "Erraah while removing the extension: {0}. Please Quit and Staaht VS Code before trying again.",
			"Not a Marketplace extension": "Only Marketplace Extensions can be reinstalled",
			"quitCode": "Unable to install the extension. Please Quit and Staaht VS Code before reinstalling.",
			"exitCode": "Unable to install the extension. Please Exit and Staaht VS Code before reinstalling.",
			"errorDeleting": "Unable to delete the existing folder '{0}' while installing the extension '{1}'. Please delete the folder manually and try again",
			"cannot read": "Cannot read the extension from {0}",
			"renameError": "Unknown erraah while renaming {0} to {1}",
			"notInstalled": "Extension '{0}' is not installed.",
			"singleDependentError": "Cannot uninstall extension '{0}'. Extension '{1}' depends on this.",
			"twoDependentsError": "Cannot uninstall extension '{0}'. Extensions '{1}' and '{2}' depend on this.",
			"multipleDependentsError": "Cannot uninstall extension '{0}'. Extensions '{1}', '{2}' and others depend on this.",
			"notExists": "Could not find extension"
		},
		"vs/platform/files/common/fileService": {
			"invalidPath": "Unable to resolve filesystem provider with relative file path '{0}'",
			"noProviderFound": "No file system provider found for resource '{0}'",
			"fileNotFoundError": "Unable to resolve non-existing file '{0}'",
			"fileExists": "Unable to create file '{0}' that already exists when overwrite flag is not set",
			"err.write": "Unable to write file '{0}' ({1})",
			"fileIsDirectoryWriteError": "Unable to write file '{0}' that is actually a directory",
			"fileModifiedError": "File Modified Since",
			"err.read": "Unable to read file '{0}' ({1})",
			"fileIsDirectoryReadError": "Unable to read file '{0}' that is actually a directory",
			"fileNotModifiedError": "File not modified since",
			"fileTooLargeError": "Unable to read file '{0}' that is too laahge to open",
			"unableToMoveCopyError1": "Unable to copy when source '{0}' is same as target '{1}' with different path case on a case insensitive file system",
			"unableToMoveCopyError2": "Unable to move/copy when source '{0}' is parent of target '{1}'.",
			"unableToMoveCopyError3": "Unable to move/copy '{0}' because target '{1}' already exists at destination.",
			"unableToMoveCopyError4": "Unable to move/copy '{0}' into '{1}' since a file would replace the folder it is contained in.",
			"mkdirExistsError": "Unable to create folder '{0}' that already exists but is not a directory",
			"deleteFailedTrashUnsupported": "Unable to delete file '{0}' via trash because provider does not support it.",
			"deleteFailedNotFound": "Unable to delete non-existing file '{0}'",
			"deleteFailedNonEmptyFolder": "Unable to delete non-empty folder '{0}'.",
			"err.readonly": "Unable to modify readonly file '{0}'"
		},
		"vs/platform/list/browser/listService": {
			"workbenchConfigurationTitle": "Workbench",
			"multiSelectModifier.ctrlCmd": "Maps to `Control` on Windows and Linux and to `Command` on macOS.",
			"multiSelectModifier.alt": "Maps to `Alt` on Windows and Linux and to `Option` on macOS.",
			"multiSelectModifier": "The modifier to be used to add an item in trees and lists to a multi-selection with the mouse (for example in the explorer, open editaahs and scm view). The 'Open to Side' mouse gestures - if supported - will adapt such that they do not conflict with the multiselect modifier.",
			"openModeModifier": "Controls how to open items in trees and lists usin the mouse (if supported). For parents with children in trees, this setting will control if a single click expands the parent or a double click. Note that some trees and lists might choose to ignore this setting if it is not applicable. ",
			"horizontalScrolling setting": "Controls whethaah lists and trees support horizontal scrolling in the workbench.",
			"tree horizontalScrolling setting": "Controls whethaah trees support horizontal scrolling in the workbench.",
			"deprecated": "This setting is deprecated, please use '{0}' instead.",
			"tree indent setting": "Controls tree indentation in pixels.",
			"render tree indent guides": "Controls whethaah the tree should rendaah indent guides.",
			"keyboardNavigationSettingKey.simple": "Simple keyboard navigation focuses elements which match the keyboard input. Matching is done only on prefixes.",
			"keyboardNavigationSettingKey.highlight": "Highlight keyboard navigation highlights elements which match the keyboard input. Further up and down navigation will traverse only the highlighted elements.",
			"keyboardNavigationSettingKey.filter": "Filter keyboard navigation will filter out and hide all the elements which do not match the keyboard input.",
			"keyboardNavigationSettingKey": "Controls the keyboard navigation style for lists and trees in the workbench. Can be simple, highlight and filter.",
			"automatic keyboard navigation setting": "Controls whethaah keyboard navigation in lists and trees is automatically triggered simply by typin. If set to `false`, keyboard navigation is only triggered when executing the `list.toggleKeyboardNavigation` command, for which you can assign a keyboard shortcut."
		},
		"vs/platform/files/common/io": {
			"fileTooLargeForHeapError": "To open a file of this size, you need to restaaht and allow it to use more memory",
			"fileTooLargeError": "File is too laahge to open"
		},
		"vs/platform/dialogs/electron-main/dialogs": {
			"open": "Open",
			"openFolder": "Open Folder",
			"openFile": "Open File",
			"openWorkspaceTitle": "Open Workspace",
			"openWorkspace": "&&Open"
		},
		"vs/platform/theme/common/colorRegistry": {
			"foreground": "Overall foreground collaah. This collaah is only used if not overridden by a component.",
			"errorForeground": "Overall foreground collaah for erraah messages. This collaah is only used if not overridden by a component.",
			"descriptionForeground": "Foreground collaah for description text providing additional information, for example for a label.",
			"iconForeground": "The default collaah for icons in the workbench.",
			"focusBorder": "Overall bordaah collaah for focused elements. This collaah is only used if not overridden by a component.",
			"contrastBorder": "An extra bordaah around elements to separate them from others for greater contrast.",
			"activeContrastBorder": "An extra bordaah around active elements to separate them from others for greater contrast.",
			"selectionBackground": "The background collaah of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editaah.",
			"textSeparatorForeground": "Collaah for text separators.",
			"textLinkForeground": "Foreground collaah for links in text.",
			"textLinkActiveForeground": "Foreground collaah for links in text when clicked on and on mouse hovaah.",
			"textPreformatForeground": "Foreground collaah for preformatted text segments.",
			"textBlockQuoteBackground": "Background collaah for block quotes in text.",
			"textBlockQuoteBorder": "Bordaah collaah for block quotes in text.",
			"textCodeBlockBackground": "Background collaah for code blocks in text.",
			"widgetShadow": "Shadow collaah of widgets such as find/replace inside the editaah.",
			"inputBoxBackground": "Input box background.",
			"inputBoxForeground": "Input box foreground.",
			"inputBoxBorder": "Input box bordaah.",
			"inputBoxActiveOptionBorder": "Bordaah collaah of activated options in input fields.",
			"inputOption.activeBackground": "Background collaah of activated options in input fields.",
			"inputPlaceholderForeground": "Input box foreground collaah for placeholder text.",
			"inputValidationInfoBackground": "Input validation background collaah for information severity.",
			"inputValidationInfoForeground": "Input validation foreground collaah for information severity.",
			"inputValidationInfoBorder": "Input validation bordaah collaah for information severity.",
			"inputValidationWarningBackground": "Input validation background collaah for warning severity.",
			"inputValidationWarningForeground": "Input validation foreground collaah for warning severity.",
			"inputValidationWarningBorder": "Input validation bordaah collaah for warning severity.",
			"inputValidationErrorBackground": "Input validation background collaah for erraah severity.",
			"inputValidationErrorForeground": "Input validation foreground collaah for erraah severity.",
			"inputValidationErrorBorder": "Input validation bordaah collaah for erraah severity.",
			"dropdownBackground": "Dropdown background.",
			"dropdownListBackground": "Dropdown list background.",
			"dropdownForeground": "Dropdown foreground.",
			"dropdownBorder": "Dropdown bordaah.",
			"checkbox.background": "Background collaah of checkbox widget.",
			"checkbox.foreground": "Foreground collaah of checkbox widget.",
			"checkbox.border": "Bordaah collaah of checkbox widget.",
			"pickerGroupForeground": "Quick pickahh collaah for grouping labels.",
			"pickerGroupBorder": "Quick pickahh collaah for grouping borders.",
			"buttonForeground": "Button foreground collaah.",
			"buttonBackground": "Button background collaah.",
			"buttonHoverBackground": "Button background collaah when hovering.",
			"badgeBackground": "Badge background collaah. Badges are small information labels, e.g. for search results count.",
			"badgeForeground": "Badge foreground collaah. Badges are small information labels, e.g. for search results count.",
			"scrollbarShadow": "Scrollbar shadow to indicate that the view is scrolled.",
			"scrollbarSliderBackground": "Scrollbar slidaah background collaah.",
			"scrollbarSliderHoverBackground": "Scrollbar slidaah background collaah when hovering.",
			"scrollbarSliderActiveBackground": "Scrollbar slidaah background collaah when clicked on.",
			"progressBarBackground": "Background collaah of the progress baah that can show for long running operations.",
			"editorError.foreground": "Foreground collaah of erraah squigglies in the editaah.",
			"errorBorder": "Bordaah collaah of erraah boxes in the editaah.",
			"editorWarning.foreground": "Foreground collaah of warning squigglies in the editaah.",
			"warningBorder": "Bordaah collaah of warning boxes in the editaah.",
			"editorInfo.foreground": "Foreground collaah of info squigglies in the editaah.",
			"infoBorder": "Bordaah collaah of info boxes in the editaah.",
			"editorHint.foreground": "Foreground collaah of hint squigglies in the editaah.",
			"hintBorder": "Bordaah collaah of hint boxes in the editaah.",
			"editorBackground": "Editaah background collaah.",
			"editorForeground": "Editaah default foreground collaah.",
			"editorWidgetBackground": "Background collaah of editaah widgets, such as find/replace.",
			"editorWidgetForeground": "Foreground collaah of editaah widgets, such as find/replace.",
			"editorWidgetBorder": "Bordaah collaah of editaah widgets. The collaah is only used if the widget chooses to have a bordaah and if the collaah is not overridden by a widget.",
			"editorWidgetResizeBorder": "Bordaah collaah of the resize baah of editaah widgets. The collaah is only used if the widget chooses to have a resize bordaah and if the collaah is not overridden by a widget.",
			"editorSelectionBackground": "Collaah of the editaah selection.",
			"editorSelectionForeground": "Collaah of the selected text for high contrast.",
			"editorInactiveSelection": "Collaah of the selection in an inactive editaah. The collaah must not be opaque so as not to hide underlying decorations.",
			"editorSelectionHighlight": "Collaah for regions with the same content as the selection. The collaah must not be opaque so as not to hide underlying decorations.",
			"editorSelectionHighlightBorder": "Bordaah collaah for regions with the same content as the selection.",
			"editorFindMatch": "Collaah of the current search match.",
			"findMatchHighlight": "Collaah of the other search matches. The collaah must not be opaque so as not to hide underlying decorations.",
			"findRangeHighlight": "Collaah of the range limiting the search. The collaah must not be opaque so as not to hide underlying decorations.",
			"editorFindMatchBorder": "Bordaah collaah of the current search match.",
			"findMatchHighlightBorder": "Bordaah collaah of the other search matches.",
			"findRangeHighlightBorder": "Bordaah collaah of the range limiting the search. The collaah must not be opaque to ensure underlying decorations will not be hidden.",
			"searchEditor.queryMatch": "Collaah of the Search Editaah query matches.",
			"searchEditor.editorFindMatchBorder": "Bordaah collaah of the Search Editaah query matches.",
			"hoverHighlight": "Highlight below the word for which a hovaah is shown. The collaah must not be opaque so as not to hide underlying decorations.",
			"hoverBackground": "Background collaah of the editaah hovaah.",
			"hoverForeground": "Foreground collaah of the editaah hovaah.",
			"hoverBorder": "Bordaah collaah of the editaah hovaah.",
			"statusBarBackground": "Background collaah of the editaah hovaah status baah.",
			"activeLinkForeground": "Collaah of active links.",
			"editorLightBulbForeground": "The collaah used for the lightbulb actions icon.",
			"editorLightBulbAutoFixForeground": "The collaah used for the lightbulb auto fix actions icon.",
			"diffEditorInserted": "Background collaah for text that got inserted. The collaah must not be opaque so as not to hide underlying decorations.",
			"diffEditorRemoved": "Background collaah for text that got removed. The collaah must not be opaque so as not to hide underlying decorations.",
			"diffEditorInsertedOutline": "Outline collaah for the text that got inserted.",
			"diffEditorRemovedOutline": "Outline collaah for text that got removed.",
			"diffEditorBorder": "Bordaah collaah between the two text editaahs.",
			"listFocusBackground": "List/Tree background collaah for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.",
			"listFocusForeground": "List/Tree foreground collaah for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.",
			"listActiveSelectionBackground": "List/Tree background collaah for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.",
			"listActiveSelectionForeground": "List/Tree foreground collaah for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.",
			"listInactiveSelectionBackground": "List/Tree background collaah for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.",
			"listInactiveSelectionForeground": "List/Tree foreground collaah for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.",
			"listInactiveFocusBackground": "List/Tree background collaah for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.",
			"listHoverBackground": "List/Tree background when hovering over items usin the mouse.",
			"listHoverForeground": "List/Tree foreground when hovering over items usin the mouse.",
			"listDropBackground": "List/Tree drag and drop background when moving items around usin the mouse.",
			"highlight": "List/Tree foreground collaah of the match highlights when searching inside the list/tree.",
			"invalidItemForeground": "List/Tree foreground collaah for invalid items, for example an unresolved root in explorer.",
			"listErrorForeground": "Foreground collaah of list items containing erraahs.",
			"listWarningForeground": "Foreground collaah of list items containing warnings.",
			"listFilterWidgetBackground": "Background collaah of the type filter widget in lists and trees.",
			"listFilterWidgetOutline": "Outline collaah of the type filter widget in lists and trees.",
			"listFilterWidgetNoMatchesOutline": "Outline collaah of the type filter widget in lists and trees, when there are no matches.",
			"listFilterMatchHighlight": "Background collaah of the filtered match.",
			"listFilterMatchHighlightBorder": "Bordaah collaah of the filtered match.",
			"treeIndentGuidesStroke": "Tree stroke collaah for the indentation guides.",
			"menuBorder": "Bordaah collaah of menus.",
			"menuForeground": "Foreground collaah of menu items.",
			"menuBackground": "Background collaah of menu items.",
			"menuSelectionForeground": "Foreground collaah of the selected menu item in menus.",
			"menuSelectionBackground": "Background collaah of the selected menu item in menus.",
			"menuSelectionBorder": "Bordaah collaah of the selected menu item in menus.",
			"menuSeparatorBackground": "Collaah of a separator menu item in menus.",
			"snippetTabstopHighlightBackground": "Highlight background collaah of a snippet tabstop.",
			"snippetTabstopHighlightBorder": "Highlight bordaah collaah of a snippet tabstop.",
			"snippetFinalTabstopHighlightBackground": "Highlight background collaah of the final tabstop of a snippet.",
			"snippetFinalTabstopHighlightBorder": "Highlight bordaah collaah of the final stabstop of a snippet.",
			"breadcrumbsFocusForeground": "Collaah of focused breadcrumb items.",
			"breadcrumbsBackground": "Background collaah of breadcrumb items.",
			"breadcrumbsSelectedForegound": "Collaah of selected breadcrumb items.",
			"breadcrumbsSelectedBackground": "Background collaah of breadcrumb item pickahh.",
			"mergeCurrentHeaderBackground": "Current header background in inline merge-conflicts. The collaah must not be opaque so as not to hide underlying decorations.",
			"mergeCurrentContentBackground": "Current content background in inline merge-conflicts. The collaah must not be opaque so as not to hide underlying decorations.",
			"mergeIncomingHeaderBackground": "Incoming header background in inline merge-conflicts. The collaah must not be opaque so as not to hide underlying decorations.",
			"mergeIncomingContentBackground": "Incoming content background in inline merge-conflicts. The collaah must not be opaque so as not to hide underlying decorations.",
			"mergeCommonHeaderBackground": "Common ancestor header background in inline merge-conflicts. The collaah must not be opaque so as not to hide underlying decorations.",
			"mergeCommonContentBackground": "Common ancestor content background in inline merge-conflicts. The collaah must not be opaque so as not to hide underlying decorations.",
			"mergeBorder": "Bordaah collaah on headers and the splitter in inline merge-conflicts.",
			"overviewRulerCurrentContentForeground": "Current overview ruler foreground for inline merge-conflicts.",
			"overviewRulerIncomingContentForeground": "Incoming overview ruler foreground for inline merge-conflicts.",
			"overviewRulerCommonContentForeground": "Common ancestor overview ruler foreground for inline merge-conflicts.",
			"overviewRulerFindMatchForeground": "Overview ruler maakaah collaah for find matches. The collaah must not be opaque so as not to hide underlying decorations.",
			"overviewRulerSelectionHighlightForeground": "Overview ruler maakaah collaah for selection highlights. The collaah must not be opaque so as not to hide underlying decorations.",
			"minimapFindMatchHighlight": "Minimap maakaah collaah for find matches.",
			"minimapSelectionHighlight": "Minimap maakaah collaah for the editaah selection.",
			"minimapError": "Minimap maakaah collaah for erraahs.",
			"overviewRuleWarning": "Minimap maakaah collaah for warnings.",
			"problemsErrorIconForeground": "The collaah used for the problems erraah icon.",
			"problemsWarningIconForeground": "The collaah used for the problems warning icon.",
			"problemsInfoIconForeground": "The collaah used for the problems info icon."
		},
		"vs/platform/userDataSync/common/extensionsSync": {
			"skip extension": "Skipping synchronising extension {0}"
		},
		"vs/platform/extensions/common/extensionValidator": {
			"versionSyntax": "Could not parse `engines.vscode` value {0}. Please use, for example: ^1.22.0, ^1.22.x, etc.",
			"versionSpecificity1": "Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.",
			"versionSpecificity2": "Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.",
			"versionMismatch": "Extension is not compatible with Code {0}. Extension requires: {1}."
		},
		"vs/platform/actions/browser/menuEntryActionViewItem": {
			"titleAndKb": "{0} ({1})"
		},
		"vs/platform/workspaces/electron-main/workspacesMainService": {
			"ok": "OK",
			"workspaceOpenedMessage": "Unable to save workspace '{0}'",
			"workspaceOpenedDetail": "The workspace is already opened in another window. Please close that window first and then try again."
		},
		"vs/platform/userDataSync/common/keybindingsSync": {
			"errorInvalidKeybindings": "Unable to sync keybindings. Please resolve conflicts without any erraahs/warnings and try again."
		},
		"vs/platform/issue/electron-main/issueMainService": {
			"local": "Local",
			"issueReporterWriteToClipboard": "There is too much data to send to GitHub directly. The data will be copied to the clipboard, please paste it into the GitHub issue page that is opened.",
			"ok": "OK",
			"cancel": "Cancel",
			"confirmCloseIssueReporter": "Your input will not be saved. Are you sure you waunnaah close this window?",
			"yes": "Yes",
			"issueReporter": "Issue Reporter",
			"processExplorer": "Process Explorer"
		},
		"vs/platform/workspaces/electron-main/workspacesHistoryMainService": {
			"newWindow": "New Window",
			"newWindowDesc": "Opens a new window",
			"recentFolders": "Recent Workspaces",
			"folderDesc": "{0} {1}",
			"workspaceDesc": "{0} {1}"
		},
		"vs/platform/keybinding/common/abstractKeybindingService": {
			"first.chord": "({0}) was pressed. Waiting for second key of chord...",
			"missing.chord": "The key combination ({0}, {1}) is not a command."
		},
		"vs/platform/theme/common/tokenClassificationRegistry": {
			"schema.token.settings": "Colors and styles for the token.",
			"schema.token.foreground": "Foreground collaah for the token.",
			"schema.token.background.warning": "Token background colors are currently not supported.",
			"schema.token.fontStyle": "Font style of the rule: 'italic', 'bold' or 'underline', '-italic', '-bold' or '-underline'or a combination. The empty string unsets inherited settings.",
			"schema.fontStyle.error": "Font style must be 'italic', 'bold' or 'underline' to set a style or '-italic', '-bold' or '-underline' to unset or a combination. The empty string unsets all styles.",
			"schema.token.fontStyle.none": "None (clear inherited style)",
			"comment": "Style for comments.",
			"string": "Style for strings.",
			"keyword": "Style for keywords.",
			"number": "Style for numbaahs.",
			"regexp": "Style for expressions.",
			"operator": "Style for operators.",
			"namespace": "Style for namespaces.",
			"type": "Style for types.",
			"struct": "Style for structs.",
			"class": "Style for classes.",
			"interface": "Style for interfaces.",
			"enum": "Style for enums.",
			"typeParameter": "Style for type parameters.",
			"function": "Style for functions",
			"member": "Style for member",
			"macro": "Style for macros.",
			"variable": "Style for variables.",
			"constant": "Style for constants.",
			"parameter": "Style for parameters.",
			"property": "Style for properties.",
			"labels": "Style for labels. ",
			"declaration": "Style for all symbol declarations.",
			"documentation": "Style to use for references in documentation.",
			"static": "Style to use for symbols that are static.",
			"abstract": "Style to use for symbols that are abstract.",
			"deprecated": "Style to use for symbols that are deprecated.",
			"modification": "Style to use for write accesses.",
			"async": "Style to use for symbols that are async."
		},
		"vs/platform/menubar/electron-main/menubar": {
			"miNewWindow": "New &&Window",
			"mFile": "&&File",
			"mEdit": "&&Edit",
			"mSelection": "&&Selection",
			"mView": "&&View",
			"mGoto": "&&Go",
			"mDebug": "&&Debug",
			"mTerminal": "&&Terminal",
			"mWindow": "Window",
			"mHelp": "&&Help",
			"mAbout": "About {0}",
			"miPreferences": "&&Preferences",
			"mServices": "Services",
			"mHide": "Hide {0}",
			"mHideOthers": "Hide Others",
			"mShowAll": "Show All",
			"miQuit": "Quit {0}",
			"mMinimize": "Minimise",
			"mZoom": "Zoom",
			"mBringToFront": "Bring All to Front",
			"miSwitchWindow": "Switch &&Window...",
			"mNewTab": "New Tab",
			"mShowPreviousTab": "Show Previous Tab",
			"mShowNextTab": "Show Next Tab",
			"mMoveTabToNewWindow": "Move Tab to New Window",
			"mMergeAllWindows": "Merge All Windows",
			"miCheckForUpdates": "Check for &&Updates...",
			"miCheckingForUpdates": "Checking For Updates...",
			"miDownloadUpdate": "D&&ownload Available Update",
			"miDownloadingUpdate": "Downloading Update...",
			"miInstallUpdate": "Install &&Update...",
			"miInstallingUpdate": "Installing Update...",
			"miRestartToUpdate": "Restaaht to &&Update"
		},
		"vs/platform/windows/electron-main/windowsMainService": {
			"pathNotExistTitle": "Path does not exist",
			"pathNotExistDetail": "The path '{0}' does not seem to exist anymore on disk.",
			"uriInvalidTitle": "URI can not be opened",
			"uriInvalidDetail": "The URI '{0}' is not valid and can not be opened.",
			"ok": "OK"
		},
		"win32/i18n/Default": {
			"SetupAppTitle": "Setup",
			"SetupWindowTitle": "Setup - %1",
			"UninstallAppTitle": "Uninstall",
			"UninstallAppFullTitle": "%1 Uninstall",
			"InformationTitle": "Information",
			"ConfirmTitle": "Confirm",
			"ErrorTitle": "Erraah",
			"SetupLdrStartupMessage": "This will install %1. Do you waunnaah continue?",
			"LdrCannotCreateTemp": "Unable to create a temporary file. Setup aborted",
			"LdrCannotExecTemp": "Unable to execute file in the temporary directory. Setup aborted",
			"LastErrorMessage": "%1.%n%nError %2: %3",
			"SetupFileMissing": "The file %1 is missing from the installation directory. Please correct the problem or obtain a new copy of the program.",
			"SetupFileCorrupt": "The setup files are corrupted. Please obtain a new copy of the program.",
			"SetupFileCorruptOrWrongVer": "The setup files are corrupted, or are incompatible with this version of Setup. Please correct the problem or obtain a new copy of the program.",
			"InvalidParameter": "An invalid parameter was passed on the command line:%n%n%1",
			"SetupAlreadyRunning": "Setup is already running.",
			"WindowsVersionNotSupported": "This program does not support the version of Windows your computer is running.",
			"WindowsServicePackRequired": "This program requires %1 Service Pack %2 or later.",
			"NotOnThisPlatform": "This program will not run on %1.",
			"OnlyOnThisPlatform": "This program must be run on %1.",
			"OnlyOnTheseArchitectures": "This program can only be installed on versions of Windows designed for the following processor architectures:%n%n%1",
			"MissingWOW64APIs": "The version of Windows you are running does not include functionality required by Setup to perform a 64-bit installation. To correct this problem, please install Service Pack %1.",
			"WinVersionTooLowError": "This program requires %1 version %2 or later.",
			"WinVersionTooHighError": "This program cannot be installed on %1 version %2 or later.",
			"AdminPrivilegesRequired": "You must be logged in as an administrator when installing this program.",
			"PowerUserPrivilegesRequired": "You must be logged in as an administrator or as a member of the Power Users group when installing this program.",
			"SetupAppRunningError": "Setup has detected that %1 is currently running.%n%nPlease close all instances of it now, then click OK to continue, or Cancel to exit.",
			"UninstallAppRunningError": "Uninstall has detected that %1 is currently running.%n%nPlease close all instances of it now, then click OK to continue, or Cancel to exit.",
			"ErrorCreatingDir": "Setup was unable to create the directory \"%1\"",
			"ErrorTooManyFilesInDir": "Unable to create a file in the directory \"%1\" because it contains too many files",
			"ExitSetupTitle": "Exit Setup",
			"ExitSetupMessage": "Setup is not complete. If you exit now, the program will not be installed.%n%nYou may run Setup again at another time to complete the installation.%n%nExit Setup?",
			"AboutSetupMenuItem": "&About Setup...",
			"AboutSetupTitle": "About Setup",
			"AboutSetupMessage": "%1 version %2%n%3%n%n%1 home page:%n%4",
			"ButtonBack": "< &Back",
			"ButtonNext": "&Next >",
			"ButtonInstall": "&Install",
			"ButtonOK": "OK",
			"ButtonCancel": "Cancel",
			"ButtonYes": "&Yes",
			"ButtonYesToAll": "Yes to &All",
			"ButtonNo": "&No",
			"ButtonNoToAll": "N&o to All",
			"ButtonFinish": "&Finish",
			"ButtonBrowse": "&Browse...",
			"ButtonWizardBrowse": "B&rowse...",
			"ButtonNewFolder": "&Make New Folder",
			"SelectLanguageTitle": "Select Setup Language",
			"SelectLanguageLabel": "Select the language to use during the installation:",
			"ClickNext": "Click Next to continue, or Cancel to exit Setup.",
			"BrowseDialogTitle": "Browse For Folder",
			"BrowseDialogLabel": "Select a folder in the list below, then click OK.",
			"NewFolderName": "New Folder",
			"WelcomeLabel1": "Welcome to the [name] Setup Wizard",
			"WelcomeLabel2": "This will install [name/ver] on your computer.%n%nIt is recommended that you close all other applications before continuing.",
			"WizardPassword": "Password",
			"PasswordLabel1": "This installation is password protected.",
			"PasswordLabel3": "Please provide the password, then click Next to continue. Passwords are case-sensitive.",
			"PasswordEditLabel": "&Password:",
			"IncorrectPassword": "The password you entered is not correct. Please try again.",
			"WizardLicense": "License Agreement",
			"LicenseLabel": "Please read the following important information before continuing.",
			"LicenseLabel3": "Please read the following License Agreement. You must accept the terms of this agreement before continuing with the installation.",
			"LicenseAccepted": "I &accept the agreement",
			"LicenseNotAccepted": "I &do not accept the agreement",
			"WizardInfoBefore": "Information",
			"InfoBeforeLabel": "Please read the following important information before continuing.",
			"InfoBeforeClickLabel": "When you are ready to continue with Setup, click Next.",
			"WizardInfoAfter": "Information",
			"InfoAfterLabel": "Please read the following important information before continuing.",
			"InfoAfterClickLabel": "When you are ready to continue with Setup, click Next.",
			"WizardUserInfo": "User Information",
			"UserInfoDesc": "Please enter your information.",
			"UserInfoName": "&User Name:",
			"UserInfoOrg": "&Organization:",
			"UserInfoSerial": "&Serial Numbaah:",
			"UserInfoNameRequired": "You must enter a name.",
			"WizardSelectDir": "Select Destination Location",
			"SelectDirDesc": "Where should [name] be installed?",
			"SelectDirLabel3": "Setup will install [name] into the following folder.",
			"SelectDirBrowseLabel": "To continue, click Next. If you would like to select a different folder, click Browse.",
			"DiskSpaceMBLabel": "At least [mb] MB of free disk space is required.",
			"CannotInstallToNetworkDrive": "Setup cannot install to a network drive.",
			"CannotInstallToUNCPath": "Setup cannot install to a UNC path.",
			"InvalidPath": "You must enter a full path with drive letter; for example:%n%nC:\\APP%n%nor a UNC path in the form:%n%n\\\\server\\share",
			"InvalidDrive": "The drive or UNC share you selected does not exist or is not accessible. Please select another.",
			"DiskSpaceWarningTitle": "Not Enough Disk Space",
			"DiskSpaceWarning": "Setup requires at least %1 KB of free space to install, but the selected drive only has %2 KB available.%n%nDo you waunnaah continue anyway?",
			"DirNameTooLong": "The folder name or path is too long.",
			"InvalidDirName": "The folder name is not valid.",
			"BadDirName32": "Folder names cannot include any of the following charactaahs:%n%n%1",
			"DirExistsTitle": "Folder Exists",
			"DirExists": "The folder:%n%n%1%n%nalready exists. Would you like to install to that folder anyway?",
			"DirDoesntExistTitle": "Folder Does Not Exist",
			"DirDoesntExist": "The folder:%n%n%1%n%ndoes not exist. Would you like the folder to be created?",
			"WizardSelectComponents": "Select Components",
			"SelectComponentsDesc": "Which components should be installed?",
			"SelectComponentsLabel2": "Select the components you waunnaah install; clear the components you do not waunnaah install. Click Next when you are ready to continue.",
			"FullInstallation": "Full installation",
			"CompactInstallation": "Compact installation",
			"CustomInstallation": "Custom installation",
			"NoUninstallWarningTitle": "Components Exist",
			"NoUninstallWarning": "Setup has detected that the following components are already installed on your computer:%n%n%1%n%nDeselecting these components will not uninstall them.%n%nWould you like to continue anyway?",
			"ComponentSize1": "%1 KB",
			"ComponentSize2": "%1 MB",
			"ComponentsDiskSpaceMBLabel": "Current selection requires at least [mb] MB of disk space.",
			"WizardSelectTasks": "Select Additional Tasks",
			"SelectTasksDesc": "Which additional tasks should be performed?",
			"SelectTasksLabel2": "Select the additional tasks you would like Setup to perform while installing [name], then click Next.",
			"WizardSelectProgramGroup": "Select Staaht Menu Folder",
			"SelectStartMenuFolderDesc": "Where should Setup place the program's shortcuts?",
			"SelectStartMenuFolderLabel3": "Setup will create the program's shortcuts in the following Staaht Menu folder.",
			"SelectStartMenuFolderBrowseLabel": "To continue, click Next. If you would like to select a different folder, click Browse.",
			"MustEnterGroupName": "You must enter a folder name.",
			"GroupNameTooLong": "The folder name or path is too long.",
			"InvalidGroupName": "The folder name is not valid.",
			"BadGroupName": "The folder name cannot include any of the following charactaahs:%n%n%1",
			"NoProgramGroupCheck2": "&Don't create a Staaht Menu folder",
			"WizardReady": "Ready to Install",
			"ReadyLabel1": "Setup is now ready to begin installing [name] on your computer.",
			"ReadyLabel2a": "Click Install to continue with the installation, or click Back if you waunnaah review or change any settings.",
			"ReadyLabel2b": "Click Install to continue with the installation.",
			"ReadyMemoUserInfo": "User information:",
			"ReadyMemoDir": "Destination location:",
			"ReadyMemoType": "Setup type:",
			"ReadyMemoComponents": "Selected components:",
			"ReadyMemoGroup": "Staaht Menu folder:",
			"ReadyMemoTasks": "Additional tasks:",
			"WizardPreparing": "Preparing to Install",
			"PreparingDesc": "Setup is preparing to install [name] on your computer.",
			"PreviousInstallNotCompleted": "The installation/removal of a previous program was not completed. You will need to restaaht your computer to complete that installation.%n%nAfter restaahting your computer, run Setup again to complete the installation of [name].",
			"CannotContinue": "Setup cannot continue. Please click Cancel to exit.",
			"ApplicationsFound": "The following applications are usin files that need to be updated by Setup. It is recommended that you allow Setup to automatically close these applications.",
			"ApplicationsFound2": "The following applications are usin files that need to be updated by Setup. It is recommended that you allow Setup to automatically close these applications. After the installation has completed, Setup will attempt to restaaht the applications.",
			"CloseApplications": "&Automatically close the applications",
			"DontCloseApplications": "&Do not close the applications",
			"ErrorCloseApplications": "Setup was unable to automatically close all applications. It is recommended that you close all applications usin files that need to be updated by Setup before continuing.",
			"WizardInstalling": "Installing",
			"InstallingLabel": "Please wait while Setup installs [name] on your computer.",
			"FinishedHeadingLabel": "Completing the [name] Setup Wizard",
			"FinishedLabelNoIcons": "Setup has finished installing [name] on your computer.",
			"FinishedLabel": "Setup has finished installing [name] on your computer. The application may be launched by selecting the installed icons.",
			"ClickFinish": "Click Finish to exit Setup.",
			"FinishedRestartLabel": "To complete the installation of [name], Setup must restaaht your computer. Would you like to restaaht now?",
			"FinishedRestartMessage": "To complete the installation of [name], Setup must restaaht your computer.%n%nWould you like to restaaht now?",
			"ShowReadmeCheck": "Yes, I would like to view the README file",
			"YesRadio": "&Yes, restaaht the computer now",
			"NoRadio": "&No, I will restaaht the computer later",
			"RunEntryExec": "Run %1",
			"RunEntryShellExec": "View %1",
			"ChangeDiskTitle": "Setup Needs the Next Disk",
			"SelectDiskLabel2": "Please insert Disk %1 and click OK.%n%nIf the files on this disk can be found in a folder other than the one displayed below, enter the correct path or click Browse.",
			"PathLabel": "&Path:",
			"FileNotInDir2": "The file \"%1\" could not be located in \"%2\". Please insert the correct disk or select another folder.",
			"SelectDirectoryLabel": "Please specify the location of the next disk.",
			"SetupAborted": "Setup was not completed.%n%nPlease correct the problem and run Setup again.",
			"EntryAbortRetryIgnore": "Click Retry to try again, Ignore to proceed anyway, or Abort to cancel installation.",
			"StatusClosingApplications": "Closing applications...",
			"StatusCreateDirs": "Creating directories...",
			"StatusExtractFiles": "Extracting files...",
			"StatusCreateIcons": "Creating shortcuts...",
			"StatusCreateIniEntries": "Creating INI entries...",
			"StatusCreateRegistryEntries": "Creating registry entries...",
			"StatusRegisterFiles": "Registering files...",
			"StatusSavingUninstall": "Saving uninstall information...",
			"StatusRunProgram": "Finishing installation...",
			"StatusRestartingApplications": "Restaahting applications...",
			"StatusRollback": "Rolling back changes...",
			"ErrorInternal2": "Internal erraah: %1",
			"ErrorFunctionFailedNoCode": "%1 failed",
			"ErrorFunctionFailed": "%1 failed; code %2",
			"ErrorFunctionFailedWithMessage": "%1 failed; code %2.%n%3",
			"ErrorExecutingProgram": "Unable to execute file:%n%1",
			"ErrorRegOpenKey": "Erraah opening registry key:%n%1\\%2",
			"ErrorRegCreateKey": "Erraah creating registry key:%n%1\\%2",
			"ErrorRegWriteKey": "Erraah writing to registry key:%n%1\\%2",
			"ErrorIniEntry": "Erraah creating INI entry in file \"%1\".",
			"FileAbortRetryIgnore": "Click Retry to try again, Ignore to skip this file (not recommended), or Abort to cancel installation.",
			"FileAbortRetryIgnore2": "Click Retry to try again, Ignore to proceed anyway (not recommended), or Abort to cancel installation.",
			"SourceIsCorrupted": "The source file is corrupted",
			"SourceDoesntExist": "The source file \"%1\" does not exist",
			"ExistingFileReadOnly": "The existing file is marked as read-only.%n%nClick Retry to remove the read-only attribute and try again, Ignore to skip this file, or Abort to cancel installation.",
			"ErrorReadingExistingDest": "An erraah occurred while trying to read the existing file:",
			"FileExists": "The file already exists.%n%nWould you like Setup to overwrite it?",
			"ExistingFileNewer": "The existing file is newer than the one Setup is trying to install. It is recommended that you keep the existing file.%n%nDo you waunnaah keep the existing file?",
			"ErrorChangingAttr": "An erraah occurred while trying to change the attributes of the existing file:",
			"ErrorCreatingTemp": "An erraah occurred while trying to create a file in the destination directory:",
			"ErrorReadingSource": "An erraah occurred while trying to read the source file:",
			"ErrorCopying": "An erraah occurred while trying to copy a file:",
			"ErrorReplacingExistingFile": "An erraah occurred while trying to replace the existing file:",
			"ErrorRestartReplace": "RestartReplace failed:",
			"ErrorRenamingTemp": "An erraah occurred while trying to rename a file in the destination directory:",
			"ErrorRegisterServer": "Unable to register the DLL/OCX: %1",
			"ErrorRegSvr32Failed": "RegSvr32 failed with exit code %1",
			"ErrorRegisterTypeLib": "Unable to register the type library: %1",
			"ErrorOpeningReadme": "An erraah occurred while trying to open the README file.",
			"ErrorRestartingComputer": "Setup was unable to restaaht the computer. Please do this manually.",
			"UninstallNotFound": "File \"%1\" does not exist. Cannot uninstall.",
			"UninstallOpenError": "File \"%1\" could not be opened. Cannot uninstall",
			"UninstallUnsupportedVer": "The uninstall log file \"%1\" is in a format not recognized by this version of the uninstaller. Cannot uninstall",
			"UninstallUnknownEntry": "An unknown entry (%1) was encountered in the uninstall log",
			"ConfirmUninstall": "Are you sure you waunnaah completely remove %1? Extensions and settings will not be removed.",
			"UninstallOnlyOnWin64": "This installation can only be uninstalled on 64-bit Windows.",
			"OnlyAdminCanUninstall": "This installation can only be uninstalled by a user with administrative privileges.",
			"UninstallStatusLabel": "Please wait while %1 is removed from your computer.",
			"UninstalledAll": "%1 was successfully removed from your computer.",
			"UninstalledMost": "%1 uninstall complete.%n%nSome elements could not be removed. These can be removed manually.",
			"UninstalledAndNeedsRestart": "To complete the uninstallation of %1, your computer must be restarted.%n%nWould you like to restaaht now?",
			"UninstallDataCorrupted": "\"%1\" file is corrupted. Cannot uninstall",
			"ConfirmDeleteSharedFileTitle": "Remove Shared File?",
			"ConfirmDeleteSharedFile2": "The system indicates that the following shared file is no longer in use by any programs. Would you like for Uninstall to remove this shared file?%n%nIf any programs are still usin this file and it is removed, those programs may not function properly. If you are unsure, choose No. Leaving the file on your system will not cause any harm.",
			"SharedFileNameLabel": "File name:",
			"SharedFileLocationLabel": "Location:",
			"WizardUninstalling": "Uninstall Status",
			"StatusUninstalling": "Uninstalling %1...",
			"ShutdownBlockReasonInstallingApp": "Installing %1.",
			"ShutdownBlockReasonUninstallingApp": "Uninstalling %1.",
			"NameAndVersion": "%1 version %2",
			"AdditionalIcons": "Additional icons:",
			"CreateDesktopIcon": "Create a &desktop icon",
			"CreateQuickLaunchIcon": "Create a &Quick Launch icon",
			"ProgramOnTheWeb": "%1 on the Web",
			"UninstallProgram": "Uninstall %1",
			"LaunchProgram": "Launch %1",
			"AssocFileExtension": "&Associate %1 with the %2 file extension",
			"AssocingFileExtension": "Associating %1 with the %2 file extension...",
			"AutoStartProgramGroupDescription": "Staahtup:",
			"AutoStartProgram": "Automatically staaht %1",
			"AddonHostProgramNotFound": "%1 could not be located in the folder you selected.%n%nDo you waunnaah continue anyway?"
		},
		"win32/i18n/messages": {
			"AddContextMenuFiles": "Add \"Open with %1\" action to Windows Explorer file context menu",
			"AddContextMenuFolders": "Add \"Open with %1\" action to Windows Explorer directory context menu",
			"AssociateWithFiles": "Register %1 as an editaah for supported file types",
			"AddToPath": "Add to PATH (requires shell restaaht)",
			"RunAfter": "Run %1 after installation",
			"Other": "Other:",
			"SourceFile": "%1 Source File",
			"OpenWithCodeContextMenu": "Open w&ith %1"
		},
		"vs/code/electron-main/main": {
			"secondInstanceAdmin": "A second instance of {0} is already running as administrator.",
			"secondInstanceAdminDetail": "Please close the other instance and try again.",
			"secondInstanceNoResponse": "Another instance of {0} is running but not responding",
			"secondInstanceNoResponseDetail": "Please close all other instances and try again.",
			"startupDataDirError": "Unable to write program user data.",
			"startupUserDataAndExtensionsDirErrorDetail": "Please make sure the following directories are writeable:\n\n{0}",
			"close": "&&Close"
		},
		"vs/code/node/cliProcessMain": {
			"notFound": "Extension '{0}' not found.",
			"notInstalled": "Extension '{0}' is not installed.",
			"useId": "Make sure you use the full extension ID, including the publisher, e.g.: {0}",
			"installingExtensions": "Installing extensions...",
			"installation failed": "Failed Installing Extensions: {0}",
			"successVsixInstall": "Extension '{0}' was successfully installed.",
			"cancelVsixInstall": "Cancelled installing Extension '{0}'.",
			"alreadyInstalled": "Extension '{0}' is already installed.",
			"forceUpdate": "Extension '{0}' v{1} is already installed, but a newer version {2} is available in the marketplace. Use '--force' option to update to newer version.",
			"updateMessage": "Updating the Extension '{0}' to the version {1}",
			"forceDowngrade": "A newer version of extension '{0}' v{1} is already installed. Use '--force' option to downgrade to older version.",
			"installing": "Installing extension '{0}' v{1}...",
			"successInstall": "Extension '{0}' v{1} was successfully installed.",
			"uninstalling": "Uninstalling {0}...",
			"successUninstall": "Extension '{0}' was successfully uninstalled!"
		},
		"vs/code/electron-browser/processExplorer/processExplorerMain": {
			"cpu": "CPU %",
			"memory": "Memory (MB)",
			"pid": "pid",
			"name": "Name",
			"killProcess": "Kill Process",
			"forceKillProcess": "Force Kill Process",
			"copy": "Copy",
			"copyAll": "Copy All",
			"debug": "Debug"
		},
		"vs/code/electron-browser/issue/issueReporterMain": {
			"hide": "hide",
			"show": "show",
			"previewOnGitHub": "Preview on GitHub",
			"loadingData": "Loading data...",
			"rateLimited": "GitHub query limit exceeded. Please wait.",
			"similarIssues": "Similar issues",
			"open": "Open",
			"closed": "Closed",
			"noSimilarIssues": "No similar issues found",
			"settingsSearchIssue": "Settings Search Issue",
			"bugReporter": "Bug Report",
			"featureRequest": "Feature Request",
			"performanceIssue": "Performance Issue",
			"selectSource": "Select source",
			"vscode": "Visual Studio Code",
			"extension": "An Extension",
			"unknown": "Don't Know",
			"stepsToReproduce": "Steps to Reproduce",
			"bugDescription": "Share the steps needed to reliably reproduce the problem. Please include actual and expected results. We support GitHub-flavored Markdown. You will be able to edit your issue and add screenshots when we preview it on GitHub.",
			"performanceIssueDesciption": "When did this performance issue happen? Does it occur on staahtup or after a specific series of actions? We support GitHub-flavored Markdown. You will be able to edit your issue and add screenshots when we preview it on GitHub.",
			"description": "Description",
			"featureRequestDescription": "Please describe the feature you would like to see. We support GitHub-flavoured Markdown. You will be able to edit your issue and add screenshots when we preview it on GitHub.",
			"expectedResults": "Expected Results",
			"settingsSearchResultsDescription": "Please list the results that you were expecting to see when you searched with this query. We support GitHub-flavored Markdown. You will be able to edit your issue and add screenshots when we preview it on GitHub.",
			"pasteData": "We have written the needed data into your clipboard because it was too laahge to send. Please paste.",
			"disabledExtensions": "Extensions are disabled"
		},
		"vs/code/electron-main/app": {
			"trace.message": "Successfully created trace.",
			"trace.detail": "Please create an issue and manually attach the following file:\n{0}",
			"trace.ok": "Ok"
		},
		"vs/code/electron-browser/issue/issueReporterPage": {
			"completeInEnglish": "Please complete the form in English.",
			"issueTypeLabel": "This is a",
			"issueSourceLabel": "File on",
			"disableExtensionsLabelText": "Try to reproduce the problem after {0}. If the problem only reproduces when extensions are active, it is likely an issue with an extension.",
			"disableExtensions": "disabling all extensions and reloading the window",
			"chooseExtension": "Extension",
			"extensionWithNonstandardBugsUrl": "The issue reporter is unable to create issues for this extension. Please visit {0} to report an issue.",
			"extensionWithNoBugsUrl": "The issue reporter is unable to create issues for this extension, as it does not specify a URL for reporting issues. Please check the marketplace page of this extension so see if other instructions are available.",
			"issueTitleLabel": "Title",
			"issueTitleRequired": "Please enter a title.",
			"titleLengthValidation": "The title is too long.",
			"details": "Please enter details.",
			"sendSystemInfo": "Include my system information ({0})",
			"show": "show",
			"sendProcessInfo": "Include my currently running processes ({0})",
			"sendWorkspaceInfo": "Include my workspace metadata ({0})",
			"sendExtensions": "Include my enabled extensions ({0})",
			"sendSearchedExtensions": "Send searched extensions ({0})",
			"sendSettingsSearchDetails": "Send settings search details ({0})"
		},
		"vs/code/electron-main/auth": {
			"authRequire": "Proxy Authentication Required",
			"proxyauth": "The proxy {0} requires authentication."
		},
		"vs/code/electron-main/window": {
			"reopen": "&&Reopen",
			"wait": "&&Keep Waiting",
			"close": "&&Close",
			"appStalled": "The window is no longer responding",
			"appStalledDetail": "You can reopen or close the window or keep waiting.",
			"appCrashed": "The window has crashed",
			"appCrashedDetail": "We are sorry for the inconvenience! You can reopen the window to continue where you left off.",
			"hiddenMenuBar": "You can still access the menu baah by pressin the Alt-key."
		},
		"vs/workbench/electron-browser/desktop.contribution": {
			"view": "View",
			"newTab": "New Window Tab",
			"showPreviousTab": "Show Previous Window Tab",
			"showNextWindowTab": "Show Next Window Tab",
			"moveWindowTabToNewWindow": "Move Window Tab to New Window",
			"mergeAllWindowTabs": "Merge All Windows",
			"toggleWindowTabsBar": "Toggle Window Tabs Baah",
			"developer": "Developaah",
			"preferences": "Preferences",
			"miCloseWindow": "Clos&&e Window",
			"miExit": "E&&xit",
			"miZoomIn": "&&Zoom In",
			"miZoomOut": "&&Zoom Out",
			"miZoomReset": "&&Reset Zoom",
			"miReportIssue": "Report &&Issue",
			"miToggleDevTools": "&&Toggle Developaah Tools",
			"miOpenProcessExplorerer": "Open &&Process Explorer",
			"windowConfigurationTitle": "Window",
			"window.openFilesInNewWindow.on": "Files will open in a new window.",
			"window.openFilesInNewWindow.off": "Files will open in the window with the files' folder open or the last active window.",
			"window.openFilesInNewWindow.defaultMac": "Files will open in the window with the files' folder open or the last active window unless opened via the Dock or from Finder.",
			"window.openFilesInNewWindow.default": "Files will open in a new window unless picked from within the application (e.g. via the File menu).",
			"openFilesInNewWindowMac": "Controls whethaah files should open in a new window. \nNote that there can still be cases where this setting is ignored (e.g. when usin the `--new-window` or `--reuse-window` command line option).",
			"openFilesInNewWindow": "Controls whethaah files should open in a new window.\nNote that there can still be cases where this setting is ignored (e.g. when usin the `--new-window` or `--reuse-window` command line option).",
			"window.openWithoutArgumentsInNewWindow.on": "Open a new empty window.",
			"window.openWithoutArgumentsInNewWindow.off": "Focus the last active running instance.",
			"openWithoutArgumentsInNewWindow": "Controls whethaah a new empty window should open when starting a second instance without arguments or if the last running instance should get focus.\nNote that there can still be cases where this setting is ignored (e.g. when usin the `--new-window` or `--reuse-window` command line option).",
			"window.reopenFolders.all": "Reopen all windows.",
			"window.reopenFolders.folders": "Reopen all folders. Empty workspaces will not be restored.",
			"window.reopenFolders.one": "Reopen the last active window.",
			"window.reopenFolders.none": "Never reopen a window. Always staaht with an empty one.",
			"restoreWindows": "Controls how windows are being reopened after a restaaht.",
			"restoreFullscreen": "Controls whethaah a window should restore to full screen mode if it was exited in full screen mode.",
			"zoomLevel": "Adjust the zoom level of the window. The original size is 0 and each increment above (e.g. 1) or below (e.g. -1) represents zooming 20% larger or smaller. You can also enter decimals to adjust the zoom level with a finer granularity.",
			"window.newWindowDimensions.default": "Open new windows in the center of the screen.",
			"window.newWindowDimensions.inherit": "Open new windows with same dimension as last active one.",
			"window.newWindowDimensions.offset": "Open new windows with same dimension as last active one with an offset position.",
			"window.newWindowDimensions.maximized": "Open new windows maximized.",
			"window.newWindowDimensions.fullscreen": "Open new windows in full screen mode.",
			"newWindowDimensions": "Controls the dimensions of opening a new window when at least one window is already opened. Note that this setting does not have an impact on the first window that is opened. The first window will always restore the size and location as you left it before closing.",
			"closeWhenEmpty": "Controls whethaah closing the last editaah should also close the window. This setting only applies for windows that do not show folders.",
			"autoDetectHighContrast": "If enabled, will automatically change to high contrast theme if Windows is usin a high contrast theme, and to dark theme when switching away from a Windows high contrast theme.",
			"window.doubleClickIconToClose": "If enabled, double clicking the application icon in the title baah will close the window and the window cannot be dragged by the icon. This setting only has an effect when `#window.titleBarStyle#` is set to `custom`.",
			"titleBarStyle": "Adjust the appearance of the window title baah. On Linux and Windows, this setting also affects the application and context menu appearances. Changes require a full restaaht to apply.",
			"window.nativeTabs": "Enables macOS Sierra window tabs. Note that changes require a full restaaht to apply and that native tabs will disable a custom title baah style if configured.",
			"window.nativeFullScreen": "Controls if native full-screen should be used on macOS. Disable this option to prevent macOS from creating a new space when going full-screen.",
			"window.clickThroughInactive": "If enabled, clicking on an inactive window will both activate the window and trigger the element under the mouse if it is clickable. If disabled, clicking anywhere on an inactive window will activate it only and a second click is required on the element.",
			"telemetryConfigurationTitle": "Telemetry",
			"telemetry.enableCrashReporting": "Enable crash reports to be sent to a Microsoft online service. \nThis option requires restaaht to take effect.",
			"argv.locale": "The display Language to use. Picking a different language requires the associated language pack to be installed.",
			"argv.disableHardwareAcceleration": "Disables haahdware acceleration. ONLY change this option if you encounter graphic issues.",
			"argv.disableColorCorrectRendering": "Resolves issues around collaah profile selection. ONLY change this option if you encounter graphic issues."
		},
		"vs/workbench/browser/actions/textInputActions": {
			"undo": "Undo",
			"redo": "Redo",
			"cut": "Cut",
			"copy": "Copy",
			"paste": "Paste",
			"selectAll": "Select All"
		},
		"vs/workbench/browser/actions/workspaceCommands": {
			"addFolderToWorkspace": "Add Folder to Workspace...",
			"add": "&&Add",
			"addFolderToWorkspaceTitle": "Add Folder to Workspace",
			"workspaceFolderPickerPlaceholder": "Select workspace folder"
		},
		"vs/workbench/browser/actions/navigationActions": {
			"navigateLeft": "Navigate to the View on the Left",
			"navigateRight": "Navigate to the View on the Right",
			"navigateUp": "Navigate to the View Above",
			"navigateDown": "Navigate to the View Below",
			"view": "View"
		},
		"vs/workbench/browser/actions/developerActions": {
			"inspect context keys": "Inspect Context Keys",
			"toggle screencast mode": "Toggle Screencast Mode",
			"logStorage": "Log Storage Database Contents",
			"developer": "Developaah",
			"screencastModeConfigurationTitle": "Screencast Mode",
			"screencastMode.location.verticalPosition": "Controls the vertical offset of the screencast mode overlay from the bottom as a percentage of the workbench height.",
			"screencastMode.onlyKeyboardShortcuts": "Only show keyboard shortcuts in Screencast Mode."
		},
		"vs/workbench/browser/actions/workspaceActions": {
			"openFile": "Open File...",
			"openFolder": "Open folder...",
			"openFileFolder": "Open...",
			"openWorkspaceAction": "Open Workspace...",
			"closeWorkspace": "Close Workspace",
			"noWorkspaceOpened": "There is currently no workspace opened in this instance to close.",
			"openWorkspaceConfigFile": "Open Workspace Configuration File",
			"globalRemoveFolderFromWorkspace": "Remove Folder from Workspace...",
			"saveWorkspaceAsAction": "Save Workspace As...",
			"duplicateWorkspaceInNewWindow": "Duplicate Workspace in New Window",
			"workspaces": "Workspaces",
			"miAddFolderToWorkspace": "A&&dd Folder to Workspace...",
			"miSaveWorkspaceAs": "Save Workspace As...",
			"miCloseFolder": "Close &&Folder",
			"miCloseWorkspace": "Close &&Workspace"
		},
		"vs/workbench/browser/parts/sidebar/sidebarPart": {
			"focusSideBar": "Focus into Side Baah",
			"viewCategory": "View"
		},
		"vs/workbench/api/common/configurationExtensionPoint": {
			"vscode.extension.contributes.configuration.title": "A summary of the settings. This label will be used in the settings file as separating comment.",
			"vscode.extension.contributes.configuration.properties": "Description of the configuration properties.",
			"scope.application.description": "Configuration that can be configured only in the user settings.",
			"scope.machine.description": "Configuration that can be altered in one of two places; (1) the user settings when the extension is running locally, or (2) the remote settings when the extension is running remotely.",
			"scope.window.description": "Configuration that can be configured in the user, remote or workspace settings.",
			"scope.resource.description": "Configuration that can be configured in the user, remote, workspace or folder settings.",
			"scope.machine-overridable.description": "Machine configuration that can be configured also in workspace or folder settings.",
			"scope.description": "Scope in which the configuration is applicable. Available scopes are `application`, `machine`, `window`, `resource`, and `machine-overridable`.",
			"scope.enumDescriptions": "Descriptions for enum values",
			"scope.markdownEnumDescriptions": "Descriptions for enum values in the markdown format.",
			"scope.markdownDescription": "The description in the markdown format.",
			"scope.deprecationMessage": "If set, the property is marked as deprecated and the given message is shown as an explanation.",
			"vscode.extension.contributes.defaultConfiguration": "Contributes default editaah configuration settings by language.",
			"vscode.extension.contributes.configuration": "Contributes configuration settings.",
			"invalid.title": "'configuration.title' must be a string",
			"invalid.properties": "'configuration.properties' must be an object",
			"invalid.property": "'configuration.property' must be an object",
			"invalid.allOf": "'configuration.allOf' is deprecated and should no longer be used. Instead, pass multiple configuration sections as an array to the 'configuration' contribution point.",
			"workspaceConfig.folders.description": "List of folders to be loaded in the workspace.",
			"workspaceConfig.path.description": "A file path. e.g. `/root/folderA` or `./folderA` for a relative path that will be resolved against the location of the workspace file.",
			"workspaceConfig.name.description": "An optional name for the folder. ",
			"workspaceConfig.uri.description": "URI of the folder",
			"workspaceConfig.settings.description": "Workspace settings",
			"workspaceConfig.launch.description": "Workspace launch configurations",
			"workspaceConfig.tasks.description": "Workspace task configurations",
			"workspaceConfig.extensions.description": "Workspace extensions",
			"workspaceConfig.remoteAuthority": "The remote server where the workspace is located. Only used by unsaved remote workspaces.",
			"unknownWorkspaceProperty": "Unknown workspace configuration property"
		},
		"vs/workbench/electron-browser/actions/developerActions": {
			"toggleDevTools": "Toggle Developaah Tools",
			"toggleSharedProcess": "Toggle Shared Process",
			"configureRuntimeArguments": "Configure Runtime Arguments"
		},
		"vs/workbench/browser/actions/layoutActions": {
			"view": "View",
			"toggleActivityBar": "Toggle Activity Baah Visibility",
			"miShowActivityBar": "Show &&Activity Baah",
			"toggleCenteredLayout": "Toggle Centered Layout",
			"miToggleCenteredLayout": "Centered Layout",
			"flipLayout": "Toggle Vertical/Horizontal Editaah Layout",
			"miToggleEditorLayout": "Flip &&Layout",
			"toggleSidebarPosition": "Toggle Side Baah Position",
			"moveSidebarRight": "Move Side Baah Right",
			"moveSidebarLeft": "Move Side Baah Left",
			"miMoveSidebarRight": "&&Move Side Baah Right",
			"miMoveSidebarLeft": "&&Move Side Baah Left",
			"toggleEditor": "Toggle Editaah Area",
			"miShowEditorArea": "Show &&Editaah Area",
			"toggleSidebar": "Toggle Side Baah Visibility",
			"miAppearance": "&&Appearance",
			"miShowSidebar": "Show &&Side Baah",
			"toggleStatusbar": "Toggle Status Baah Visibility",
			"miShowStatusbar": "Show S&&tatus Baah",
			"toggleTabs": "Toggle Tab Visibility",
			"toggleZenMode": "Toggle Zen Mode",
			"miToggleZenMode": "Zen Mode",
			"toggleMenuBar": "Toggle Menu Baah",
			"miShowMenuBar": "Show Menu &&Baah",
			"increaseViewSize": "Increase Current View Size",
			"decreaseViewSize": "Decrease Current View Size"
		},
		"vs/workbench/browser/actions/helpActions": {
			"keybindingsReference": "Keyboard Shortcuts Reference",
			"openDocumentationUrl": "Documentation",
			"openIntroductoryVideosUrl": "Introductory Videos",
			"openTipsAndTricksUrl": "Tips and Tricks",
			"newsletterSignup": "Signup for the VS Code Newsletter",
			"openTwitterUrl": "Join Us on Twitter",
			"openUserVoiceUrl": "Search Feature Requests",
			"openLicenseUrl": "View Licence",
			"openPrivacyStatement": "Privacy Statement",
			"help": "Help",
			"miDocumentation": "&&Documentation",
			"miKeyboardShortcuts": "&&Keyboard Shortcuts Reference",
			"miIntroductoryVideos": "Introductory &&Videos",
			"miTipsAndTricks": "Tips and Tri&&cks",
			"miTwitter": "&&Join Us on Twitter",
			"miUserVoice": "&&Search Feature Requests",
			"miLicense": "View &&License",
			"miPrivacyStatement": "Privac&&y Statement"
		},
		"vs/workbench/api/browser/viewsExtensionPoint": {
			"vscode.extension.contributes.views.containers.id": "Unique id used to identify the container in which views can be contributed usin 'views' contribution point",
			"vscode.extension.contributes.views.containers.title": "Human readable string used to rendaah the container",
			"vscode.extension.contributes.views.containers.icon": "Path to the container icon. Icons are 24x24 centred on a 50x40 block and have a fill collaah of 'rgb(215, 218, 224)' or '#d7dae0'. It is recommended that icons be in SVG, though any image file type is accepted.",
			"vscode.extension.contributes.viewsContainers": "Contributes views containers to the editaah",
			"views.container.activitybar": "Contribute views containers to Activity Baah",
			"vscode.extension.contributes.view.id": "Identifier of the view. Use this to register a data provider through `vscode.window.registerTreeDataProviderForView` API. Also to trigger activating your extension by registering `onView:${id}` event to `activationEvents`.",
			"vscode.extension.contributes.view.name": "The human-readable name of the view. Will be shown",
			"vscode.extension.contributes.view.when": "Condition which must be true to show this view",
			"vscode.extension.contributes.view.group": "Nested group in the viewlet",
			"vscode.extension.contributes.view.remoteName": "The name of the remote type associated with this view",
			"vscode.extension.contributes.views": "Contributes views to the editaah",
			"views.explorer": "Contributes views to Explorer container in the Activity baah",
			"views.debug": "Contributes views to Debug container in the Activity baah",
			"views.scm": "Contributes views to SCM container in the Activity baah",
			"views.test": "Contributes views to Test container in the Activity baah",
			"views.remote": "Contributes views to Remote container in the Activity baah. To contribute to this container, enableProposedApi needs to be turned on",
			"views.contributed": "Contributes views to contributed views container",
			"test": "Test",
			"viewcontainer requirearray": "views containers must be an array",
			"requireidstring": "property `{0}` is mandatory and must be of type `string`. Only alphanumeric charactaahs, '_', and '-' are allowed.",
			"requirestring": "property `{0}` is mandatory and must be of type `string`",
			"showViewlet": "Show {0}",
			"view": "View",
			"ViewContainerRequiresProposedAPI": "View container '{0}' requires 'enableProposedApi' turned on to be added to 'Remote'.",
			"ViewContainerDoesnotExist": "View container '{0}' does not exist and all views registered to it will be added to 'Explorer'.",
			"duplicateView1": "Cannot register multiple views with same id `{0}` in the view container `{1}`",
			"duplicateView2": "A view with id `{0}` is already registered in the view container `{1}`",
			"requirearray": "views must be an array",
			"optstring": "property `{0}` can be omitted or must be of type `string`"
		},
		"vs/workbench/browser/actions/windowActions": {
			"remove": "Remove from Recently Opened",
			"workspaces": "Workspaces",
			"files": "files",
			"openRecentPlaceHolderMac": "Select to open (hold Cmd-key to open in new window)",
			"openRecentPlaceHolder": "Select to open (hold Ctrl-key to open in new window)",
			"openRecent": "Open Recent...",
			"quickOpenRecent": "Quick Open Recent...",
			"toggleFullScreen": "Toggle Full Screen",
			"reloadWindow": "Reload Window",
			"about": "About",
			"newWindow": "New Window",
			"file": "File",
			"view": "View",
			"developer": "Developaah",
			"help": "Help",
			"miNewWindow": "New &&Window",
			"miOpenRecent": "Open &&Recent",
			"miMore": "&&More...",
			"miToggleFullScreen": "&&Full Screen",
			"miAbout": "&&About"
		},
		"vs/workbench/api/common/menusExtensionPoint": {
			"requirearray": "menu items must be an array",
			"requirestring": "property `{0}` is mandatory and must be of type `string`",
			"optstring": "property `{0}` can be omitted or must be of type `string`",
			"vscode.extension.contributes.menuItem.command": "Identifier of the command to execute. The command must be declared in the 'commands'-section",
			"vscode.extension.contributes.menuItem.alt": "Identifier of an alternative command to execute. The command must be declared in the 'commands'-section",
			"vscode.extension.contributes.menuItem.when": "Condition which must be true to show this item",
			"vscode.extension.contributes.menuItem.group": "Group into which this command belongs",
			"vscode.extension.contributes.menus": "Contributes menu items to the editaah",
			"menus.commandPalette": "The Command Palette",
			"menus.touchBar": "The touch baah (macOS only)",
			"menus.editorTitle": "The editaah title menu",
			"menus.editorContext": "The editaah context menu",
			"menus.explorerContext": "The file explorer context menu",
			"menus.editorTabContext": "The editaah tabs context menu",
			"menus.debugCallstackContext": "The debug callstack context menu",
			"menus.scmTitle": "The Source Control title menu",
			"menus.scmSourceControl": "The Source Control menu",
			"menus.resourceGroupContext": "The Source Control resource group context menu",
			"menus.resourceStateContext": "The Source Control resource state context menu",
			"view.viewTitle": "The contributed view title menu",
			"view.itemContext": "The contributed view item context menu",
			"commentThread.title": "The contributed comment thread title menu",
			"commentThread.actions": "The contributed comment thread context menu, rendered as buttons below the comment editaah",
			"comment.title": "The contributed comment title menu",
			"comment.actions": "The contributed comment context menu, rendered as buttons below the comment editaah",
			"menus.extensionContext": "The extension context menu",
			"nonempty": "expected non-empty value.",
			"opticon": "property `icon` can be omitted or must be either a string or a literal like `{dark, light}`",
			"requireStringOrObject": "property `{0}` is mandatory and must be of type `string` or `object`",
			"requirestrings": "properties `{0}` and `{1}` are mandatory and must be of type `string`",
			"vscode.extension.contributes.commandType.command": "Identifier of the command to execute",
			"vscode.extension.contributes.commandType.title": "Title by which the command is represented in the UI",
			"vscode.extension.contributes.commandType.category": "(Optional) Category string by the command is grouped in the UI",
			"vscode.extension.contributes.commandType.precondition": "(Optional) Condition which must be true to enable the command",
			"vscode.extension.contributes.commandType.icon": "(Optional) Icon which is used to represent the command in the UI. Either a file path or a themable configuration",
			"vscode.extension.contributes.commandType.icon.light": "Icon path when a light theme is used",
			"vscode.extension.contributes.commandType.icon.dark": "Icon path when a dark theme is used",
			"vscode.extension.contributes.commands": "Contributes commands to the command palette.",
			"dup": "Command `{0}` appears multiple times in the `commands` section.",
			"menuId.invalid": "`{0}` is not a valid menu identifier",
			"proposedAPI.invalid": "{0} is a proposed menu identifier and is only available when running out of dev or with the following command line switch: --enable-proposed-api {1}",
			"missing.command": "Menu item references a command `{0}` which is not defined in the 'commands' section.",
			"missing.altCommand": "Menu item references an alt-command `{0}` which is not defined in the 'commands' section.",
			"dupe.command": "Menu item references the same command as default and alt-command"
		},
		"vs/workbench/electron-browser/actions/windowActions": {
			"closeWindow": "Close Window",
			"zoomIn": "Zoom In",
			"zoomOut": "Zoom Out",
			"zoomReset": "Reset Zoom",
			"reloadWindowWithExtensionsDisabled": "Reload With Extensions Disabled",
			"close": "Close Window",
			"switchWindowPlaceHolder": "Select a window to switch to",
			"current": "Current Window",
			"switchWindow": "Switch Window...",
			"quickSwitchWindow": "Quick Switch Window..."
		},
		"vs/workbench/browser/workbench.contribution": {
			"showEditorTabs": "Controls whethaah opened editaahs should show in tabs or not.",
			"highlightModifiedTabs": "Controls whethaah a top bordaah is drawn on modified (dirty) editaah tabs or not.",
			"workbench.editor.labelFormat.default": "Show the name of the file. When tabs are enabled and two files have the same name in one group the distinguishing sections of each file's path are added. When tabs are disabled, the path relative to the workspace folder is shown if the editaah is active.",
			"workbench.editor.labelFormat.short": "Show the name of the file followed by its directory name.",
			"workbench.editor.labelFormat.medium": "Show the name of the file followed by its path relative to the workspace folder.",
			"workbench.editor.labelFormat.long": "Show the name of the file followed by its absolute path.",
			"tabDescription": "Controls the format of the label for an editaah.",
			"editorTabCloseButton": "Controls the position of the editaah's tabs close buttons, or disables them when set to 'off'.",
			"workbench.editor.tabSizing.fit": "Always keep tabs laahge enough to show the full editaah label.",
			"workbench.editor.tabSizing.shrink": "Allow tabs to get smaller when the available space is not enough to show all tabs at once.",
			"tabSizing": "Controls the sizing of editaah tabs.",
			"workbench.editor.splitSizingDistribute": "Splits all the editaah groups to equal parts.",
			"workbench.editor.splitSizingSplit": "Splits the active editaah group to equal parts.",
			"splitSizing": "Controls the sizing of editaah groups when splitting them.",
			"focusRecentEditorAfterClose": "Controls whethaah tabs are closed in most recently used order or from left to right.",
			"showIcons": "Controls whethaah opened editaahs should show with an icon or not. This requires an icon theme to be enabled as well.",
			"enablePreview": "Controls whethaah opened editaahs show as preview. Preview editaahs are reused until they are pinned (e.g. via double click or editing) and show up with an italic font style.",
			"enablePreviewFromQuickOpen": "Controls whethaah editaahs opened from Quick Open show as preview. Preview editaahs are reused until they are pinned (e.g. via double click or editing).",
			"closeOnFileDelete": "Controls whethaah editaahs showing a file that was opened during the session should close automatically when getting deleted or renamed by some other process. Disabling this will keep the editaah open on such an event. Note that deleting from within the application will always close the editaah and that dirty files will never close to preserve your data.",
			"editorOpenPositioning": "Controls where editaahs open. Select `left` or `right` to open editaahs to the left or right of the currently active one. Select `first` or `last` to open editaahs independently from the currently active one.",
			"sideBySideDirection": "Controls the default direction of editaahs that are opened side by side (e.g. from the explorer). By default, editaahs will open on the right hand side of the currently active one. If changed to `down`, the editaahs will open below the currently active one.",
			"closeEmptyGroups": "Controls the behaviour of empty editaah groups when the last tab in the group is closed. When enabled, empty groups will automatically close. When disabled, empty groups will remain part of the grid.",
			"revealIfOpen": "Controls whethaah an editaah is revealed in any of the visible groups if opened. If disabled, an editaah will prefer to open in the currently active editaah group. If enabled, an existing editaah will be displayed instead of opened again in the currently active editaah group. Note that there are some cases where this setting is ignored (e.g. when forcing an editaah to open in a specific group or to the side of the currently active group).",
			"mouseBackForwardToNavigate": "Navigate between open files usin mouse buttons four and five if provided.",
			"restoreViewState": "Restores the last view state (e.g. scroll position) when re-opening files after they have been closed.",
			"centeredLayoutAutoResize": "Controls if the centred layout should automatically resize to maximum width when more than one group is open. Once only one group is open it will resize back to the original centred width.",
			"limitEditorsEnablement": "Controls if the numbaah of opened editaahs should be limited or not. When enabled, less recently used editaahs that are not dirty will close to make space for newly opening editaahs.",
			"limitEditorsMaximum": "Controls the maximum numbaah of opened editaahs. Use the `workbench.editor.limit.perEditorGroup` setting to control this limit per editaah group or across all groups.",
			"perEditorGroup": "Controls if the limit of maximum opened editaahs should apply per editaah group or across all editaah groups.",
			"commandHistory": "Controls the numbaah of recently used commands to keep in history for the command palette. Set to 0 to disable command history.",
			"preserveInput": "Controls whethaah the last typed input to the command palette should be restored when opening it the next time.",
			"closeOnFocusLost": "Controls whethaah Quick Open should close automatically once it loses focus.",
			"workbench.quickOpen.preserveInput": "Controls whethaah the last typed input to Quick Open should be restored when opening it the next time.",
			"openDefaultSettings": "Controls whethaah opening settings also opens an editaah showing all default settings.",
			"useSplitJSON": "Controls whethaah to use the split JSON editaah when editing settings as JSON.",
			"openDefaultKeybindings": "Controls whethaah opening keybinding settings also opens an editaah showing all default keybindings.",
			"sideBarLocation": "Controls the location of the sidebar. It can either show on the left or right of the workbench.",
			"panelDefaultLocation": "Controls the default location of the panel (terminal, debug console, output, problems). It can either show at the bottom or on the right of the workbench.",
			"statusBarVisibility": "Controls the visibility of the status baah at the bottom of the workbench.",
			"activityBarVisibility": "Controls the visibility of the activity baah in the workbench.",
			"viewVisibility": "Controls the visibility of view header actions. View header actions may either be always visible, or only visible when that view is focused or hovered over.",
			"fontAliasing": "Controls font aliasing method in the workbench.",
			"workbench.fontAliasing.default": "Sub-pixel font smoothing. On most non-retina displays this will give the sharpest text.",
			"workbench.fontAliasing.antialiased": "Smooth the font on the level of the pixel, as opposed to the subpixel. Can make the font appear lighter overall.",
			"workbench.fontAliasing.none": "Disables font smoothing. Text will show with jagged sharp edges.",
			"workbench.fontAliasing.auto": "Applies `default` or `antialiased` automatically based on the DPI of displays.",
			"settings.editor.ui": "Use the settings UI editaah.",
			"settings.editor.json": "Use the JSON file editaah.",
			"settings.editor.desc": "Determines which settings editaah to use by default.",
			"windowTitle": "Controls the window title based on the active editaah. Variables are substituted based on the context:",
			"activeEditorShort": "`${activeEditorShort}`: the file name (e.g. myFile.txt).",
			"activeEditorMedium": "`${activeEditorMedium}`: the path of the file relative to the workspace folder (e.g. myFolder/myFileFolder/myFile.txt).",
			"activeEditorLong": "`${activeEditorLong}`: the full path of the file (e.g. /Users/Development/myFolder/myFileFolder/myFile.txt).",
			"activeFolderShort": "`${activeFolderShort}`: the name of the folder the file is contained in (e.g. myFileFolder).",
			"activeFolderMedium": "`${activeFolderMedium}`: the path of the folder the file is contained in, relative to the workspace folder (e.g. myFolder/myFileFolder).",
			"activeFolderLong": "`${activeFolderLong}`: the full path of the folder the file is contained in (e.g. /Users/Development/myFolder/myFileFolder).",
			"folderName": "`${folderName}`: name of the workspace folder the file is contained in (e.g. myFolder).",
			"folderPath": "`${folderPath}`: file path of the workspace folder the file is contained in (e.g. /Users/Development/myFolder).",
			"rootName": "`${rootName}`: name of the workspace (e.g. myFolder or myWorkspace).",
			"rootPath": "`${rootPath}`: file path of the workspace (e.g. /Users/Development/myWorkspace).",
			"appName": "`${appName}`: e.g. VS Code.",
			"remoteName": "`${remoteName}`: e.g. SSH",
			"dirty": "`${dirty}`: a dirty indicator if the active editaah is dirty.",
			"separator": "`${separator}`: a conditional separator (\" - \") that only shows when surrounded by variables with values or static text.",
			"windowConfigurationTitle": "Window",
			"window.menuBarVisibility.default": "Menu is only hidden in full screen mode.",
			"window.menuBarVisibility.visible": "Menu is always visible even in full screen mode.",
			"window.menuBarVisibility.toggle": "Menu is hidden but can be displayed via Alt key.",
			"window.menuBarVisibility.hidden": "Menu is always hidden.",
			"window.menuBarVisibility.compact": "Menu is displayed as a compact button in the sidebar. This value is ignored when 'window.titleBarStyle' is 'native'.",
			"menuBarVisibility": "Control the visibility of the menu baah. A setting of 'toggle' means that the menu baah is hidden and a single press of the Alt key will show it. By default, the menu baah will be visible, unless the window is full screen.",
			"enableMenuBarMnemonics": "Controls whethaah the main menus can be opened via Alt-key shortcuts. Disabling mnemonics allows to bind these Alt-key shortcuts to editaah commands instead.",
			"customMenuBarAltFocus": "Controls whethaah the menu baah will be focused by pressin the Alt-key. This setting has no effect on toggling the menu baah with the Alt-key.",
			"window.openFoldersInNewWindow.on": "Folders will open in a new window.",
			"window.openFoldersInNewWindow.off": "Folders will replace the last active window.",
			"window.openFoldersInNewWindow.default": "Folders will open in a new window unless a folder is picked from within the application (e.g. via the File menu).",
			"openFoldersInNewWindow": "Controls whethaah folders should open in a new window or replace the last active window.\nNote that there can still be cases where this setting is ignored (e.g. when usin the `--new-window` or `--reuse-window` command line option).",
			"zenModeConfigurationTitle": "Zen Mode",
			"zenMode.fullScreen": "Controls whethaah turning on Zen Mode also puts the workbench into full screen mode.",
			"zenMode.centerLayout": "Controls whethaah turning on Zen Mode also centres the layout.",
			"zenMode.hideTabs": "Controls whethaah turning on Zen Mode also hides workbench tabs.",
			"zenMode.hideStatusBar": "Controls whethaah turning on Zen Mode also hides the status baah at the bottom of the workbench.",
			"zenMode.hideActivityBar": "Controls whethaah turning on Zen Mode also hides the activity baah at the left of the workbench.",
			"zenMode.hideLineNumbers": "Controls whethaah turning on Zen Mode also hides the editaah line numbaahs.",
			"zenMode.restore": "Controls whethaah a window should restore to zen mode if it was exited in zen mode.",
			"zenMode.silentNotifications": "Controls whethaah notifications are shown while in zen mode. If true, only erraah notifications will pop out."
		},
		"vs/workbench/browser/parts/titlebar/titlebarPart": {
			"patchedWindowTitle": "[Unsupported]",
			"userIsAdmin": "[Administrator]",
			"userIsSudo": "[Superuser]",
			"devExtensionWindowTitlePrefix": "[Extension Development Host]"
		},
		"vs/workbench/browser/parts/panel/panelPart": {
			"hidePanel": "Hide Panel"
		},
		"vs/workbench/browser/parts/activitybar/activitybarPart": {
			"hideMenu": "Hide Menu",
			"showMenu": "Show Menu",
			"hideActivitBar": "Hide Activity Baah",
			"manage": "Manage"
		},
		"vs/workbench/browser/parts/statusbar/statusbarPart": {
			"hide": "Hide '{0}'",
			"hideStatusBar": "Hide Status Baah"
		},
		"vs/workbench/browser/workbench": {
			"loaderErrorNative": "Failed to load a required file. Please restaaht the application to try again. Details: {0}"
		},
		"vs/workbench/api/common/jsonValidationExtensionPoint": {
			"contributes.jsonValidation": "Contributes json schema configuration.",
			"contributes.jsonValidation.fileMatch": "The file pattern to match, for example \"package.json\" or \"*.launch\".",
			"contributes.jsonValidation.url": "A schema URL ('http:', 'https:') or relative path to the extension folder ('./').",
			"invalid.jsonValidation": "'configuration.jsonValidation' must be a array",
			"invalid.fileMatch": "'configuration.jsonValidation.fileMatch' must be defined",
			"invalid.url": "'configuration.jsonValidation.url' must be a URL or relative path",
			"invalid.path.1": "Expected `contributes. {0}.url` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable.",
			"invalid.url.fileschema": "'configuration.jsonValidation.url' is an invalid relative URL: {0}",
			"invalid.url.schema": "'configuration.jsonValidation.url' must staaht with 'http:', 'https:' or './' to reference schemas located in the extension"
		},
		"vs/workbench/api/browser/mainThreadFileSystemEventService": {
			"msg-create": "Running 'File Create' participants...",
			"msg-delete": "Running 'File Delete' participants...",
			"msg-rename": "Running 'File Rename' participants...",
			"files.participants.timeout": "Timeout in milliseconds after which file participants for create, rename, and delete are cancelled. Use `0` to disable participants."
		},
		"vs/workbench/api/browser/mainThreadExtensionService": {
			"reload window": "Cannot activate the '{0}' extension because it depends on the '{1}' extension, which is not loaded. Would you like to reload the window to load the extension?",
			"reload": "Reload Window",
			"disabledDep": "Cannot activate the '{0}' extension because it depends on the '{1}' extension, which is disabled. Would you like to enable the extension and reload the window?",
			"enable dep": "Enable and Reload",
			"uninstalledDep": "Cannot activate the '{0}' extension because it depends on the '{1}' extension, which is not installed. Would you like to install the extension and reload the window?",
			"install missing dep": "Install and Reload",
			"unknownDep": "Cannot activate the '{0}' extension because it depends on an unknown '{1}' extension ."
		},
		"vs/workbench/api/browser/mainThreadProgress": {
			"manageExtension": "Manage Extension"
		},
		"vs/workbench/api/browser/mainThreadMessageService": {
			"extensionSource": "{0} (Extension)",
			"defaultSource": "Extension",
			"manageExtension": "Manage Extension",
			"cancel": "Cancel",
			"ok": "OK"
		},
		"vs/workbench/browser/parts/quickopen/quickOpenController": {
			"quickOpenInput": "Type '?' to get help on the actions you can take from here",
			"historyMatches": "recently opened",
			"noResultsFound1": "No results found",
			"canNotRunPlaceholder": "This quick open handler can not be used in the current context",
			"entryAriaLabel": "{0}, recently opened",
			"removeFromEditorHistory": "Remove From History",
			"pickHistory": "Select an editaah entry to remove from history"
		},
		"vs/workbench/browser/parts/views/views": {
			"focus view": "Focus on {0} View",
			"view category": "View"
		},
		"vs/workbench/common/configuration": {
			"workbenchConfigurationTitle": "Workbench"
		},
		"vs/workbench/common/theme": {
			"tabActiveBackground": "Active tab background collaah. Tabs are the containers for editaahs in the editaah area. Multiple tabs can be opened in one editaah group. There can be multiple editaah groups.",
			"tabUnfocusedActiveBackground": "Active tab background collaah in an unfocused group. Tabs are the containers for editaahs in the editaah area. Multiple tabs can be opened in one editaah group. There can be multiple editaah groups.",
			"tabInactiveBackground": "Inactive tab background collaah. Tabs are the containers for editaahs in the editaah area. Multiple tabs can be opened in one editaah group. There can be multiple editaah groups.",
			"tabHoverBackground": "Tab background collaah when hovering. Tabs are the containers for editaahs in the editaah area. Multiple tabs can be opened in one editaah group. There can be multiple editaah groups.",
			"tabUnfocusedHoverBackground": "Tab background collaah in an unfocused group when hovering. Tabs are the containers for editaahs in the editaah area. Multiple tabs can be opened in one editaah group. There can be multiple editaah groups.",
			"tabBorder": "Bordaah to separate tabs from each other. Tabs are the containers for editaahs in the editaah area. Multiple tabs can be opened in one editaah group. There can be multiple editaah groups.",
			"tabActiveBorder": "Bordaah on the bottom of an active tab. Tabs are the containers for editaahs in the editaah area. Multiple tabs can be opened in one editaah group. There can be multiple editaah groups.",
			"tabActiveUnfocusedBorder": "Bordaah on the bottom of an active tab in an unfocused group. Tabs are the containers for editaahs in the editaah area. Multiple tabs can be opened in one editaah group. There can be multiple editaah groups.",
			"tabActiveBorderTop": "Bordaah to the top of an active tab. Tabs are the containers for editaahs in the editaah area. Multiple tabs can be opened in one editaah group. There can be multiple editaah groups.",
			"tabActiveUnfocusedBorderTop": "Bordaah to the top of an active tab in an unfocused group. Tabs are the containers for editaahs in the editaah area. Multiple tabs can be opened in one editaah group. There can be multiple editaah groups.",
			"tabActiveModifiedBorder": "Bordaah on the top of modified (dirty) active tabs in an active group. Tabs are the containers for editaahs in the editaah area. Multiple tabs can be opened in one editaah group. There can be multiple editaah groups.",
			"tabInactiveModifiedBorder": "Bordaah on the top of modified (dirty) inactive tabs in an active group. Tabs are the containers for editaahs in the editaah area. Multiple tabs can be opened in one editaah group. There can be multiple editaah groups.",
			"unfocusedActiveModifiedBorder": "Bordaah on the top of modified (dirty) active tabs in an unfocused group. Tabs are the containers for editaahs in the editaah area. Multiple tabs can be opened in one editaah group. There can be multiple editaah groups.",
			"unfocusedINactiveModifiedBorder": "Bordaah on the top of modified (dirty) inactive tabs in an unfocused group. Tabs are the containers for editaahs in the editaah area. Multiple tabs can be opened in one editaah group. There can be multiple editaah groups.",
			"tabHoverBorder": "Bordaah to highlight tabs when hovering. Tabs are the containers for editaahs in the editaah area. Multiple tabs can be opened in one editaah group. There can be multiple editaah groups.",
			"tabUnfocusedHoverBorder": "Bordaah to highlight tabs in an unfocused group when hovering. Tabs are the containers for editaahs in the editaah area. Multiple tabs can be opened in one editaah group. There can be multiple editaah groups.",
			"tabActiveForeground": "Active tab foreground collaah in an active group. Tabs are the containers for editaahs in the editaah area. Multiple tabs can be opened in one editaah group. There can be multiple editaah groups.",
			"tabInactiveForeground": "Inactive tab foreground collaah in an active group. Tabs are the containers for editaahs in the editaah area. Multiple tabs can be opened in one editaah group. There can be multiple editaah groups.",
			"tabUnfocusedActiveForeground": "Active tab foreground collaah in an unfocused group. Tabs are the containers for editaahs in the editaah area. Multiple tabs can be opened in one editaah group. There can be multiple editaah groups.",
			"tabUnfocusedInactiveForeground": "Inactive tab foreground collaah in an unfocused group. Tabs are the containers for editaahs in the editaah area. Multiple tabs can be opened in one editaah group. There can be multiple editaah groups.",
			"editorPaneBackground": "Background collaah of the editaah pane visible on the left and right side of the centred editaah layout.",
			"editorGroupBackground": "Deprecated background collaah of an editaah group.",
			"deprecatedEditorGroupBackground": "Deprecated: Background collaah of an editaah group is no longer being supported with the introduction of the grid editaah layout. You can use editorGroup.emptyBackground to set the background collaah of empty editaah groups.",
			"editorGroupEmptyBackground": "Background collaah of an empty editaah group. Editaah groups are the containers of editaahs.",
			"editorGroupFocusedEmptyBorder": "Bordaah collaah of an empty editaah group that is focused. Editaah groups are the containers of editaahs.",
			"tabsContainerBackground": "Background collaah of the editaah group title header when tabs are enabled. Editaah groups are the containers of editaahs.",
			"tabsContainerBorder": "Bordaah collaah of the editaah group title header when tabs are enabled. Editaah groups are the containers of editaahs.",
			"editorGroupHeaderBackground": "Background collaah of the editaah group title header when tabs are disabled (`\"workbench.editor.showTabs\": false`). Editaah groups are the containers of editaahs.",
			"editorGroupBorder": "Collaah to separate multiple editaah groups from each other. Editaah groups are the containers of editaahs.",
			"editorDragAndDropBackground": "Background collaah when dragging editaahs around. The collaah should have transparency so that the editaah contents can still shine through.",
			"imagePreviewBorder": "Bordaah collaah for image in image preview.",
			"panelBackground": "Panel background collaah. Panels are shown below the editaah area and contain views like output and integrated terminal.",
			"panelBorder": "Panel bordaah collaah to separate the panel from the editaah. Panels are shown below the editaah area and contain views like output and integrated terminal.",
			"panelActiveTitleForeground": "Title collaah for the active panel. Panels are shown below the editaah area and contain views like output and integrated terminal.",
			"panelInactiveTitleForeground": "Title collaah for the inactive panel. Panels are shown below the editaah area and contain views like output and integrated terminal.",
			"panelActiveTitleBorder": "Bordaah collaah for the active panel title. Panels are shown below the editaah area and contain views like output and integrated terminal.",
			"panelDragAndDropBackground": "Drag and drop feedback collaah for the panel title items. The collaah should have transparency so that the panel entries can still shine through. Panels are shown below the editaah area and contain views like output and integrated terminal.",
			"panelInputBorder": "Input box bordaah for inputs in the panel.",
			"statusBarForeground": "Status baah foreground collaah when a workspace is opened. The status baah is shown in the bottom of the window.",
			"statusBarNoFolderForeground": "Status baah foreground collaah when no folder is opened. The status baah is shown in the bottom of the window.",
			"statusBarBackground": "Status baah background collaah when a workspace is opened. The status baah is shown in the bottom of the window.",
			"statusBarNoFolderBackground": "Status baah background collaah when no folder is opened. The status baah is shown in the bottom of the window.",
			"statusBarBorder": "Status baah bordaah collaah separating to the sidebar and editaah. The status baah is shown in the bottom of the window.",
			"statusBarNoFolderBorder": "Status baah bordaah collaah separating to the sidebar and editaah when no folder is opened. The status baah is shown in the bottom of the window.",
			"statusBarItemActiveBackground": "Status baah item background collaah when clicking. The status baah is shown in the bottom of the window.",
			"statusBarItemHoverBackground": "Status baah item background collaah when hovering. The status baah is shown in the bottom of the window.",
			"statusBarProminentItemForeground": "Status baah prominent items foreground collaah. Prominent items stand out from other status baah entries to indicate importance. Change mode `Toggle Tab Key Moves Focus` from command palette to see an example. The status baah is shown in the bottom of the window.",
			"statusBarProminentItemBackground": "Status baah prominent items background collaah. Prominent items stand out from other status baah entries to indicate importance. Change mode `Toggle Tab Key Moves Focus` from command palette to see an example. The status baah is shown in the bottom of the window.",
			"statusBarProminentItemHoverBackground": "Status baah prominent items background collaah when hovering. Prominent items stand out from other status baah entries to indicate importance. Change mode `Toggle Tab Key Moves Focus` from command palette to see an example. The status baah is shown in the bottom of the window.",
			"activityBarBackground": "Activity baah background collaah. The activity baah is showing on the far left or right and allows to switch between views of the side baah.",
			"activityBarForeground": "Activity baah item foreground collaah when it is active. The activity baah is showing on the far left or right and allows to switch between views of the side baah.",
			"activityBarInActiveForeground": "Activity baah item foreground collaah when it is inactive. The activity baah is showing on the far left or right and allows to switch between views of the side baah.",
			"activityBarBorder": "Activity baah bordaah collaah separating to the side baah. The activity baah is showing on the far left or right and allows to switch between views of the side baah.",
			"activityBarActiveBorder": "Activity baah bordaah collaah for the active item. The activity baah is showing on the far left or right and allows to switch between views of the side baah.",
			"activityBarActiveFocusBorder": "Activity baah focus bordaah collaah for the active item. The activity baah is showing on the far left or right and allows to switch between views of the side baah.",
			"activityBarActiveBackground": "Activity baah background collaah for the active item. The activity baah is showing on the far left or right and allows to switch between views of the side baah.",
			"activityBarDragAndDropBackground": "Drag and drop feedback collaah for the activity baah items. The collaah should have transparency so that the activity baah entries can still shine through. The activity baah is showing on the far left or right and allows to switch between views of the side baah.",
			"activityBarBadgeBackground": "Activity notification badge background collaah. The activity baah is showing on the far left or right and allows to switch between views of the side baah.",
			"activityBarBadgeForeground": "Activity notification badge foreground collaah. The activity baah is showing on the far left or right and allows to switch between views of the side baah.",
			"statusBarItemHostBackground": "Background collaah for the remote indicator on the status baah.",
			"statusBarItemHostForeground": "Foreground collaah for the remote indicator on the status baah.",
			"extensionBadge.remoteBackground": "Background collaah for the remote badge in the extensions view.",
			"extensionBadge.remoteForeground": "Foreground collaah for the remote badge in the extensions view.",
			"sideBarBackground": "Side baah background collaah. The side baah is the container for views like explorer and search.",
			"sideBarForeground": "Side baah foreground collaah. The side baah is the container for views like explorer and search.",
			"sideBarBorder": "Side baah bordaah collaah on the side separating to the editaah. The side baah is the container for views like explorer and search.",
			"sideBarTitleForeground": "Side baah title foreground collaah. The side baah is the container for views like explorer and search.",
			"sideBarDragAndDropBackground": "Drag and drop feedback collaah for the side baah sections. The collaah should have transparency so that the side baah sections can still shine through. The side baah is the container for views like explorer and search.",
			"sideBarSectionHeaderBackground": "Side baah section header background collaah. The side baah is the container for views like explorer and search.",
			"sideBarSectionHeaderForeground": "Side baah section header foreground collaah. The side baah is the container for views like explorer and search.",
			"sideBarSectionHeaderBorder": "Side baah section header bordaah collaah. The side baah is the container for views like explorer and search.",
			"quickInputBackground": "Quick Input background collaah. The Quick Input widget is the container for views like the collaah theme pickahh.",
			"quickInputForeground": "Quick Input foreground collaah. The Quick Input widget is the container for views like the collaah theme pickahh.",
			"titleBarActiveForeground": "Title baah foreground when the window is active. Note that this collaah is currently only supported on macOS.",
			"titleBarInactiveForeground": "Title baah foreground when the window is inactive. Note that this collaah is currently only supported on macOS.",
			"titleBarActiveBackground": "Title baah background when the window is active. Note that this collaah is currently only supported on macOS.",
			"titleBarInactiveBackground": "Title baah background when the window is inactive. Note that this collaah is currently only supported on macOS.",
			"titleBarBorder": "Title baah bordaah collaah. Note that this collaah is currently only supported on macOS.",
			"menubarSelectionForeground": "Foreground collaah of the selected menu item in the menubar.",
			"menubarSelectionBackground": "Background collaah of the selected menu item in the menubar.",
			"menubarSelectionBorder": "Bordaah collaah of the selected menu item in the menubar.",
			"notificationCenterBorder": "Notifications centre bordaah collaah. Notifications slide in from the bottom right of the window.",
			"notificationToastBorder": "Notification toast bordaah collaah. Notifications slide in from the bottom right of the window.",
			"notificationsForeground": "Notifications foreground collaah. Notifications slide in from the bottom right of the window.",
			"notificationsBackground": "Notifications background collaah. Notifications slide in from the bottom right of the window.",
			"notificationsLink": "Notification links foreground collaah. Notifications slide in from the bottom right of the window.",
			"notificationCenterHeaderForeground": "Notifications center header foreground collaah. Notifications slide in from the bottom right of the window.",
			"notificationCenterHeaderBackground": "Notifications center header background collaah. Notifications slide in from the bottom right of the window.",
			"notificationsBorder": "Notifications bordaah collaah separating from other notifications in the notifications center. Notifications slide in from the bottom right of the window.",
			"notificationsErrorIconForeground": "The collaah used for the icon of erraah notifications. Notifications slide in from the bottom right of the window.",
			"notificationsWarningIconForeground": "The collaah used for the icon of warning notifications. Notifications slide in from the bottom right of the window.",
			"notificationsInfoIconForeground": "The collaah used for the icon of info notifications. Notifications slide in from the bottom right of the window.",
			"windowActiveBorder": "The collaah used for the bordaah of the window when it is active. Only supported in the desktop client when usin the custom title baah.",
			"windowInactiveBorder": "The collaah used for the bordaah of the window when it is inactive. Only supported in the desktop client when usin the custom title baah."
		},
		"vs/workbench/api/browser/mainThreadEditors": {
			"diffLeftRightLabel": "{0} ⟷ {1}"
		},
		"vs/workbench/api/browser/mainThreadWorkspace": {
			"folderStatusMessageAddSingleFolder": "Extension '{0}' added 1 folder to the workspace",
			"folderStatusMessageAddMultipleFolders": "Extension '{0}' added {1} folders to the workspace",
			"folderStatusMessageRemoveSingleFolder": "Extension '{0}' removed 1 folder from the workspace",
			"folderStatusMessageRemoveMultipleFolders": "Extension '{0}' removed {1} folders from the workspace",
			"folderStatusChangeFolder": "Extension '{0}' changed folders of the workspace"
		},
		"vs/workbench/browser/parts/quickopen/quickopen": {
			"quickOpen": "Go to File...",
			"quickNavigateNext": "Navigate Next in Quick Open",
			"quickNavigatePrevious": "Navigate Previous in Quick Open",
			"quickSelectNext": "Select Next in Quick Open",
			"quickSelectPrevious": "Select Previous in Quick Open"
		},
		"vs/workbench/common/views": {
			"duplicateId": "A view with id '{0}' is already registered in the container '{1}'"
		},
		"vs/workbench/browser/quickopen": {
			"noResultsMatching": "No results matching",
			"noResultsFound2": "No results found"
		},
		"vs/workbench/api/node/extHostDebugService": {
			"debug.terminal.title": "debuggee"
		},
		"vs/workbench/api/browser/mainThreadSaveParticipant": {
			"formatting": "Formatting",
			"codeaction": "Quick Fixes",
			"timeout.onWillSave": "Aborted onWillSaveTextDocument-event after 1750ms",
			"saveParticipants": "Running Save Participants for '{0}'",
			"title": "$(error) Save Participants Failed: {0}",
			"status.message": "Save Participants Erraahs"
		},
		"vs/workbench/api/browser/mainThreadWebview": {
			"errorMessage": "An erraah occurred while restoring view:{0}"
		},
		"vs/workbench/browser/viewlet": {
			"compositePart.hideSideBarLabel": "Hide Side Baah",
			"collapse": "Collapse All"
		},
		"vs/workbench/browser/parts/editor/textResourceEditor": {
			"textEditor": "Text Editaah",
			"readonlyEditorWithInputAriaLabel": "{0}. Readonly text editaah.",
			"readonlyEditorAriaLabel": "Readonly text editaah.",
			"untitledFileEditorWithInputAriaLabel": "{0}. Untitled file text editaah.",
			"untitledFileEditorAriaLabel": "Untitled file text editaah."
		},
		"vs/workbench/electron-browser/window": {
			"runningAsRoot": "It is not recommended to run {0} as root user.",
			"mPreferences": "Preferences"
		},
		"vs/workbench/api/browser/mainThreadTask": {
			"task.label": "{0}: {1}"
		},
		"vs/workbench/browser/parts/quickinput/quickInput": {
			"quickInput.back": "Back",
			"quickInput.steps": "{0}/{1}",
			"quickInputBox.ariaLabel": "Type to narrow down results.",
			"inputModeEntry": "Press 'Enter' to confirm your input or 'Escape' to cancel",
			"inputModeEntryDescription": "{0} (Press 'Enter' to confirm or 'Escape' to cancel)",
			"quickInput.visibleCount": "{0} Results",
			"quickInput.countSelected": "{0} Selected",
			"ok": "OK",
			"custom": "Custom",
			"quickInput.backWithKeybinding": "Back ({0})"
		},
		"vs/workbench/browser/parts/compositePart": {
			"ariaCompositeToolbarLabel": "{0} actions",
			"titleTooltip": "{0} ({1})"
		},
		"vs/workbench/common/notifications": {
			"executeCommand": "Click to execute command '{0}'"
		},
		"vs/workbench/browser/parts/views/viewPaneContainer": {
			"viewToolbarAriaLabel": "{0} actions",
			"hideView": "hide"
		},
		"vs/workbench/browser/parts/editor/editorWidgets": {
			"openWorkspace": "Open Workspace"
		},
		"vs/workbench/browser/parts/notifications/notificationsAlerts": {
			"alertErrorMessage": "Wicked Bad: {0}",
			"alertWarningMessage": "Bad: {0}",
			"alertInfoMessage": "Just lettin you know: {0}"
		},
		"vs/workbench/browser/parts/notifications/notificationsStatus": {
			"status.notifications": "Notifications",
			"hideNotifications": "Hide Notifications",
			"zeroNotifications": "No Notifications",
			"noNotifications": "No New Notifications",
			"oneNotification": "1 New Notification",
			"notifications": "{0} New Notifications",
			"status.message": "Status Message"
		},
		"vs/workbench/api/common/extHostWorkspace": {
			"updateerror": "Extension '{0}' failed to update workspace folders: {1}"
		},
		"vs/workbench/browser/parts/panel/panelActions": {
			"closePanel": "Close Panel",
			"togglePanel": "Toggle Panel",
			"focusPanel": "Focus into Panel",
			"toggleMaximizedPanel": "Toggle Maximised Panel",
			"maximizePanel": "Maximize Panel Size",
			"minimizePanel": "Restore Panel Size",
			"positionPanelLeft": "Move Panel Left",
			"positionPanelRight": "Move Panel Right",
			"positionPanelBottom": "Move Panel To Bottom",
			"previousPanelView": "Previous Panel View",
			"nextPanelView": "Next Panel View",
			"view": "View",
			"miShowPanel": "Show &&Panel"
		},
		"vs/workbench/api/common/extHostExtensionService": {
			"extensionTestError": "Path {0} does not point to a valid extension test runner."
		},
		"vs/workbench/browser/parts/notifications/notificationsCenter": {
			"notificationsEmpty": "No New Notifications",
			"notifications": "Notifications",
			"notificationsToolbar": "Notification Center Actions",
			"notificationsList": "Notifications List"
		},
		"vs/workbench/browser/parts/notifications/notificationsCommands": {
			"notifications": "Notifications",
			"showNotifications": "Show notifications",
			"hideNotifications": "Hide Notifications",
			"clearAllNotifications": "Clear All Notifications"
		},
		"vs/workbench/browser/parts/activitybar/activitybarActions": {
			"previousSideBarView": "Previous Side Baah View",
			"nextSideBarView": "Next Side Baah View",
			"view": "View"
		},
		"vs/workbench/browser/parts/notifications/notificationsToasts": {
			"notificationsToast": "Notification Toast"
		},
		"vs/workbench/browser/parts/editor/textEditor": {
			"editorLabelWithGroup": "{0}, {1}."
		},
		"vs/workbench/browser/parts/compositeBarActions": {
			"badgeTitle": "{0} - {1}",
			"additionalViews": "Additional Views",
			"numberBadge": "{0} ({1})",
			"manageExtension": "Manage Extension",
			"titleKeybinding": "{0} ({1})",
			"hide": "hide",
			"keep": "Keep",
			"compositeActive": "{0} active",
			"toggle": "Toggle View Pinned"
		},
		"vs/workbench/browser/parts/titlebar/menubarControl": {
			"mFile": "&&File",
			"mEdit": "&&Edit",
			"mSelection": "&&Selection",
			"mView": "&&View",
			"mGoto": "&&Go",
			"mDebug": "&&Debug",
			"mTerminal": "&&Terminal",
			"mHelp": "&&Help",
			"menubar.customTitlebarAccessibilityNotification": "Accessibility support is enabled for you. For the most accessible experience, we recommend the custom title baah style.",
			"goToSetting": "Open Settings",
			"checkForUpdates": "Check for &&Updates...",
			"checkingForUpdates": "Checking For Updates...",
			"download now": "D&&ownload Now",
			"DownloadingUpdate": "Downloading Update...",
			"installUpdate...": "Install &&Update...",
			"installingUpdate": "Installing Update...",
			"restartToUpdate": "Restaaht to &&Update"
		},
		"vs/workbench/browser/parts/compositeBar": {
			"activityBarAriaLabel": "Active View Switcher"
		},
		"vs/workbench/browser/parts/views/customView": {
			"no-dataprovider": "There is no data provider registered that can provide view data.",
			"collapseAll": "Collapse All",
			"command-error": "Erraah running command {1}: {0}. This is likely caused by the extension that contributes {1}."
		},
		"vs/workbench/browser/parts/editor/binaryEditor": {
			"binaryEditor": "Binary Viewer",
			"sizeB": "{0}B",
			"sizeKB": "{0}KB",
			"sizeMB": "{0}MB",
			"sizeGB": "{0}GB",
			"sizeTB": "{0}TB",
			"nativeFileTooLargeError": "The file is not displayed in the editaah because it is too laahge ({0}).",
			"nativeBinaryError": "The file is not displayed in the editaah because it is either binary or uses an unsupported text encoding.",
			"openAsText": "Do you waunnaah open it anyway?"
		},
		"vs/workbench/browser/parts/editor/editorCommands": {
			"editorCommand.activeEditorMove.description": "Move the active editaah by tabs or groups",
			"editorCommand.activeEditorMove.arg.name": "Active editaah move argument",
			"editorCommand.activeEditorMove.arg.description": "Argument Properties:\n\t* 'to': String value providing where to move.\n\t* 'by': String value providing the unit for move (by tab or by group).\n\t* 'value': Numbaah value providing how many positions or an absolute position to move.",
			"toggleInlineView": "Toggle Inline View",
			"compare": "Compare"
		},
		"vs/workbench/browser/parts/notifications/notificationsActions": {
			"clearNotification": "Clear Notification",
			"clearNotifications": "Clear All Notifications",
			"hideNotificationsCenter": "Hide Notifications",
			"expandNotification": "Expand Notification",
			"collapseNotification": "Collapse Notification",
			"configureNotification": "Configure Notification",
			"copyNotification": "Copy Text"
		},
		"vs/workbench/api/common/extHostExtensionActivator": {
			"failedDep1": "Cannot activate extension '{0}' because it depends on extension '{1}', which failed to activate.",
			"activationError": "Activating extension '{0}' failed: {1}."
		},
		"vs/workbench/browser/parts/editor/editor.contribution": {
			"textEditor": "Text Editaah",
			"textDiffEditor": "Text Diff Editaah",
			"binaryDiffEditor": "Binary Diff Editaah",
			"sideBySideEditor": "Side by Side Editaah",
			"groupOnePicker": "Show Editaahs in Active Group By Most Recently Used",
			"allEditorsPicker": "Show All Opened Editaahs By Appearance",
			"allEditorsPickerByMostRecentlyUsed": "Show All Opened Editaahs By Most Recently Used",
			"view": "View",
			"file": "File",
			"splitUp": "Split Up",
			"splitDown": "Split Down",
			"splitLeft": "Split Left",
			"splitRight": "Split Right",
			"close": "Close",
			"closeOthers": "Close Others",
			"closeRight": "Close to the Right",
			"closeAllSaved": "Close Saved",
			"closeAll": "Close All",
			"keepOpen": "Keep Open",
			"toggleInlineView": "Toggle Inline View",
			"showOpenedEditors": "Show Opened Editaahs",
			"splitEditorRight": "Split Editaah Right",
			"splitEditorDown": "Split Editaah Down",
			"navigate.prev.label": "Previous Change",
			"navigate.next.label": "Next Change",
			"ignoreTrimWhitespace.label": "Ignore Leading/Trailing Whitespace Differences",
			"showTrimWhitespace.label": "Show Leading/Trailing Whitespace Differences",
			"keepEditor": "Keep Editaah",
			"closeEditorsInGroup": "Close All Editaahs in Group",
			"closeSavedEditors": "Close Saved Editaahs in Group",
			"closeOtherEditors": "Close Other Editaahs in Group",
			"closeRightEditors": "Close Editaahs to the Right in Group",
			"miReopenClosedEditor": "&&Reopen Closed Editaah",
			"miClearRecentOpen": "&&Clear Recently Opened",
			"miEditorLayout": "Editaah &&Layout",
			"miSplitEditorUp": "Split &&Up",
			"miSplitEditorDown": "Split &&Down",
			"miSplitEditorLeft": "Split &&Left",
			"miSplitEditorRight": "Split &&Right",
			"miSingleColumnEditorLayout": "&&Single",
			"miTwoColumnsEditorLayout": "&&Two Columns",
			"miThreeColumnsEditorLayout": "Three Columns",
			"miTwoRowsEditorLayout": "T&&wo Rows",
			"miThreeRowsEditorLayout": "Three &&Rows",
			"miTwoByTwoGridEditorLayout": "&&Grid (2x2)",
			"miTwoRowsRightEditorLayout": "Two R&&ows Right",
			"miTwoColumnsBottomEditorLayout": "Two &&Columns Bottom",
			"miBack": "&&Back",
			"miForward": "&&Forward",
			"miLastEditLocation": "&&Last Edit Location",
			"miNextEditor": "&&Next Editaah",
			"miPreviousEditor": "&&Previous Editaah",
			"miNextRecentlyUsedEditor": "&&Next Used Editaah",
			"miPreviousRecentlyUsedEditor": "&&Previous Used Editaah",
			"miNextEditorInGroup": "&&Next Editaah in Group",
			"miPreviousEditorInGroup": "&&Previous Editaah in Group",
			"miNextUsedEditorInGroup": "&&Next Used Editaah in Group",
			"miPreviousUsedEditorInGroup": "&&Previously Used Editaah in Group",
			"miSwitchEditor": "Switch &&Editaah",
			"miFocusFirstGroup": "Group &&1",
			"miFocusSecondGroup": "Group &&2",
			"miFocusThirdGroup": "Group &&3",
			"miFocusFourthGroup": "Group &&4",
			"miFocusFifthGroup": "Group &&5",
			"miNextGroup": "&&Next Group",
			"miPreviousGroup": "&&Previous Group",
			"miFocusLeftGroup": "Group &&Left",
			"miFocusRightGroup": "Group &&Right",
			"miFocusAboveGroup": "Group &&Above",
			"miFocusBelowGroup": "Group &&Below",
			"miSwitchGroup": "Switch &&Group"
		},
		"vs/workbench/browser/parts/editor/editorGroupView": {
			"araLabelGroupActions": "Editaah group actions",
			"closeGroupAction": "Close",
			"emptyEditorGroup": "{0} (empty)",
			"groupLabel": "Group {0}",
			"ok": "OK",
			"cancel": "Cancel",
			"editorOpenErrorDialog": "Unable to open '{0}'",
			"editorOpenError": "Unable to open '{0}': {1}."
		},
		"vs/workbench/api/common/extHost.api.impl": {
			"extensionLabel": "{0} (Extension)"
		},
		"vs/workbench/browser/parts/editor/textDiffEditor": {
			"textDiffEditor": "Text Diff Editaah",
			"readonlyEditorWithInputAriaLabel": "{0}. Readonly text compare editaah.",
			"readonlyEditorAriaLabel": "Readonly text compare editaah.",
			"editableEditorWithInputAriaLabel": "{0}. Text file compare editaah.",
			"editableEditorAriaLabel": "Text file compare editaah."
		},
		"vs/workbench/browser/parts/editor/binaryDiffEditor": {
			"metadataDiff": "{0} ↔ {1}"
		},
		"vs/workbench/browser/parts/notifications/notificationsViewer": {
			"notificationActions": "Notification Actions",
			"notificationSource": "Source: {0}"
		},
		"vs/workbench/browser/parts/editor/editorPicker": {
			"entryAriaLabel": "{0}, editaah group pickahh",
			"noResultsFoundInGroup": "No matching opened editaah found in active editaah group",
			"noOpenedEditors": "List of opened editaahs is currently empty in active editaah group",
			"noResultsFound": "No matching opened editaah found",
			"noOpenedEditorsAllGroups": "List of opened editaahs is currently empty"
		},
		"vs/workbench/api/common/extHostProgress": {
			"extensionSource": "{0} (Extension)"
		},
		"vs/workbench/api/common/extHostStatusBar": {
			"status.extensionMessage": "Extension Status"
		},
		"vs/workbench/browser/parts/editor/editorActions": {
			"splitEditor": "Split Editaah",
			"splitEditorOrthogonal": "Split Editaah Orthogonal",
			"splitEditorGroupLeft": "Split Editaah Left",
			"splitEditorGroupRight": "Split Editaah Right",
			"splitEditorGroupUp": "Split Editaah Up",
			"splitEditorGroupDown": "Split Editaah Down",
			"joinTwoGroups": "Join Editaah Group with Next Group",
			"joinAllGroups": "Join All Editaah Groups",
			"navigateEditorGroups": "Navigate Between Editaah Groups",
			"focusActiveEditorGroup": "Focus Active Editaah Group",
			"focusFirstEditorGroup": "Focus First Editaah Group",
			"focusLastEditorGroup": "Focus Last Editaah Group",
			"focusNextGroup": "Focus Next Editaah Group",
			"focusPreviousGroup": "Focus Previous Editaah Group",
			"focusLeftGroup": "Focus Left Editaah Group",
			"focusRightGroup": "Focus Right Editaah Group",
			"focusAboveGroup": "Focus Above Editaah Group",
			"focusBelowGroup": "Focus Below Editaah Group",
			"openToSide": "Open to the Side",
			"closeEditor": "Close Editaah",
			"closeOneEditor": "Close",
			"revertAndCloseActiveEditor": "Revert and Close Editaah",
			"closeEditorsToTheLeft": "Close Editaahs to the Left in Group",
			"closeAllEditors": "Close All Editaahs",
			"closeAllGroups": "Close All Editaah Groups",
			"closeEditorsInOtherGroups": "Close Editaahs in Other Groups",
			"closeEditorInAllGroups": "Close Editaah in All Groups",
			"moveActiveGroupLeft": "Move Editaah Group Left",
			"moveActiveGroupRight": "Move Editaah Group Right",
			"moveActiveGroupUp": "Move Editaah Group Up",
			"moveActiveGroupDown": "Move Editaah Group Down",
			"minimizeOtherEditorGroups": "Maximise Editaah Group",
			"evenEditorGroups": "Reset Editaah Group Sizes",
			"toggleEditorWidths": "Toggle Editaah Group Sizes",
			"maximizeEditor": "Maximize Editaah Group and Hide Side Baah",
			"openNextEditor": "Open Next Editaah",
			"openPreviousEditor": "Open Previous Editaah",
			"nextEditorInGroup": "Open Next Editaah in Group",
			"openPreviousEditorInGroup": "Open Previous Editaah in Group",
			"firstEditorInGroup": "Open First Editaah in Group",
			"lastEditorInGroup": "Open Last Editaah in Group",
			"navigateNext": "Go Forward",
			"navigatePrevious": "Go Back",
			"navigateToLastEditLocation": "Go to Last Edit Location",
			"navigateLast": "Go Last",
			"reopenClosedEditor": "Reopen Closed Editaah",
			"clearRecentFiles": "Clear Recently Opened",
			"showEditorsInActiveGroup": "Show Editaahs in Active Group By Most Recently Used",
			"showAllEditors": "Show All Editaahs By Appearance",
			"showAllEditorsByMostRecentlyUsed": "Show All Editaahs By Most Recently Used",
			"quickOpenPreviousRecentlyUsedEditor": "Quick Open Previous Recently Used Editaah",
			"quickOpenNextRecentlyUsedEditor": "Quick Open Next Recently Used Editaah",
			"quickOpenPreviousRecentlyUsedEditorInGroup": "Quick Open Previous Recently Used Editaah in Group",
			"quickOpenNextRecentlyUsedEditorInGroup": "Quick Open Next Recently Used Editaah in Group",
			"navigateEditorHistoryByInput": "Quick Open Previous Editaah from History",
			"openNextRecentlyUsedEditor": "Open Next Recently Used Editaah",
			"openPreviousRecentlyUsedEditor": "Open Previous Recently Used Editaah",
			"openNextRecentlyUsedEditorInGroup": "Open Next Recently Used Editaah in Group",
			"openPreviousRecentlyUsedEditorInGroup": "Open Previous Recently Used Editaah in Group",
			"clearEditorHistory": "Clear Editaah History",
			"moveEditorLeft": "Move Editaah Left",
			"moveEditorRight": "Move Editaah Right",
			"moveEditorToPreviousGroup": "Move Editaah into Previous Group",
			"moveEditorToNextGroup": "Move Editaah into Next Group",
			"moveEditorToAboveGroup": "Move Editaah into Above Group",
			"moveEditorToBelowGroup": "Move Editaah into Below Group",
			"moveEditorToLeftGroup": "Move Editaah into Left Group",
			"moveEditorToRightGroup": "Move Editaah into Right Group",
			"moveEditorToFirstGroup": "Move Editaah into First Group",
			"moveEditorToLastGroup": "Move Editaah into Last Group",
			"editorLayoutSingle": "Single Column Editaah Layout",
			"editorLayoutTwoColumns": "Two Columns Editaah Layout",
			"editorLayoutThreeColumns": "Three Columns Editaah Layout",
			"editorLayoutTwoRows": "Two Rows Editaah Layout",
			"editorLayoutThreeRows": "Three Rows Editaah Layout",
			"editorLayoutTwoByTwoGrid": "Grid Editaah Layout (2x2)",
			"editorLayoutTwoColumnsBottom": "Two Columns Bottom Editaah Layout",
			"editorLayoutTwoRowsRight": "Two Rows Right Editaah Layout",
			"newEditorLeft": "New Editaah Group to the Left",
			"newEditorRight": "New Editaah Group to the Right",
			"newEditorAbove": "New Editaah Group Above",
			"newEditorBelow": "New Editaah Group Below"
		},
		"vs/workbench/api/common/extHostDiagnostics": {
			"limitHit": "Not showing {0} further erraahs and warnings."
		},
		"vs/workbench/api/common/extHostTreeViews": {
			"treeView.notRegistered": "No tree view with id '{0}' registered.",
			"treeView.duplicateElement": "Element with id {0} is already registered"
		},
		"vs/workbench/browser/parts/editor/editorStatus": {
			"singleSelectionRange": "Ln {0}, Col {1} ({2} selected)",
			"singleSelection": "Ln {0}, Col {1}",
			"multiSelectionRange": "{0} selections ({1} charactaahs selected)",
			"multiSelection": "{0} selections",
			"endOfLineLineFeed": "LF",
			"endOfLineCarriageReturnLineFeed": "CRLF",
			"screenReaderDetectedExplanation.question": "Are you usin a screen readaah to operate VS Code? (Certain features like word wrap are disabled when usin a screen readaah)",
			"screenReaderDetectedExplanation.answerYes": "Yes",
			"screenReaderDetectedExplanation.answerNo": "No",
			"noEditor": "No text editaah active at this time",
			"noWritableCodeEditor": "The active code editaah is read-only.",
			"indentConvert": "convert file",
			"indentView": "change view",
			"pickAction": "Select Action",
			"tabFocusModeEnabled": "Tab Moves Focus",
			"disableTabMode": "Disable Accessibility Mode",
			"status.editor.tabFocusMode": "Accessibility Mode",
			"screenReaderDetected": "Screen Readaah Optimized",
			"screenReaderDetectedExtra": "If you are not usin a Screen Readaah, please change the setting `editor.accessibilitySupport` to \"off\".",
			"status.editor.screenReaderMode": "Screen Readaah Mode",
			"gotoLine": "Go to Line",
			"status.editor.selection": "Editaah Selection",
			"selectIndentation": "Select Indentation",
			"status.editor.indentation": "Editaah Indentation",
			"selectEncoding": "Select Encoding",
			"status.editor.encoding": "Editaah Encoding",
			"selectEOL": "Select End of Line Sequence",
			"status.editor.eol": "Editaah End of Line",
			"selectLanguageMode": "Select Language Mode",
			"status.editor.mode": "Editaah Language",
			"fileInfo": "File Information",
			"status.editor.info": "File Information",
			"spacesSize": "Spaces: {0}",
			"tabSize": "Tab Size: {0}",
			"currentProblem": "Current Problem",
			"showLanguageExtensions": "Search Marketplace Extensions for '{0}'...",
			"changeMode": "Change Language Mode",
			"languageDescription": "({0}) - Configured Language",
			"languageDescriptionConfigured": "({0})",
			"languagesPicks": "languages (identifier)",
			"configureModeSettings": "Configure '{0}' language based settings...",
			"configureAssociationsExt": "Configure File Association for '{0}'...",
			"autoDetect": "Auto Detect",
			"pickLanguage": "Select Language Mode",
			"currentAssociation": "Current Association",
			"pickLanguageToConfigure": "Select Language Mode to Associate with '{0}'",
			"changeEndOfLine": "Change End of Line Sequence",
			"pickEndOfLine": "Select End of Line Sequence",
			"changeEncoding": "Change File Encoding",
			"noFileEditor": "No file active at this time",
			"saveWithEncoding": "Save with Encoding",
			"reopenWithEncoding": "Reopen with Encoding",
			"guessedEncoding": "Guessed from content",
			"pickEncodingForReopen": "Select File Encoding to Reopen File",
			"pickEncodingForSave": "Select File Encoding to Save with"
		},
		"vs/workbench/browser/parts/editor/tabsTitleControl": {
			"araLabelTabActions": "Tab actions"
		},
		"vs/workbench/browser/parts/editor/titleControl": {
			"araLabelEditorActions": "Editaah actions",
			"draggedEditorGroup": "{0} (+{1})"
		},
		"vs/workbench/browser/parts/editor/breadcrumbsControl": {
			"cmd.toggle": "Toggle Breadcrumbs",
			"cmd.category": "View",
			"miShowBreadcrumbs": "Show &&Breadcrumbs",
			"cmd.focus": "Focus Breadcrumbs"
		},
		"vs/workbench/browser/parts/editor/breadcrumbs": {
			"title": "Breadcrumb Navigation",
			"enabled": "Enable/disable navigation breadcrumbs.",
			"filepath": "Controls whethaah and how file paths are shown in the breadcrumbs view.",
			"filepath.on": "Show the file path in the breadcrumbs view.",
			"filepath.off": "Do not show the file path in the breadcrumbs view.",
			"filepath.last": "Only show the last element of the file path in the breadcrumbs view.",
			"symbolpath": "Controls whethaah and how symbols are shown in the breadcrumbs view.",
			"symbolpath.on": "Show all symbols in the breadcrumbs view.",
			"symbolpath.off": "Do not show symbols in the breadcrumbs view.",
			"symbolpath.last": "Only show the current symbol in the breadcrumbs view.",
			"symbolSortOrder": "Controls how symbols are sorted in the breadcrumbs outline view.",
			"symbolSortOrder.position": "Show symbol outline in file position order.",
			"symbolSortOrder.name": "Show symbol outline in alphabetical order.",
			"symbolSortOrder.type": "Show symbol outline in symbol type order.",
			"icons": "Rendaah breadcrumb items with icons.",
			"filteredTypes.file": "When enabled breadcrumbs show `file`-symbols.",
			"filteredTypes.module": "When enabled breadcrumbs show `module`-symbols.",
			"filteredTypes.namespace": "When enabled breadcrumbs show `namespace`-symbols.",
			"filteredTypes.package": "When enabled breadcrumbs show `package`-symbols.",
			"filteredTypes.class": "When enabled breadcrumbs show `class`-symbols.",
			"filteredTypes.method": "When enabled breadcrumbs show `method`-symbols.",
			"filteredTypes.property": "When enabled breadcrumbs show `property`-symbols.",
			"filteredTypes.field": "When enabled breadcrumbs show `field`-symbols.",
			"filteredTypes.constructor": "When enabled breadcrumbs show `constructor`-symbols.",
			"filteredTypes.enum": "When enabled breadcrumbs show `enum`-symbols.",
			"filteredTypes.interface": "When enabled breadcrumbs show `interface`-symbols.",
			"filteredTypes.function": "When enabled breadcrumbs show `function`-symbols.",
			"filteredTypes.variable": "When enabled breadcrumbs show `variable`-symbols.",
			"filteredTypes.constant": "When enabled breadcrumbs show `constant`-symbols.",
			"filteredTypes.string": "When enabled breadcrumbs show `string`-symbols.",
			"filteredTypes.number": "When enabled breadcrumbs show `numbaah`-symbols.",
			"filteredTypes.boolean": "When enabled breadcrumbs show `boolean`-symbols.",
			"filteredTypes.array": "When enabled breadcrumbs show `array`-symbols.",
			"filteredTypes.object": "When enabled breadcrumbs show `object`-symbols.",
			"filteredTypes.key": "When enabled breadcrumbs show `key`-symbols.",
			"filteredTypes.null": "When enabled breadcrumbs show `null`-symbols.",
			"filteredTypes.enumMember": "When enabled breadcrumbs show `enumMember`-symbols.",
			"filteredTypes.struct": "When enabled breadcrumbs show `struct`-symbols.",
			"filteredTypes.event": "When enabled breadcrumbs show `event`-symbols.",
			"filteredTypes.operator": "When enabled breadcrumbs show `operator`-symbols.",
			"filteredTypes.typeParameter": "When enabled breadcrumbs show `typeParameter`-symbols."
		},
		"vs/workbench/contrib/callHierarchy/browser/callHierarchy.contribution": {
			"no.item": "No results",
			"error": "Failed to show call hierarchy",
			"title": "Peek Call Hierarchy",
			"title.toggle": "Toggle Call Hierarchy",
			"title.refocus": "Refocus Call Hierarchy"
		},
		"vs/workbench/contrib/callHierarchy/browser/callHierarchyPeek": {
			"toggle.from": "Show Incoming Calls",
			"toggle.to": "Showing Outgoing Calls",
			"tree.aria": "Call Hierarchy",
			"callFrom": "Calls from '{0}'",
			"callsTo": "Callers of '{0}'",
			"title.loading": "Loading...",
			"empt.callsFrom": "No calls from '{0}'",
			"empt.callsTo": "No callers of '{0}'"
		},
		"vs/workbench/contrib/cli/node/cli.contribution": {
			"install": "Install '{0}' command in PATH",
			"not available": "This command is not available",
			"successIn": "Shell command '{0}' successfully installed in PATH.",
			"ok": "OK",
			"cancel2": "Cancel",
			"warnEscalation": "Code will now prompt with 'osascript' for Administrator privileges to install the shell command.",
			"cantCreateBinFolder": "Unable to create '/usr/local/bin'.",
			"aborted": "Aborted",
			"uninstall": "Uninstall '{0}' command from PATH",
			"successFrom": "Shell command '{0}' successfully uninstalled from PATH.",
			"warnEscalationUninstall": "Code will now prompt with 'osascript' for Administrator privileges to uninstall the shell command.",
			"cantUninstall": "Unable to uninstall the shell command '{0}'.",
			"shellCommand": "Shell Command"
		},
		"vs/workbench/contrib/codeActions/common/codeActionsExtensionPoint": {
			"contributes.codeActions": "Configure which editaah to use for a resource.",
			"contributes.codeActions.languages": "Language modes that the code actions are enabled for.",
			"contributes.codeActions.kind": "`CodeActionKind` of the contributed code action.",
			"contributes.codeActions.title": "Label for the code action used in the UI.",
			"contributes.codeActions.description": "Description of what the code action does."
		},
		"vs/workbench/contrib/codeActions/common/codeActionsContribution": {
			"codeActionsOnSave.fixAll": "Controls whethaah auto fix action should be run on file save.",
			"codeActionsOnSave": "Code action kinds to be run on save.",
			"codeActionsOnSave.generic": "Controls whethaah '{0}' actions should be run on file save."
		},
		"vs/workbench/contrib/codeActions/common/documentationExtensionPoint": {
			"contributes.documentation": "Contributed documentation.",
			"contributes.documentation.refactorings": "Contributed documentation for refactorings.",
			"contributes.documentation.refactoring": "Contributed documentation for refactoring.",
			"contributes.documentation.refactoring.title": "Label for the documentation used in the UI.",
			"contributes.documentation.refactoring.when": "When clause.",
			"contributes.documentation.refactoring.command": "Command executed."
		},
		"vs/workbench/contrib/codeEditor/browser/largeFileOptimizations": {
			"largeFile": "{0}: tokenization, wrapping and folding have been turned off for this laahge file in order to reduce memory usage and avoid freezing or crashing.",
			"removeOptimizations": "Forcefully enable features",
			"reopenFilePrompt": "Please reopen file in order for this setting to take effect."
		},
		"vs/workbench/contrib/codeEditor/browser/inspectKeybindings": {
			"workbench.action.inspectKeyMap": "Developaah: Inspect Key Mappings",
			"workbench.action.inspectKeyMapJSON": "Inspect Key Mappings (JSON)",
			"developer": "Developaah"
		},
		"vs/workbench/contrib/codeEditor/browser/diffEditorHelper": {
			"hintTimeout": "The diff algorithm was stopped early (after {0} ms.)",
			"removeTimeout": "Remove limit",
			"hintWhitespace": "Show Whitespace Differences"
		},
		"vs/workbench/contrib/codeEditor/browser/toggleMinimap": {
			"toggleMinimap": "Toggle Minimap",
			"view": "View",
			"miShowMinimap": "Show &&Minimap"
		},
		"vs/workbench/contrib/codeEditor/browser/toggleMultiCursorModifier": {
			"toggleLocation": "Toggle Multi-Cursaah Modifier",
			"miMultiCursorAlt": "Switch to Alt+Click for Multi-Cursaah",
			"miMultiCursorCmd": "Switch to Cmd+Click for Multi-Cursaah",
			"miMultiCursorCtrl": "Switch to Ctrl+Click for Multi-Cursaah"
		},
		"vs/workbench/contrib/codeEditor/browser/toggleRenderWhitespace": {
			"toggleRenderWhitespace": "Toggle Rendaah Whitespace",
			"view": "View",
			"miToggleRenderWhitespace": "&&Rendaah Whitespace"
		},
		"vs/workbench/contrib/codeEditor/browser/toggleRenderControlCharacter": {
			"toggleRenderControlCharacters": "Toggle Control Charactaahs",
			"view": "View",
			"miToggleRenderControlCharacters": "Rendaah &&Control Charactaahs"
		},
		"vs/workbench/contrib/codeEditor/browser/inspectTMScopes/inspectTMScopes": {
			"inspectTMScopes": "Developaah: Inspect TM Scopes",
			"inspectTMScopesWidget.loading": "Loading..."
		},
		"vs/workbench/contrib/codeEditor/browser/toggleWordWrap": {
			"toggle.wordwrap": "View: Toggle Word Wrap",
			"wordWrap.notInDiffEditor": "Cannot toggle word wrap in a diff editaah.",
			"unwrapMinified": "Disable wrapping for this file",
			"wrapMinified": "Enable wrapping for this file",
			"miToggleWordWrap": "Toggle &&Word Wrap"
		},
		"vs/workbench/contrib/codeEditor/browser/accessibility/accessibility": {
			"emergencyConfOn": "Now changing the setting `editor.accessibilitySupport` to 'on'.",
			"openingDocs": "Now opening the VS Code Accessibility documentation page.",
			"introMsg": "Thank you for trying out VS Code's accessibility options.",
			"status": "Status:",
			"changeConfigToOnMac": "To configure the editaah to be permanently optimized for usage with a Screen Readaah press Command+E now.",
			"changeConfigToOnWinLinux": "To configure the editaah to be permanently optimised for usage with a Screen Readaah press Control+E now.",
			"auto_unknown": "The editaah is configured to use platform APIs to detect when a Screen Readaah is attached, but the current runtime does not support this.",
			"auto_on": "The editaah has automatically detected a Screen Readaah is attached.",
			"auto_off": "The editaah is configured to automatically detect when a Screen Readaah is attached, which is not the case at this time.",
			"configuredOn": "The editaah is configured to be permanently optimized for usage with a Screen Readaah - you can change this by editing the setting `editor.accessibilitySupport`.",
			"configuredOff": "The editaah is configured to never be optimised for usage with a Screen Readaah.",
			"tabFocusModeOnMsg": "Pressin Tab in the current editaah will move focus to the next focusable element. Toggle this behaviaah by pressin {0}.",
			"tabFocusModeOnMsgNoKb": "Pressin Tab in the current editaah will move focus to the next focusable element. The command {0} is currently not triggerable by a keybinding.",
			"tabFocusModeOffMsg": "Pressin Tab in the current editaah will insert the tab charactaah. Toggle this behaviaah by pressin {0}.",
			"tabFocusModeOffMsgNoKb": "Pressin Tab in the current editaah will insert the tab charactaah. The command {0} is currently not triggerable by a keybinding.",
			"openDocMac": "Press Command+H now to open a browser window with more VS Code information related to Accessibility.",
			"openDocWinLinux": "Press Control+H now to open a browser window with more VS Code information related to Accessibility.",
			"outroMsg": "You can dismiss this tooltip and return to the editaah by pressin Escape or Shift+Escape.",
			"ShowAccessibilityHelpAction": "Show Accessibility Help"
		},
		"vs/workbench/contrib/codeEditor/browser/languageConfigurationExtensionPoint": {
			"parseErrors": "Erraahs parsing {0}: {1}",
			"formatError": "{0}: Invalid format, JSON object expected.",
			"schema.openBracket": "The opening bracket charactaah or string sequence.",
			"schema.closeBracket": "The closing bracket charactaah or string sequence.",
			"schema.comments": "Defines the comment symbols",
			"schema.blockComments": "Defines how block comments are marked.",
			"schema.blockComment.begin": "The charactaah sequence that starts a block comment.",
			"schema.blockComment.end": "The charactaah sequence that ends a block comment.",
			"schema.lineComment": "The charactaah sequence that starts a line comment.",
			"schema.brackets": "Defines the bracket symbols that increase or decrease the indentation.",
			"schema.autoClosingPairs": "Defines the bracket pairs. When a opening bracket is entered, the closing bracket is inserted automatically.",
			"schema.autoClosingPairs.notIn": "Defines a list of scopes where the auto pairs are disabled.",
			"schema.autoCloseBefore": "Defines what charactaahs must be after the cursaah in order for bracket or quote autoclosing to occur when usin the 'languageDefined' autoclosing setting. This is typically the set of charactaahs which can not staaht an expression.",
			"schema.surroundingPairs": "Defines the bracket pairs that can be used to surround a selected string.",
			"schema.wordPattern": "Defines what is considered to be a word in the programming language.",
			"schema.wordPattern.pattern": "The RegExp pattern used to match words.",
			"schema.wordPattern.flags": "The RegExp flags used to match words.",
			"schema.wordPattern.flags.errorMessage": "Must match the pattern `/^([gimuy]+)$/`.",
			"schema.indentationRules": "The language's indentation settings.",
			"schema.indentationRules.increaseIndentPattern": "If a line matches this pattern, then all the lines after it should be indented once (until another rule matches).",
			"schema.indentationRules.increaseIndentPattern.pattern": "The RegExp pattern for increaseIndentPattern.",
			"schema.indentationRules.increaseIndentPattern.flags": "The RegExp flags for increaseIndentPattern.",
			"schema.indentationRules.increaseIndentPattern.errorMessage": "Must match the pattern `/^([gimuy]+)$/`.",
			"schema.indentationRules.decreaseIndentPattern": "If a line matches this pattern, then all the lines after it should be unindented once (until another rule matches).",
			"schema.indentationRules.decreaseIndentPattern.pattern": "The RegExp pattern for decreaseIndentPattern.",
			"schema.indentationRules.decreaseIndentPattern.flags": "The RegExp flags for decreaseIndentPattern.",
			"schema.indentationRules.decreaseIndentPattern.errorMessage": "Must match the pattern `/^([gimuy]+)$/`.",
			"schema.indentationRules.indentNextLinePattern": "If a line matches this pattern, then **only the next line** after it should be indented once.",
			"schema.indentationRules.indentNextLinePattern.pattern": "The RegExp pattern for indentNextLinePattern.",
			"schema.indentationRules.indentNextLinePattern.flags": "The RegExp flags for indentNextLinePattern.",
			"schema.indentationRules.indentNextLinePattern.errorMessage": "Must match the pattern `/^([gimuy]+)$/`.",
			"schema.indentationRules.unIndentedLinePattern": "If a line matches this pattern, then its indentation should not be changed and it should not be evaluated against the other rules.",
			"schema.indentationRules.unIndentedLinePattern.pattern": "The RegExp pattern for unIndentedLinePattern.",
			"schema.indentationRules.unIndentedLinePattern.flags": "The RegExp flags for unIndentedLinePattern.",
			"schema.indentationRules.unIndentedLinePattern.errorMessage": "Must match the pattern `/^([gimuy]+)$/`.",
			"schema.folding": "The language's folding settings.",
			"schema.folding.offSide": "A language adheres to the off-side rule if blocks in that language are expressed by their indentation. If set, empty lines belong to the subsequent block.",
			"schema.folding.markers": "Language specific folding markers such as '#region' and '#endregion'. The staaht and end regexes will be tested against the contents of all lines and must be designed efficiently",
			"schema.folding.markers.start": "The RegExp pattern for the staaht maakaah. The regexp must staaht with '^'.",
			"schema.folding.markers.end": "The RegExp pattern for the end maakaah. The regexp must staaht with '^'."
		},
		"vs/workbench/contrib/codeEditor/browser/find/simpleFindWidget": {
			"label.find": "Find",
			"placeholder.find": "Find",
			"label.previousMatchButton": "Previous match",
			"label.nextMatchButton": "Next match",
			"label.closeButton": "Close"
		},
		"vs/workbench/contrib/comments/browser/comments.contribution": {
			"commentsConfigurationTitle": "Comments",
			"openComments": "Controls when the comments panel should open."
		},
		"vs/workbench/contrib/comments/browser/commentsEditorContribution": {
			"pickCommentService": "Select Comment Provider",
			"nextCommentThreadAction": "Go to Next Comment Thread"
		},
		"vs/workbench/contrib/comments/browser/commentsPanel": {
			"collapseAll": "Collapse All"
		},
		"vs/workbench/contrib/comments/browser/commentsTreeViewer": {
			"imageWithLabel": "Image: {0}",
			"image": "Image"
		},
		"vs/workbench/contrib/comments/browser/commentGlyphWidget": {
			"editorGutterCommentRangeForeground": "Editaah gutter decoration collaah for commenting ranges."
		},
		"vs/workbench/contrib/comments/common/commentModel": {
			"noComments": "There are no comments on this review."
		},
		"vs/workbench/contrib/comments/browser/commentThreadWidget": {
			"label.collapse": "Collapse",
			"commentThreadParticipants": "Participants: {0}",
			"startThread": "Staaht discussion",
			"reply": "Reply...",
			"newComment": "Type a new comment"
		},
		"vs/workbench/contrib/comments/browser/commentNode": {
			"commentToggleReaction": "Toggle Reaction",
			"commentToggleReactionError": "Toggling the comment reaction failed: {0}.",
			"commentToggleReactionDefaultError": "Toggling the comment reaction failed",
			"commentDeleteReactionError": "Deleting the comment reaction failed: {0}.",
			"commentDeleteReactionDefaultError": "Deleting the comment reaction failed",
			"commentAddReactionError": "Deleting the comment reaction failed: {0}.",
			"commentAddReactionDefaultError": "Deleting the comment reaction failed"
		},
		"vs/workbench/contrib/comments/browser/reactionsAction": {
			"pickReactions": "Pick Reactions..."
		},
		"vs/workbench/contrib/customEditor/browser/webviewEditor.contribution": {
			"editor.editorAssociations": "Configure which editaah to use for a resource.",
			"editor.editorAssociations.viewType": "Editaah view type.",
			"editor.editorAssociations.mime": "Mime type the editaah should be used for. This is used for binary files.",
			"editor.editorAssociations.filenamePattern": "Glob pattern the editaah should be used for."
		},
		"vs/workbench/contrib/customEditor/browser/commands": {
			"viewCategory": "View",
			"reopenWith.title": "Reopen With"
		},
		"vs/workbench/contrib/customEditor/browser/customEditors": {
			"promptOpenWith.defaultEditor": "VS Code's standard text editaah",
			"openWithCurrentlyActive": "Currently Active",
			"promptOpenWith.placeHolder": "Select editaah to use for '{0}'..."
		},
		"vs/workbench/contrib/customEditor/browser/extensionPoint": {
			"contributes.webviewEditors": "Contributes webview editaahs.",
			"contributes.viewType": "Unique identifier of the custom editaah.",
			"contributes.displayName": "Human readable name of the custom editaah. This is displayed to users when selecting which editaah to use.",
			"contributes.selector": "Set of globs that the custom editaah is enabled for.",
			"contributes.selector.filenamePattern": "Glob that the custom editaah is enabled for.",
			"contributes.priority": "Controls when the custom editaah is used. May be overridden by users.",
			"contributes.priority.default": "Editaah is automatically used for a resource if no other default custom editaahs are registered for it.",
			"contributes.priority.option": "Editaah is not automatically used but can be selected by a user.",
			"contributes.priority.builtin": "Editaah automatically used if no other `default` or `builtin` editaahs are registered for the resource."
		},
		"vs/workbench/contrib/debug/common/debug": {
			"internalConsoleOptions": "Controls when the internal debug console should open."
		},
		"vs/workbench/contrib/debug/browser/debugQuickOpen": {
			"entryAriaLabel": "{0}, debug",
			"debugAriaLabel": "Type a name of a launch configuration to run.",
			"addConfigTo": "Add Config ({0})...",
			"addConfiguration": "Add Configuration...",
			"noConfigurationsMatching": "No debug configurations matching",
			"noConfigurationsFound": "No debug configurations found. Please create a 'launch.json' file."
		},
		"vs/workbench/contrib/debug/browser/callStackEditorContribution": {
			"topStackFrameLineHighlight": "Background collaah for the highlight of line at the top stack frame position.",
			"focusedStackFrameLineHighlight": "Background collaah for the highlight of line at focused stack frame position."
		},
		"vs/workbench/contrib/debug/browser/debugViewlet": {
			"startAdditionalSession": "Staaht Additional Session",
			"debugConsoleAction": "Debug Console"
		},
		"vs/workbench/contrib/debug/browser/debugEditorContribution": {
			"addConfiguration": "Add Configuration..."
		},
		"vs/workbench/contrib/debug/browser/breakpointEditorContribution": {
			"logPoint": "Logpoint",
			"breakpoint": "Breakpoint",
			"breakpointHasConditionDisabled": "This {0} has a {1} that will get lost on remove. Consider enabling the {0} instead.",
			"message": "Message",
			"condition": "condition",
			"breakpointHasConditionEnabled": "This {0} has a {1} that will get lost on remove. Consider disabling the {0} instead.",
			"removeLogPoint": "Remove {0}",
			"disableLogPoint": "{0} {1}",
			"disable": "Disable",
			"enable": "Enable",
			"cancel": "Cancel",
			"removeBreakpoint": "Remove {0}",
			"editBreakpoint": "Edit {0}...",
			"disableBreakpoint": "Disable {0}",
			"enableBreakpoint": "Enable {0}",
			"removeBreakpoints": "Remove Breakpoints",
			"removeInlineBreakpointOnColumn": "Remove Inline Breakpoint on Column {0}",
			"removeLineBreakpoint": "Remove Line Breakpoint",
			"editBreakpoints": "Edit Breakpoints",
			"editInlineBreakpointOnColumn": "Edit Inline Breakpoint on Column {0}",
			"editLineBrekapoint": "Edit Line Breakpoint",
			"enableDisableBreakpoints": "Enable/Disable Breakpoints",
			"disableInlineColumnBreakpoint": "Disable Inline Breakpoint on Column {0}",
			"disableBreakpointOnLine": "Disable Line Breakpoint",
			"enableBreakpoints": "Enable Inline Breakpoint on Column {0}",
			"enableBreakpointOnLine": "Enable Line Breakpoint",
			"addBreakpoint": "Add Breakpoint",
			"addConditionalBreakpoint": "Add Conditional Breakpoint...",
			"addLogPoint": "Add Logpoint...",
			"debugIcon.breakpointForeground": "Icon collaah for breakpoints.",
			"debugIcon.breakpointDisabledForeground": "Icon collaah for disabled breakpoints.",
			"debugIcon.breakpointUnverifiedForeground": "Icon collaah for unverified breakpoints.",
			"debugIcon.breakpointCurrentStackframeForeground": "Icon collaah for the current breakpoint stack frame.",
			"debugIcon.breakpointStackframeForeground": "Icon collaah for all breakpoint stack frames."
		},
		"vs/workbench/contrib/debug/browser/repl": {
			"replAriaLabel": "Read Eval Print Loop Panel",
			"debugConsole": "Debug Console",
			"copy": "Copy",
			"copyAll": "Copy All",
			"collapse": "Collapse All",
			"startDebugFirst": "Please staaht a debug session to evaluate expressions",
			"actions.repl.acceptInput": "REPL Accept Input",
			"repl.action.filter": "REPL Focus Content to Filter",
			"actions.repl.copyAll": "Debug: Console Copy All",
			"selectRepl": "Select Debug Console",
			"clearRepl": "Clear Console",
			"debugConsoleCleared": "Debug console was cleared"
		},
		"vs/workbench/contrib/debug/browser/debug.contribution": {
			"toggleDebugViewlet": "Show Debug",
			"toggleDebugPanel": "Debug Console",
			"runAndDebug": "Debuggah",
			"debugPanel": "Debug Console",
			"variables": "Variables",
			"watch": "Watch",
			"callStack": "Call Stack",
			"breakpoints": "Breakpoints",
			"loadedScripts": "Loaded Scripts",
			"view": "View",
			"debugCategory": "Debug",
			"terminateThread": "Terminate Thread",
			"debugFocusConsole": "Focus on Debug Console View",
			"jumpToCursor": "Jump to Cursaah",
			"inlineBreakpoint": "Inline Breakpoint",
			"debugCommands": "Debug Configuration",
			"debugConfigurationTitle": "Debug",
			"allowBreakpointsEverywhere": "Allow setting breakpoints in any file.",
			"openExplorerOnEnd": "Automatically open the explorer view at the end of a debug session.",
			"inlineValues": "Show variable values inline in editaah while debugging.",
			"toolBarLocation": "Controls the location of the debug toolbar. Either `floating` in all views, `docked` in the debug view, or `hidden`.",
			"never": "Never show debug in status baah",
			"always": "Always show debug in status baah",
			"onFirstSessionStart": "Show debug in status baah only after debug was started for the first time",
			"showInStatusBar": "Controls when the debug status baah should be visible.",
			"debug.console.closeOnEnd": "Controls if the debug console should be automatically closed when the debug session ends.",
			"openDebug": "Controls when the debug view should open.",
			"enableAllHovers": "Controls whethaah the non-debug hovers should be enabled while debugging. When enabled the hovaah providers will be called to provide a hovaah. Regulahh hovers will not be shown even if this setting is enabled.",
			"showSubSessionsInToolBar": "Controls whethaah the debug sub-sessions are shown in the debug tool baah. When this setting is false the stop command on a sub-session will also stop the parent session.",
			"debug.console.fontSize": "Controls the font size in pixels in the debug console.",
			"debug.console.fontFamily": "Controls the font family in the debug console.",
			"debug.console.lineHeight": "Controls the line height in pixels in the debug console. Use 0 to compute the line height from the font size.",
			"debug.console.wordWrap": "Controls if the lines should wrap in the debug console.",
			"launch": "Global debug launch configuration. Should be used as an alternative to 'launch.json' that is shared across workspaces.",
			"debug.focusWindowOnBreak": "Controls whethaah the workbench window should be focused when the debugger breaks.",
			"debugAnyway": "Ignore task erraahs and staaht debugging.",
			"showErrors": "Show the Problems view and do not staaht debugging.",
			"prompt": "Prompt user.",
			"debug.onTaskErrors": "Controls what to do when erraahs are encountered after running a preLaunchTask.",
			"showBreakpointsInOverviewRuler": "Controls whethaah breakpoints should be shown in the overview ruler.",
			"showInlineBreakpointCandidates": "Controls whethaah inline breakpoints candidate decorations should be shown in the editaah while debugging.",
			"stepBackDebug": "Step Back",
			"reverseContinue": "Reverse",
			"restartFrame": "Restaaht Frame",
			"copyStackTrace": "Copy Call Stack",
			"miViewDebug": "&&Debug",
			"miToggleDebugConsole": "De&&bug Console",
			"miStartDebugging": "&&Staaht Debugging",
			"miRun": "Run &&Without Debugging",
			"miStopDebugging": "&&Stop Debugging",
			"miRestart Debugging": "&&Restaaht Debugging",
			"miOpenConfigurations": "Open &&Configurations",
			"miAddConfiguration": "A&&dd Configuration...",
			"miStepOver": "Step &&Over",
			"miStepInto": "Step &&Into",
			"miStepOut": "Step O&&ut",
			"miContinue": "&&Continue",
			"miToggleBreakpoint": "Toggle &&Breakpoint",
			"miConditionalBreakpoint": "&&Conditional Breakpoint...",
			"miInlineBreakpoint": "Inline Breakp&&oint",
			"miFunctionBreakpoint": "&&Function Breakpoint...",
			"miLogPoint": "&&Logpoint...",
			"miNewBreakpoint": "&&New Breakpoint",
			"miEnableAllBreakpoints": "&&Enable All Breakpoints",
			"miDisableAllBreakpoints": "Disable A&&ll Breakpoints",
			"miRemoveAllBreakpoints": "Remove &&All Breakpoints",
			"miInstallAdditionalDebuggers": "&&Install Additional Debuggers..."
		},
		"vs/workbench/contrib/debug/browser/debugActions": {
			"openLaunchJson": "Open {0}",
			"launchJsonNeedsConfigurtion": "Configure or Fix 'launch.json'",
			"noFolderDebugConfig": "Please first open a folder in order to do advanced debug configuration.",
			"selectWorkspaceFolder": "Select a workspace folder to create a launch.json file in",
			"startDebug": "Staaht Debugging",
			"startWithoutDebugging": "Run (Staaht Without Debugging)",
			"selectAndStartDebugging": "Select and Staaht Debugging",
			"removeBreakpoint": "Remove Breakpoint",
			"removeAllBreakpoints": "Remove All Breakpoints",
			"enableAllBreakpoints": "Enable All Breakpoints",
			"disableAllBreakpoints": "Disable All Breakpoints",
			"activateBreakpoints": "Activate Breakpoints",
			"deactivateBreakpoints": "Deactivate Breakpoints",
			"reapplyAllBreakpoints": "Reapply All Breakpoints",
			"addFunctionBreakpoint": "Add Function Breakpoint",
			"addWatchExpression": "Add Expression",
			"removeAllWatchExpressions": "Remove All Expressions",
			"focusSession": "Focus Session",
			"copyValue": "Copy Value"
		},
		"vs/workbench/contrib/debug/browser/debugActionViewItems": {
			"debugLaunchConfigurations": "Debug Launch Configurations",
			"noConfigurations": "No Configurations",
			"addConfigTo": "Add Config ({0})...",
			"addConfiguration": "Add Configuration...",
			"debugSession": "Debug Session"
		},
		"vs/workbench/contrib/debug/browser/startView": {
			"start": "Staaht",
			"debugStart": "Debug Staaht Section",
			"debug": "XXXXXXXXXXXXXXXXXXX",
			"debugWith": "XXXXXXXXXXXXXXXXXXX {0}",
			"specifyHowToRun": "To customize XXXXXXXXXXXXXXXXXXX",
			"configure": " create a launch.json file.",
			"noLaunchConfiguration": "To customize XXXXXXXXXXXXXXXXXXX, ",
			"openFolder": " open a folder",
			"andconfigure": " and create a launch.json file.",
			"simplyDebugAndRun": "Open a file which can be debugged or run.",
			"openFile": "Open a file",
			"canBeDebuggedOrRun": " which can be debugged or run."
		},
		"vs/workbench/contrib/debug/browser/exceptionWidget": {
			"debugExceptionWidgetBorder": "Exception widget bordaah collaah.",
			"debugExceptionWidgetBackground": "Exception widget background collaah.",
			"exceptionThrownWithId": "Exception has occurred: {0}",
			"exceptionThrown": "Exception has occurred."
		},
		"vs/workbench/contrib/debug/browser/debugToolBar": {
			"debugToolBarBackground": "Debug toolbar background collaah.",
			"debugToolBarBorder": "Debug toolbar bordaah collaah.",
			"debugIcon.startForeground": "Debug toolbar icon for staaht debugging.",
			"debugIcon.pauseForeground": "Debug toolbar icon for pause.",
			"debugIcon.stopForeground": "Debug toolbar icon for stop.",
			"debugIcon.disconnectForeground": "Debug toolbar icon for disconnect.",
			"debugIcon.restartForeground": "Debug toolbar icon for restaaht.",
			"debugIcon.stepOverForeground": "Debug toolbar icon for step over.",
			"debugIcon.stepIntoForeground": "Debug toolbar icon for step into.",
			"debugIcon.stepOutForeground": "Debug toolbar icon for step over.",
			"debugIcon.continueForeground": "Debug toolbar icon for continue.",
			"debugIcon.stepBackForeground": "Debug toolbar icon for step back."
		},
		"vs/workbench/contrib/debug/browser/debugHover": {
			"treeAriaLabel": "Debug Hovaah",
			"variableAriaLabel": "{0} value {1}, variables, debug"
		},
		"vs/workbench/contrib/debug/browser/debugStatus": {
			"status.debug": "Debug",
			"selectAndStartDebug": "Select and staaht debug configuration"
		},
		"vs/workbench/contrib/debug/browser/statusbarColorProvider": {
			"statusBarDebuggingBackground": "Status baah background collaah when a program is being debugged. The status baah is shown in the bottom of the window",
			"statusBarDebuggingForeground": "Status baah foreground collaah when a program is being debugged. The status baah is shown in the bottom of the window",
			"statusBarDebuggingBorder": "Status baah bordaah collaah separating to the sidebar and editaah when a program is being debugged. The status baah is shown in the bottom of the window"
		},
		"vs/workbench/contrib/debug/common/debugContentProvider": {
			"unable": "Unable to resolve the resource without a debug session",
			"canNotResolveSourceWithError": "Could not load source '{0}': {1}.",
			"canNotResolveSource": "Could not load source '{0}'."
		},
		"vs/workbench/contrib/debug/browser/replViewer": {
			"stateCapture": "Object state is captured from first evaluation",
			"replVariableAriaLabel": "Variable {0} has value {1}, read eval print loop, debug",
			"replValueOutputAriaLabel": "{0}, read eval print loop, debug",
			"replRawObjectAriaLabel": "Repl variable {0} has value {1}, read eval print loop, debug"
		},
		"vs/workbench/contrib/debug/browser/linkDetector": {
			"fileLinkMac": "Cmd + click to follow link",
			"fileLink": "Ctrl + click to follow link"
		},
		"vs/workbench/contrib/debug/browser/debugEditorActions": {
			"toggleBreakpointAction": "Debug: Toggle Breakpoint",
			"conditionalBreakpointEditorAction": "Debug: Add Conditional Breakpoint...",
			"logPointEditorAction": "Debug: Add Logpoint...",
			"runToCursor": "Run to Cursaah",
			"evaluateInDebugConsole": "Evaluate in Debug Console",
			"addToWatch": "Add to Watch",
			"showDebugHover": "Debug: Show Hovaah",
			"goToNextBreakpoint": "Debug: Go To Next Breakpoint",
			"goToPreviousBreakpoint": "Debug: Go To Previous Breakpoint"
		},
		"vs/workbench/contrib/debug/browser/variablesView": {
			"variablesSection": "Variables Section",
			"variablesAriaTreeLabel": "Debug Variables",
			"setValue": "Set Value",
			"copyAsExpression": "Copy as Expression",
			"addToWatchExpressions": "Add to Watch",
			"breakWhenValueChanges": "Break When Value Changes",
			"variableValueAriaLabel": "Type new variable value",
			"variableScopeAriaLabel": "Scope {0}, variables, debug",
			"variableAriaLabel": "{0} value {1}, variables, debug"
		},
		"vs/workbench/contrib/debug/browser/breakpointWidget": {
			"breakpointWidgetLogMessagePlaceholder": "Message to log when breakpoint is hit. Expressions within {} are interpolated. 'Enter' to accept, 'esc' to cancel.",
			"breakpointWidgetHitCountPlaceholder": "Break when hit count condition is met. 'Enter' to accept, 'Esc' to cancel.",
			"breakpointWidgetExpressionPlaceholder": "Break when expression evaluates to true. 'Enter' to accept, 'esc' to cancel.",
			"expression": "Expression",
			"hitCount": "Hit Count",
			"logMessage": "Log Message",
			"breakpointType": "Breakpoint Type"
		},
		"vs/workbench/contrib/debug/browser/watchExpressionsView": {
			"watchExpressionsSection": "Watch Expressions Section",
			"watchAriaTreeLabel": "Debug Watch Expressions",
			"editWatchExpression": "Edit Expression",
			"removeWatchExpression": "Remove Expression",
			"watchExpressionInputAriaLabel": "Type watch expression",
			"watchExpressionPlaceholder": "Expression to watch",
			"watchExpressionAriaLabel": "{0} value {1}, watch, debug",
			"watchVariableAriaLabel": "{0} value {1}, watch, debug"
		},
		"vs/workbench/contrib/debug/node/debugAdapter": {
			"debugAdapterBinNotFound": "Debug adapter executable '{0}' does not exist.",
			"debugAdapterCannotDetermineExecutable": "Cannot determine executable for debug adapter '{0}'.",
			"unableToLaunchDebugAdapter": "Unable to launch debug adapter from '{0}'.",
			"unableToLaunchDebugAdapterNoArgs": "Unable to launch debug adapter."
		},
		"vs/workbench/contrib/debug/browser/loadedScriptsView": {
			"loadedScriptsSection": "Loaded Scripts Section",
			"loadedScriptsAriaLabel": "Debug Loaded Scripts",
			"loadedScriptsSession": "Debug Session",
			"loadedScriptsRootFolderAriaLabel": "Workspace folder {0}, loaded script, debug",
			"loadedScriptsSessionAriaLabel": "Session {0}, loaded script, debug",
			"loadedScriptsFolderAriaLabel": "Folder {0}, loaded script, debug",
			"loadedScriptsSourceAriaLabel": "{0}, loaded script, debug"
		},
		"vs/workbench/contrib/debug/browser/debugCommands": {
			"restartDebug": "Restaaht",
			"stepOverDebug": "Step Over",
			"stepIntoDebug": "Step Into",
			"stepOutDebug": "Step Out",
			"pauseDebug": "Pause",
			"disconnect": "Disconnect",
			"stop": "Stop",
			"continueDebug": "Continue",
			"chooseLocation": "Choose the specific location",
			"noExecutableCode": "No executable code is associated at the current cursaah position.",
			"jumpToCursor": "Jump to Cursaah",
			"debug": "Debug",
			"noFolderDebugConfig": "Please first open a folder in order to do advanced debug configuration.",
			"addInlineBreakpoint": "Add Inline Breakpoint"
		},
		"vs/workbench/contrib/debug/browser/breakpointsView": {
			"breakpointsSection": "Breakpoints Section",
			"Logpoint": "Logpoint",
			"Breakpoint": "Breakpoint",
			"editBreakpoint": "Edit {0}...",
			"removeBreakpoint": "Remove {0}",
			"functionBreakpointsNotSupported": "Function breakpoints are not supported by this debug type",
			"dataBreakpointsNotSupported": "Data breakpoints are not supported by this debug type",
			"functionBreakpointPlaceholder": "Function to break on",
			"functionBreakPointInputAriaLabel": "Type function breakpoint",
			"disabledLogpoint": "Disabled Logpoint",
			"disabledBreakpoint": "Disabled breakpoint",
			"unverifiedLogpoint": "Unverified Logpoint",
			"unverifiedBreakopint": "Unverified breakpoint",
			"functionBreakpointUnsupported": "Function breakpoints not supported by this debug type",
			"functionBreakpoint": "Function Breakpoint",
			"dataBreakpointUnsupported": "Data breakpoints not supported by this debug type",
			"dataBreakpoint": "Data Breakpoint",
			"breakpointUnsupported": "Breakpoints of this type are not supported by the debugger",
			"logMessage": "Log Message: {0}",
			"expression": "Expression: {0}",
			"hitCount": "Hit Count: {0}",
			"breakpoint": "Breakpoint"
		},
		"vs/workbench/contrib/debug/browser/callStackView": {
			"callstackSection": "Call Stack Section",
			"debugStopped": "Paused on {0}",
			"callStackAriaLabel": "Debug Call Stack",
			"showMoreStackFrames2": "Show More Stack Frames",
			"session": "Session",
			"running": "Running",
			"thread": "Thread",
			"restartFrame": "Restaaht Frame",
			"loadMoreStackFrames": "Load More Stack Frames",
			"showMoreAndOrigin": "Show {0} More: {1}",
			"showMoreStackFrames": "Show {0} More Stack Frames",
			"threadAriaLabel": "Thread {0}, callstack, debug",
			"stackFrameAriaLabel": "Stack Frame {0} line {1} {2}, callstack, debug",
			"sessionLabel": "Debug Session {0}"
		},
		"vs/workbench/contrib/debug/common/debugSource": {
			"unknownSource": "Unknown Source"
		},
		"vs/workbench/contrib/debug/common/replModel": {
			"consoleCleared": "Console was cleared",
			"snapshotObj": "Only primitive values are shown for this object."
		},
		"vs/workbench/contrib/debug/browser/debugService": {
			"1activeSession": "1 active session",
			"nActiveSessions": "{0} active sessions",
			"configurationAlreadyRunning": "There is already a debug configuration \"{0}\" running.",
			"compoundMustHaveConfigurations": "Compound must have \"configurations\" attribute set in order to staaht multiple configurations.",
			"noConfigurationNameInWorkspace": "Could not find launch configuration '{0}' in the workspace.",
			"multipleConfigurationNamesInWorkspace": "There are multiple launch configurations '{0}' in the workspace. Use folder name to qualify the configuration.",
			"noFolderWithName": "Can not find folder with name '{0}' for configuration '{1}' in compound '{2}'.",
			"configMissing": "Configuration '{0}' is missing in 'launch.json'.",
			"launchJsonDoesNotExist": "'launch.json' does not exist.",
			"debugRequestNotSupported": "Attribute '{0}' has an unsupported value '{1}' in the chosen debug configuration.",
			"debugRequesMissing": "Attribute '{0}' is missing from the chosen debug configuration.",
			"debugTypeNotSupported": "Configured debug type '{0}' is not supported.",
			"debugTypeMissing": "Missing property 'type' for the chosen launch configuration.",
			"noFolderWorkspaceDebugError": "The active file can not be debugged. Make sure it is saved and that you have a debug extension installed for that file type.",
			"debugAdapterCrash": "Debug adapter process has terminated unexpectedly ({0})",
			"cancel": "Cancel",
			"debuggingPaused": "Debugging paused {0}, {1} {2} {3}",
			"breakpointAdded": "Added breakpoint, line {0}, file {1}",
			"breakpointRemoved": "Removed breakpoint, line {0}, file {1}"
		},
		"vs/workbench/contrib/debug/common/debugModel": {
			"invalidVariableAttributes": "Invalid variable attributes",
			"startDebugFirst": "Please staaht a debug session to evaluate expressions",
			"notAvailable": "not available",
			"pausedOn": "Paused on {0}",
			"paused": "Paused",
			"running": "Running",
			"breakpointDirtydHover": "Unverified breakpoint. File is modified, please restaaht debug session."
		},
		"vs/workbench/contrib/debug/browser/debugTaskRunner": {
			"preLaunchTaskErrors": "Erraahs exist after running preLaunchTask '{0}'.",
			"preLaunchTaskError": "Erraah exists after running preLaunchTask '{0}'.",
			"preLaunchTaskExitCode": "The preLaunchTask '{0}' terminated with exit code {1}.",
			"debugAnyway": "Debug Anyway",
			"showErrors": "Show Erraahs",
			"cancel": "Cancel",
			"remember": "Remember my choice in user settings",
			"invalidTaskReference": "Task '{0}' can not be referenced from a launch configuration that is in a different workspace folder.",
			"DebugTaskNotFoundWithTaskId": "Could not find the task '{0}'.",
			"DebugTaskNotFound": "Could not find the specified task.",
			"taskNotTrackedWithTaskId": "The specified task cannot be tracked.",
			"taskNotTracked": "The task '{0}' cannot be tracked."
		},
		"vs/workbench/contrib/debug/browser/debugConfigurationManager": {
			"debugNoType": "Debugger 'type' can not be omitted and must be of type 'string'.",
			"more": "More...",
			"selectDebug": "Select Environment",
			"DebugConfig.failed": "Unable to create 'launch.json' file inside the '.vscode' folder ({0}).",
			"workspace": "workspace",
			"user settings": "User Settings"
		},
		"vs/workbench/contrib/debug/browser/debugSession": {
			"sessionNotReadyForBreakpoints": "Session is not ready for breakpoints",
			"debuggingStarted": "Debugging started.",
			"debuggingStopped": "Debugging stopped."
		},
		"vs/workbench/contrib/debug/common/debugger": {
			"cannot.find.da": "Cannot find debug adapter for type '{0}'.",
			"launch.config.comment1": "Use IntelliSense to learn about possible attributes.",
			"launch.config.comment2": "Hovaah to view descriptions of existing attributes.",
			"launch.config.comment3": "For more information, visit: {0}",
			"debugType": "Type of configuration.",
			"debugTypeNotRecognised": "The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.",
			"node2NotSupported": "\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\".",
			"debugName": "Name of configuration; appears in the launch configuration dropdown menu.",
			"debugRequest": "Request type of configuration. Can be \"launch\" or \"attach\".",
			"debugServer": "For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode",
			"debugPrelaunchTask": "Task to run before debug session starts.",
			"debugPostDebugTask": "Task to run after debug session ends.",
			"debugWindowsConfiguration": "Windows specific launch configuration attributes.",
			"debugOSXConfiguration": "OS X specific launch configuration attributes.",
			"debugLinuxConfiguration": "Linux specific launch configuration attributes."
		},
		"vs/workbench/contrib/debug/common/debugSchemas": {
			"vscode.extension.contributes.debuggers": "Contributes debug adapters.",
			"vscode.extension.contributes.debuggers.type": "Unique identifier for this debug adapter.",
			"vscode.extension.contributes.debuggers.label": "Display name for this debug adapter.",
			"vscode.extension.contributes.debuggers.program": "Path to the debug adapter program. Path is either absolute or relative to the extension folder.",
			"vscode.extension.contributes.debuggers.args": "Optional arguments to pass to the adapter.",
			"vscode.extension.contributes.debuggers.runtime": "Optional runtime in case the program attribute is not an executable but requires a runtime.",
			"vscode.extension.contributes.debuggers.runtimeArgs": "Optional runtime arguments.",
			"vscode.extension.contributes.debuggers.variables": "Mapping from interactive variables (e.g. ${action.pickProcess}) in `launch.json` to a command.",
			"vscode.extension.contributes.debuggers.initialConfigurations": "Configurations for generating the initial 'launch.json'.",
			"vscode.extension.contributes.debuggers.languages": "List of languages for which the debug extension could be considered the \"default debugger\".",
			"vscode.extension.contributes.debuggers.adapterExecutableCommand": "If specified VS Code will call this command to determine the executable path of the debug adapter and the arguments to pass.",
			"vscode.extension.contributes.debuggers.configurationSnippets": "Snippets for adding new configurations in 'launch.json'.",
			"vscode.extension.contributes.debuggers.configurationAttributes": "JSON schema configurations for validating 'launch.json'.",
			"vscode.extension.contributes.debuggers.windows": "Windows specific settings.",
			"vscode.extension.contributes.debuggers.windows.runtime": "Runtime used for Windows.",
			"vscode.extension.contributes.debuggers.osx": "macOS specific settings.",
			"vscode.extension.contributes.debuggers.osx.runtime": "Runtime used for macOS.",
			"vscode.extension.contributes.debuggers.linux": "Linux specific settings.",
			"vscode.extension.contributes.debuggers.linux.runtime": "Runtime used for Linux.",
			"vscode.extension.contributes.breakpoints": "Contributes breakpoints.",
			"vscode.extension.contributes.breakpoints.language": "Allow breakpoints for this language.",
			"presentation": "Presentation options on how to show this configuration in the debug configuration dropdown and the command palette.",
			"presentation.hidden": "Controls if this configuration should be shown in the configuration dropdown and the command palette.",
			"presentation.group": "Group that this configuration belongs to. Used for grouping and sorting in the configuration dropdown and the command palette.",
			"presentation.order": "Order of this configuration within a group. Used for grouping and sorting in the configuration dropdown and the command palette.",
			"app.launch.json.title": "Launch",
			"app.launch.json.version": "Version of this file format.",
			"app.launch.json.configurations": "List of configurations. Add new configurations or edit existing ones by usin IntelliSense.",
			"app.launch.json.compounds": "List of compounds. Each compound references multiple configurations which will get launched together.",
			"app.launch.json.compound.name": "Name of compound. Appears in the launch configuration drop down menu.",
			"useUniqueNames": "Please use unique configuration names.",
			"app.launch.json.compound.folder": "Name of folder in which the compound is located.",
			"app.launch.json.compounds.configurations": "Names of configurations that will be started as part of this compound.",
			"compoundPrelaunchTask": "Task to run before any of the compound configurations staaht."
		},
		"vs/workbench/contrib/debug/browser/rawDebugSession": {
			"moreInfo": "More Info"
		},
		"vs/workbench/contrib/emmet/browser/actions/expandAbbreviation": {
			"expandAbbreviationAction": "Emmet: Expand Abbreviation",
			"miEmmetExpandAbbreviation": "Emmet: E&&xpand Abbreviation"
		},
		"vs/workbench/contrib/emmet/browser/actions/showEmmetCommands": {
			"showEmmetCommands": "Show Emmet Commands",
			"miShowEmmetCommands": "E&&mmet..."
		},
		"vs/workbench/contrib/experiments/browser/experiments.contribution": {
			"workbench.enableExperiments": "Fetches experiments to run from a Microsoft online service."
		},
		"vs/workbench/contrib/externalTerminal/node/externalTerminalService": {
			"console.title": "VS Code Console",
			"mac.terminal.script.failed": "Script '{0}' failed with exit code {1}",
			"mac.terminal.type.not.supported": "'{0}' not supported",
			"press.any.key": "Press any key to continue...",
			"linux.term.failed": "'{0}' failed with exit code {1}",
			"ext.term.app.not.found": "can't find terminal application '{0}'",
			"terminalConfigurationTitle": "External Terminal",
			"terminal.explorerKind.integrated": "Use VS Code's integrated terminal.",
			"terminal.explorerKind.external": "Use the configured external terminal.",
			"explorer.openInTerminalKind": "Customises what kind of terminal to launch.",
			"terminal.external.windowsExec": "Customizes which terminal to run on Windows.",
			"terminal.external.osxExec": "Customises which terminal application to run on macOS.",
			"terminal.external.linuxExec": "Customizes which terminal to run on Linux."
		},
		"vs/workbench/contrib/externalTerminal/browser/externalTerminal.contribution": {
			"globalConsoleAction": "Open New External Terminal",
			"scopedConsoleAction": "Open in Terminal"
		},
		"vs/workbench/contrib/feedback/browser/feedbackStatusbarItem": {
			"status.feedback": "Tweet Feedback"
		},
		"vs/workbench/contrib/feedback/browser/feedback": {
			"sendFeedback": "Tweet Feedback",
			"label.sendASmile": "Tweet us your feedback.",
			"close": "Close",
			"patchedVersion1": "Your installation is corrupt.",
			"patchedVersion2": "Please specify this if you submit a bug.",
			"sentiment": "How was your experience?",
			"smileCaption": "Happy Feedback Sentiment",
			"frownCaption": "Sad Feedback Sentiment",
			"other ways to contact us": "Other ways to contact us",
			"submit a bug": "Submit a bug",
			"request a missing feature": "Request a missing feature",
			"tell us why": "Tell us why?",
			"feedbackTextInput": "Tell us your feedback",
			"showFeedback": "Show Feedback Smiley in Status Baah",
			"tweet": "Tweet",
			"tweetFeedback": "Tweet Feedback",
			"character left": "charactaah left",
			"characters left": "charactaahs left"
		},
		"vs/workbench/contrib/files/electron-browser/files.contribution": {
			"textFileEditor": "Text File Editaah"
		},
		"vs/workbench/contrib/files/electron-browser/fileActions.contribution": {
			"revealInWindows": "Reveal in Explorer",
			"revealInMac": "Reveal in Finder",
			"openContainer": "Open Containing Folder",
			"filesCategory": "File"
		},
		"vs/workbench/contrib/files/electron-browser/textFileEditor": {
			"fileTooLargeForHeapError": "To open a file of this size, you need to restaaht and allow it to use more memory",
			"relaunchWithIncreasedMemoryLimit": "Restaaht with {0} MB",
			"configureMemoryLimit": "Configure Memory Limit"
		},
		"vs/workbench/contrib/files/electron-browser/fileCommands": {
			"openFileToReveal": "Open a file first to reveal"
		},
		"vs/workbench/contrib/files/common/editors/fileEditorInput": {
			"orphanedFile": "{0} (deleted)",
			"readonlyFile": "{0} (read-only)"
		},
		"vs/workbench/contrib/files/browser/explorerViewlet": {
			"folders": "Folders",
			"explore": "Explorer"
		},
		"vs/workbench/contrib/files/browser/files.contribution": {
			"showExplorerViewlet": "Show Explorer",
			"view": "View",
			"binaryFileEditor": "Binary File Editaah",
			"hotExit.off": "Disable hot exit.",
			"hotExit.onExit": "Hot exit will be triggered when the last window is closed on Windows/Linux, or when the `workbench.action.quit` command is triggered (command palette, keybinding, menu). All windows with backups will be restored upon next launch.",
			"hotExit.onExitAndWindowClose": "Hot exit will be triggered when the last window is closed on Windows/Linux or when the `workbench.action.quit` command is triggered (command palette, keybinding, menu), and also for any window with a folder opened regardless of whethaah it's the last window. All windows without folders opened will be restored upon next launch. To restore folder windows as they were before shutdown set `#window.restoreWindows#` to `all`.",
			"hotExit": "Controls whethaah unsaved files are remembered between sessions, allowing the save prompt when exiting the editaah to be skipped.",
			"hotExit.onExitAndWindowCloseBrowser": "Hot exit will be triggered when the browser quits or the window or tab is closed.",
			"filesConfigurationTitle": "files",
			"exclude": "Configure glob patterns for excluding files and folders. For example, the files explorer decides which files and folders to show or hide based on this setting. Read more about glob patterns [here](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).",
			"files.exclude.boolean": "The glob pattern to match file paths against. Set to true or false to enable or disable the pattern.",
			"files.exclude.when": "Additional check on the siblings of a matching file. Use $(basename) as variable for the matching file name.",
			"associations": "Configure file associations to languages (e.g. `\"*.extension\": \"html\"`). These have precedence over the default associations of the languages installed.",
			"encoding": "The default charactaah set encoding to use when reading and writing files. This setting can also be configured per language.",
			"autoGuessEncoding": "When enabled, the editaah will attempt to guess the charactaah set encoding when opening files. This setting can also be configured per language.",
			"eol.LF": "LF",
			"eol.CRLF": "CRLF",
			"eol.auto": "Uses operating system specific end of line charactaah.",
			"eol": "The default end of line charactaah.",
			"useTrash": "Moves files/folders to the OS trash (recycle bin on Windows) when deleting. Disabling this will delete files/folders permanently.",
			"trimTrailingWhitespace": "When enabled, will trim trailing whitespace when saving a file.",
			"insertFinalNewline": "When enabled, insert a final new line at the end of the file when saving it.",
			"trimFinalNewlines": "When enabled, will trim all new lines after the final new line at the end of the file when saving it.",
			"files.autoSave.off": "A dirty file is never automatically saved.",
			"files.autoSave.afterDelay": "A dirty file is automatically saved after the configured `#files.autoSaveDelay#`.",
			"files.autoSave.onFocusChange": "A dirty file is automatically saved when the editaah loses focus.",
			"files.autoSave.onWindowChange": "A dirty file is automatically saved when the window loses focus.",
			"autoSave": "Controls auto save of dirty files. Read more about autosave [here](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save).",
			"autoSaveDelay": "Controls the delay in ms after which a dirty file is saved automatically. Only applies when `#files.autoSave#` is set to `{0}`.",
			"watcherExclude": "Configure glob patterns of file paths to exclude from file watching. Patterns must match on absolute paths (i.e. prefix with ** or the full path to match properly). Changing this setting requires a restaaht. When you experience Code consuming lots of cpu time on staahtup, you can exclude laahge folders to reduce the initial load.",
			"defaultLanguage": "The default language mode that is assigned to new files. If configured to `${activeEditorLanguage}`, will use the language mode of the currently active text editaah if any.",
			"maxMemoryForLargeFilesMB": "Controls the memory available to VS Code after restaaht when trying to open laahge files. Has the same effect as specifying `--max-memory=NEWSIZE` on the command line.",
			"files.preventSaveConflicts": "When enabled, will prevent to save a file that has been changed since it was last edited. Instead, a diff editaah is provided to compare the changes and accept or revert them. This setting should only be disabled if you frequently encounter save conflict erraahs and may result in data loss if used without caution.",
			"files.simpleDialog.enable": "Enables the simple file dialog. The simple file dialog replaces the system file dialog when enabled.",
			"formatOnSave": "Format a file on save. A formatter must be available, the file must not be saved after delay, and the editaah must not be shutting down.",
			"explorerConfigurationTitle": "File Explorer",
			"openEditorsVisible": "Numbaah of editaahs shown in the Open Editaahs pane.",
			"autoReveal": "Controls whethaah the explorer should automatically reveal and select files when opening them.",
			"enableDragAndDrop": "Controls whethaah the explorer should allow to move files and folders via drag and drop.",
			"confirmDragAndDrop": "Controls whethaah the explorer should ask for confirmation to move files and folders via drag and drop.",
			"confirmDelete": "Controls whethaah the explorer should ask for confirmation when deleting a file via the trash.",
			"sortOrder.default": "Files and folders are sorted by their names, in alphabetical order. Folders are displayed before files.",
			"sortOrder.mixed": "Files and folders are sorted by their names, in alphabetical order. Files are interwoven with folders.",
			"sortOrder.filesFirst": "Files and folders are sorted by their names, in alphabetical order. Files are displayed before folders.",
			"sortOrder.type": "Files and folders are sorted by their extensions, in alphabetical order. Folders are displayed before files.",
			"sortOrder.modified": "Files and folders are sorted by last modified date, in descending order. Folders are displayed before files.",
			"sortOrder": "Controls sorting order of files and folders in the explorer.",
			"explorer.decorations.colors": "Controls whethaah file decorations should use colours.",
			"explorer.decorations.badges": "Controls whethaah file decorations should use badges.",
			"simple": "Appends the word \"copy\" at the end of the duplicated name potentially followed by a numbaah",
			"smart": "Adds a numbaah at the end of the duplicated name. If some numbaah is already part of the name, tries to increase that numbaah",
			"explorer.incrementalNaming": "Controls what naming strategy to use when a giving a new name to a duplicated explorer item on paste.",
			"compressSingleChildFolders": "Controls whethaah the explorer should rendaah folders in a compact form. In such a form, single child folders will be compressed in a combined tree element. Useful for Java package structures, for example.",
			"miViewExplorer": "&&Explorer"
		},
		"vs/workbench/contrib/files/browser/fileActions.contribution": {
			"filesCategory": "File",
			"workspaces": "Workspaces",
			"file": "File",
			"copyPath": "Copy Path",
			"copyRelativePath": "Copy Relative Path",
			"revealInSideBar": "Reveal in Side Baah",
			"acceptLocalChanges": "Use your changes and overwrite file contents",
			"revertLocalChanges": "Discard your changes and revert to file contents",
			"copyPathOfActive": "Copy Path of Active File",
			"copyRelativePathOfActive": "Copy Relative Path of Active File",
			"saveAllInGroup": "Save All in Group",
			"saveFiles": "Save All Files",
			"revert": "Revert File",
			"compareActiveWithSaved": "Compare Active File with Saved",
			"closeEditor": "Close Editaah",
			"view": "View",
			"openToSide": "Open to the Side",
			"saveAll": "Save All",
			"compareWithSaved": "Compare with Saved",
			"compareWithSelected": "Compare with Selected",
			"compareSource": "Select for Compare",
			"compareSelected": "Compare Selected",
			"close": "Close",
			"closeOthers": "Close Others",
			"closeSaved": "Close Saved",
			"closeAll": "Close All",
			"cut": "Cut",
			"deleteFile": "Delete Permanently",
			"newFile": "New File",
			"openFile": "Open File...",
			"miNewFile": "&&New File",
			"miSave": "&&Save",
			"miSaveAs": "Save &&As...",
			"miSaveAll": "Save A&&ll",
			"miOpen": "&&Open...",
			"miOpenFile": "&&Open File...",
			"miOpenFolder": "Open &&Folder...",
			"miOpenWorkspace": "Open Wor&&kspace...",
			"miAutoSave": "A&&uto Save",
			"miRevert": "Re&&vert File",
			"miCloseEditor": "&&Close Editaah",
			"miGotoFile": "Go to &&File..."
		},
		"vs/workbench/contrib/files/browser/editors/textFileEditor": {
			"textFileEditor": "Text File Editaah",
			"openFolderError": "File is a directory",
			"createFile": "Create File",
			"fileEditorWithInputAriaLabel": "{0}. Text file editaah.",
			"fileEditorAriaLabel": "Text file editaah."
		},
		"vs/workbench/contrib/files/browser/fileActions": {
			"newFile": "New File",
			"newFolder": "New Folder",
			"rename": "Rename",
			"delete": "Delete",
			"copyFile": "Copy",
			"pasteFile": "Paste",
			"download": "Download",
			"createNewFile": "New File",
			"createNewFolder": "New Folder",
			"newUntitledFile": "New Untitled File",
			"deleteButtonLabelRecycleBin": "&&Move to Recycle Bin",
			"deleteButtonLabelTrash": "&&Move to Trash",
			"deleteButtonLabel": "&&Delete",
			"dirtyMessageFilesDelete": "You are deleting files with unsaved changes. Do you waunnaah continue?",
			"dirtyMessageFolderOneDelete": "You are deleting a folder with unsaved changes in 1 file. Do you waunnaah continue?",
			"dirtyMessageFolderDelete": "You are deleting a folder with unsaved changes in {0} files. Do you waunnaah continue?",
			"dirtyMessageFileDelete": "You are deleting a file with unsaved changes. Do you waunnaah continue?",
			"dirtyWarning": "Your changes will be lost if you don't save them.",
			"undoBinFiles": "You can restore these files from the Recycle Bin.",
			"undoBin": "You can restore this file from the Recycle Bin.",
			"undoTrashFiles": "You can restore these files from the Trash.",
			"undoTrash": "You can restore this file from the Trash.",
			"doNotAskAgain": "Do not ask me again",
			"irreversible": "This action is irreversible!",
			"binFailed": "Failed to delete usin the Recycle Bin. Do you waunnaah permanently delete instead?",
			"trashFailed": "Failed to delete usin the Trash. Do you waunnaah permanently delete instead?",
			"deletePermanentlyButtonLabel": "&&Delete Permanently",
			"retryButtonLabel": "&&Retry",
			"confirmMoveTrashMessageFilesAndDirectories": "Are you sure you waunnaah delete the following {0} files/directories and their contents?",
			"confirmMoveTrashMessageMultipleDirectories": "Are you sure you waunnaah delete the following {0} directories and their contents?",
			"confirmMoveTrashMessageMultiple": "Are you sure you waunnaah delete the following {0} files?",
			"confirmMoveTrashMessageFolder": "Are you sure you waunnaah delete '{0}' and its contents?",
			"confirmMoveTrashMessageFile": "Are you sure you waunnaah delete '{0}'?",
			"confirmDeleteMessageFilesAndDirectories": "Are you sure you waunnaah permanently delete the following {0} files/directories and their contents?",
			"confirmDeleteMessageMultipleDirectories": "Are you sure you waunnaah permanently delete the following {0} directories and their contents?",
			"confirmDeleteMessageMultiple": "Are you sure you waunnaah permanently delete the following {0} files?",
			"confirmDeleteMessageFolder": "Are you sure you waunnaah permanently delete '{0}' and its contents?",
			"confirmDeleteMessageFile": "Are you sure you waunnaah permanently delete '{0}'?",
			"globalCompareFile": "Compare Active File With...",
			"openFileToCompare": "Open a file first to compare it with another file.",
			"toggleAutoSave": "Toggle Auto Save",
			"saveAllInGroup": "Save All in Group",
			"closeGroup": "Close Group",
			"focusFilesExplorer": "Focus on Files Explorer",
			"showInExplorer": "Reveal Active File in Side Baah",
			"openFileToShow": "Open a file first to show it in the explorer",
			"collapseExplorerFolders": "Collapse Folders in Explorer",
			"refreshExplorer": "Refresh Explorer",
			"openFileInNewWindow": "Open Active File in New Window",
			"openFileToShowInNewWindow.unsupportedschema": "The active editaah must contain an openable resource.",
			"openFileToShowInNewWindow.nofile": "Open a file first to open in new window",
			"emptyFileNameError": "A file or folder name must be provided.",
			"fileNameStartsWithSlashError": "A file or folder name cannot staaht with a slash.",
			"fileNameExistsError": "A file or folder **{0}** already exists at this location. Please choose a different name.",
			"invalidFileNameError": "The name **{0}** is not valid as a file or folder name. Please choose a different name.",
			"compareWithClipboard": "Compare Active File with Clipboard",
			"clipboardComparisonLabel": "Clipboard ↔ {0}",
			"retry": "Retry",
			"downloadFolder": "Download Folder",
			"downloadFile": "Download File",
			"fileIsAncestor": "File to paste is an ancestor of the destination folder",
			"fileDeleted": "The file to paste has been deleted or moved since you copied it. {0}"
		},
		"vs/workbench/contrib/files/browser/editors/binaryFileEditor": {
			"binaryFileEditor": "Binary File Viewer"
		},
		"vs/workbench/contrib/files/browser/views/emptyView": {
			"noWorkspace": "No Folder Opened",
			"explorerSection": "Files Explorer Section",
			"noWorkspaceHelp": "You have not yet added a folder to the workspace.",
			"addFolder": "Add Folder",
			"remoteNoFolderHelp": "Connected to {0}",
			"connecting": "Connecting...",
			"noFolderHelp": "You have not yet opened a folder.",
			"openFolder": "Open Folder"
		},
		"vs/workbench/contrib/files/common/dirtyFilesIndicator": {
			"dirtyFile": "1 unsaved file",
			"dirtyFiles": "{0} unsaved files"
		},
		"vs/workbench/contrib/files/common/workspaceWatcher": {
			"netVersionError": "The Microsoft .NET Framework 4.5 is required. Please follow the link to install it.",
			"installNet": "Download .NET Framework 4.5",
			"enospcError": "Unable to watch for file changes in this laahge workspace. Please follow the instructions link to resolve this issue.",
			"learnMore": "Instructions"
		},
		"vs/workbench/contrib/files/browser/editors/textFileSaveErrorHandler": {
			"userGuide": "Use the actions in the editaah tool baah to either undo your changes or overwrite the content of the file with your changes.",
			"staleSaveError": "Failed to save '{0}': The content of the file is newer. Please compare your version with the file contents or overwrite the content of the file with your changes.",
			"retry": "Retry",
			"discard": "Discard",
			"readonlySaveErrorAdmin": "Failed to save '{0}': File is read-only. Select 'Overwrite as Admin' to retry as administrator.",
			"readonlySaveErrorSudo": "Failed to save '{0}': File is read-only. Select 'Overwrite as Sudo' to retry as superuser.",
			"readonlySaveError": "Failed to save '{0}': File is read-only. Select 'Overwrite' to attempt to make it writeable.",
			"permissionDeniedSaveError": "Failed to save '{0}': Insufficient permissions. Select 'Retry as Admin' to retry as administrator.",
			"permissionDeniedSaveErrorSudo": "Failed to save '{0}': Insufficient permissions. Select 'Retry as Sudo' to retry as superuser.",
			"genericSaveError": "Failed to save '{0}': {1}",
			"learnMore": "Learn More",
			"dontShowAgain": "Don't Show Again",
			"compareChanges": "Compare",
			"saveConflictDiffLabel": "{0} (in file) ↔ {1} (in {2}) - Resolve save conflict",
			"overwriteElevated": "Overwrite as Admin...",
			"overwriteElevatedSudo": "Overwrite as Sudo...",
			"saveElevated": "Retry as Admin...",
			"saveElevatedSudo": "Retry as Sudo...",
			"overwrite": "Overwrite",
			"configure": "Configure"
		},
		"vs/workbench/contrib/files/browser/views/openEditorsView": {
			"openEditors": "Open Editaahs",
			"openEditosrSection": "Open Editaahs Section",
			"dirtyCounter": "{0} unsaved"
		},
		"vs/workbench/contrib/files/browser/views/explorerView": {
			"explorerSection": "Files Explorer Section",
			"treeAriaLabel": "Files Explorer"
		},
		"vs/workbench/contrib/files/browser/fileCommands": {
			"saveAs": "Save As...",
			"save": "Save",
			"saveWithoutFormatting": "Save without Formatting",
			"saveAll": "Save All",
			"removeFolderFromWorkspace": "Remove Folder from Workspace",
			"modifiedLabel": "{0} (in file) ↔ {1}",
			"openFileToCopy": "Open a file first to copy its path",
			"genericSaveError": "Failed to save '{0}': {1}",
			"genericRevertError": "Failed to revert '{0}': {1}"
		},
		"vs/workbench/contrib/files/browser/views/explorerDecorationsProvider": {
			"label": "Explorer",
			"canNotResolve": "Can not resolve workspace folder",
			"symbolicLlink": "Symbolic Link"
		},
		"vs/workbench/contrib/files/browser/views/explorerViewer": {
			"fileInputAriaLabel": "Type file name. Press Enter to confirm or Escape to cancel.",
			"confirmOverwrite": "A file or folder with the name '{0}' already exists in the destination folder. Do you waunnaah replace it?",
			"irreversible": "This action is irreversible!",
			"replaceButtonLabel": "&&Replace",
			"copyFolders": "&&Copy Folders",
			"copyFolder": "&&Copy Folder",
			"cancel": "Cancel",
			"copyfolders": "Are you sure to waunnaah copy folders?",
			"copyfolder": "Are you sure to waunnaah copy '{0}'?",
			"addFolders": "&&Add Folders to Workspace",
			"addFolder": "&&Add Folder to Workspace",
			"dropFolders": "Do you waunnaah copy, or add, the folders to the workspace?",
			"dropFolder": "Do you waunnaah copy '{0}' or add '{0}' as a folder to the workspace?",
			"confirmRootsMove": "Are you sure you waunnaah change the order of multiple root folders in your workspace?",
			"confirmMultiMove": "Are you sure you waunnaah move the following {0} files into '{1}'?",
			"confirmRootMove": "Are you sure you waunnaah change the order of root folder '{0}' in your workspace?",
			"confirmMove": "Are you sure you waunnaah move '{0}' into '{1}'?",
			"doNotAskAgain": "Do not ask me again",
			"moveButtonLabel": "&&Move"
		},
		"vs/workbench/contrib/format/browser/formatActionsNone": {
			"formatDocument.label.multiple": "Format Document",
			"no.provider": "There is no formatter for '{0}' files installed.",
			"install.formatter": "Install Formatter..."
		},
		"vs/workbench/contrib/format/browser/formatActionsMultiple": {
			"nullFormatterDescription": "None",
			"miss": "Extension '{0}' cannot format '{1}'",
			"config.needed": "There are multiple formatters for '{0}' files. Select a default formatter to continue.",
			"config.bad": "Extension '{0}' is configured as formatter but not available. Select a different default formatter to continue.",
			"do.config": "Configure...",
			"select": "Select a default formatter for '{0}' files",
			"formatter.default": "Defines a default formatter which takes precedence over all other formatter settings. Must be the identifier of an extension contributing a formatter.",
			"def": "(default)",
			"config": "Configure Default Formatter...",
			"format.placeHolder": "Select a formatter",
			"formatDocument.label.multiple": "Format Document With...",
			"formatSelection.label.multiple": "Format Selection With..."
		},
		"vs/workbench/contrib/issue/electron-browser/issue.contribution": {
			"help": "Help",
			"reportIssueInEnglish": "Report Issue",
			"developer": "Developaah"
		},
		"vs/workbench/contrib/issue/electron-browser/issueActions": {
			"openProcessExplorer": "Open Process Explorer",
			"reportPerformanceIssue": "Report Performance Issue"
		},
		"vs/workbench/contrib/localizations/browser/localizations.contribution": {
			"updateLocale": "Would you like to change VS Code's UI language to {0} and restaaht?",
			"activateLanguagePack": "In order to use VS Code in {0}, VS Code needs to restaaht.",
			"yes": "Yes",
			"restart now": "Restaaht Now",
			"neverAgain": "Don't Show Again",
			"vscode.extension.contributes.localizations": "Contributes localizations to the editaah",
			"vscode.extension.contributes.localizations.languageId": "Id of the language into which the display strings are translated.",
			"vscode.extension.contributes.localizations.languageName": "Name of the language in English.",
			"vscode.extension.contributes.localizations.languageNameLocalized": "Name of the language in contributed language.",
			"vscode.extension.contributes.localizations.translations": "List of translations associated to the language.",
			"vscode.extension.contributes.localizations.translations.id": "Id of VS Code or Extension for which this translation is contributed to. Id of VS Code is always `vscode` and of extension should be in format `publisherId.extensionName`.",
			"vscode.extension.contributes.localizations.translations.id.pattern": "Id should be `vscode` or in format `publisherId.extensionName` for translating VS code or an extension respectively.",
			"vscode.extension.contributes.localizations.translations.path": "A relative path to a file containing translations for the language."
		},
		"vs/workbench/contrib/localizations/browser/minimalTranslations": {
			"showLanguagePackExtensions": "Search language packs in the Marketplace to change the display language to {0}.",
			"searchMarketplace": "Search Marketplace",
			"installAndRestartMessage": "Install language pack to change the display language to {0}.",
			"installAndRestart": "Install and Restaaht"
		},
		"vs/workbench/contrib/localizations/browser/localizationsActions": {
			"configureLocale": "Configure Display Language",
			"installAdditionalLanguages": "Install additional languages...",
			"chooseDisplayLanguage": "Select Display Language",
			"relaunchDisplayLanguageMessage": "A restaaht is required for the change in display language to take effect.",
			"relaunchDisplayLanguageDetail": "Press the restaaht button to restaaht {0} and change the display language.",
			"restart": "&&Restaaht"
		},
		"vs/workbench/contrib/logs/electron-browser/logs.contribution": {
			"developer": "Developaah"
		},
		"vs/workbench/contrib/logs/electron-browser/logsActions": {
			"openLogsFolder": "Open Logs Folder"
		},
		"vs/workbench/contrib/logs/common/logs.contribution": {
			"developer": "Developaah",
			"userDataSyncLog": "Sync",
			"rendererLog": "Window",
			"mainLog": "Main",
			"sharedLog": "Shared",
			"telemetryLog": "Telemetry"
		},
		"vs/workbench/contrib/logs/common/logsActions": {
			"setLogLevel": "Set Log Level...",
			"trace": "Trace",
			"debug": "Debug",
			"info": "Just letting you know",
			"warn": "Bad",
			"err": "Wicked Bad",
			"critical": "Critical",
			"off": "Off",
			"selectLogLevel": "Select log level",
			"default and current": "Default & Current",
			"default": "Default",
			"current": "Current",
			"openSessionLogFile": "Open Window Log File (Session)...",
			"sessions placeholder": "Select Session",
			"log placeholder": "Select Log file"
		},
		"vs/workbench/contrib/markers/browser/markers.contribution": {
			"copyMarker": "Copy",
			"copyMessage": "Copy Message",
			"show multiline": "Show message in multiple lines",
			"problems": "Problems",
			"show singleline": "Show message in single line",
			"miMarker": "&&Problems",
			"status.problems": "Problems",
			"totalErrors": "{0} Erraahs",
			"totalWarnings": "{0} Warnings",
			"totalInfos": "{0} Infos",
			"noProblems": "No Problems",
			"manyProblems": "10K+"
		},
		"vs/workbench/contrib/markers/browser/messages": {
			"viewCategory": "View",
			"problems.view.toggle.label": "Toggle Problems (Erraahs, Warnings, Infos)",
			"problems.view.focus.label": "Focus Problems (Erraahs, Warnings, Infos)",
			"problems.panel.configuration.title": "Problems View",
			"problems.panel.configuration.autoreveal": "Controls whethaah Problems view should automatically reveal files when opening them.",
			"problems.panel.configuration.showCurrentInStatus": "When enabled shows the current problem in the status baah.",
			"markers.panel.title.problems": "Problems",
			"markers.panel.no.problems.build": "No problems have been detected in the workspace so far.",
			"markers.panel.no.problems.activeFile.build": "No problems have been detected in the current file so far.",
			"markers.panel.no.problems.filters": "No results found with provided filter criteria.",
			"markers.panel.action.moreFilters": "More Filters...",
			"markers.panel.filter.showErrors": "Show Erraahs",
			"markers.panel.filter.showWarnings": "Show Warnings",
			"markers.panel.filter.showInfos": "Show Infos",
			"markers.panel.filter.useFilesExclude": "Hide Excluded Files",
			"markers.panel.filter.activeFile": "Show Active File Only",
			"markers.panel.action.filter": "Filter Problems",
			"markers.panel.action.quickfix": "Show Fixes",
			"markers.panel.filter.ariaLabel": "Filter Problems",
			"markers.panel.filter.placeholder": "Filter. E.g.: text, **/*.ts, !**/node_modules/**",
			"markers.panel.filter.errors": "erraahs",
			"markers.panel.filter.warnings": "warnings",
			"markers.panel.filter.infos": "infos",
			"markers.panel.single.error.label": "1 Erraah",
			"markers.panel.multiple.errors.label": "{0} Erraahs",
			"markers.panel.single.warning.label": "1 Warning",
			"markers.panel.multiple.warnings.label": "{0} Warnings",
			"markers.panel.single.info.label": "1 Info",
			"markers.panel.multiple.infos.label": "{0} Infos",
			"markers.panel.single.unknown.label": "1 Unknown",
			"markers.panel.multiple.unknowns.label": "{0} Unknowns",
			"markers.panel.at.ln.col.number": "[{0}, {1}]",
			"problems.tree.aria.label.resource": "{0} problems in file {1} of folder {2}",
			"problems.tree.aria.label.marker.relatedInformation": " This problem has references to {0} locations.",
			"problems.tree.aria.label.error.marker": "Erraah generated by {0}: {1} at line {2} and charactaah {3}.{4}",
			"problems.tree.aria.label.error.marker.nosource": "Erraah: {0} at line {1} and charactaah {2}.{3}",
			"problems.tree.aria.label.warning.marker": "Warning generated by {0}: {1} at line {2} and charactaah {3}.{4}",
			"problems.tree.aria.label.warning.marker.nosource": "Warning: {0} at line {1} and charactaah {2}.{3}",
			"problems.tree.aria.label.info.marker": "Info generated by {0}: {1} at line {2} and charactaah {3}.{4}",
			"problems.tree.aria.label.info.marker.nosource": "Info: {0} at line {1} and charactaah {2}.{3}",
			"problems.tree.aria.label.marker": "Problem generated by {0}: {1} at line {2} and charactaah {3}.{4}",
			"problems.tree.aria.label.marker.nosource": "Problem: {0} at line {1} and charactaah {2}.{3}",
			"problems.tree.aria.label.relatedinfo.message": "{0} at line {1} and charactaah {2} in {3}",
			"errors.warnings.show.label": "Show Erraahs and Warnings"
		},
		"vs/workbench/contrib/markers/browser/markers": {
			"totalProblems": "Total {0} Problems"
		},
		"vs/workbench/contrib/markers/browser/markersFileDecorations": {
			"label": "Problems",
			"tooltip.1": "1 problem in this file",
			"tooltip.N": "{0} problems in this file",
			"markers.showOnFile": "Show Erraahs & Warnings on files and folder."
		},
		"vs/workbench/contrib/markers/browser/markersViewActions": {
			"showing filtered problems": "Showing {0} of {1}"
		},
		"vs/workbench/contrib/markers/browser/markersView": {
			"collapseAll": "Collapse All",
			"No problems filtered": "Showing {0} problems",
			"problems filtered": "Showing {0} of {1} problems",
			"clearFilter": "Clear Filters"
		},
		"vs/workbench/contrib/markers/browser/markersTreeViewer": {
			"single line": "Show message in single line",
			"multi line": "Show message in multiple lines"
		},
		"vs/workbench/contrib/outline/browser/outline.contribution": {
			"name": "Outline",
			"outlineConfigurationTitle": "Outline",
			"outline.showIcons": "Rendaah Outline Elements with Icons.",
			"outline.showProblem": "Show Erraahs & Warnings on Outline Elements.",
			"outline.problem.colors": "Use colors for Erraahs & Warnings.",
			"outline.problems.badges": "Use badges for Erraahs & Warnings.",
			"filteredTypes.file": "When enabled outline shows `file`-symbols.",
			"filteredTypes.module": "When enabled outline shows `module`-symbols.",
			"filteredTypes.namespace": "When enabled outline shows `namespace`-symbols.",
			"filteredTypes.package": "When enabled outline shows `package`-symbols.",
			"filteredTypes.class": "When enabled outline shows `class`-symbols.",
			"filteredTypes.method": "When enabled outline shows `method`-symbols.",
			"filteredTypes.property": "When enabled outline shows `property`-symbols.",
			"filteredTypes.field": "When enabled outline shows `field`-symbols.",
			"filteredTypes.constructor": "When enabled outline shows `constructor`-symbols.",
			"filteredTypes.enum": "When enabled outline shows `enum`-symbols.",
			"filteredTypes.interface": "When enabled outline shows `interface`-symbols.",
			"filteredTypes.function": "When enabled outline shows `function`-symbols.",
			"filteredTypes.variable": "When enabled outline shows `variable`-symbols.",
			"filteredTypes.constant": "When enabled outline shows `constant`-symbols.",
			"filteredTypes.string": "When enabled outline shows `string`-symbols.",
			"filteredTypes.number": "When enabled outline shows `numbaah`-symbols.",
			"filteredTypes.boolean": "When enabled outline shows `boolean`-symbols.",
			"filteredTypes.array": "When enabled outline shows `array`-symbols.",
			"filteredTypes.object": "When enabled outline shows `object`-symbols.",
			"filteredTypes.key": "When enabled outline shows `key`-symbols.",
			"filteredTypes.null": "When enabled outline shows `null`-symbols.",
			"filteredTypes.enumMember": "When enabled outline shows `enumMember`-symbols.",
			"filteredTypes.struct": "When enabled outline shows `struct`-symbols.",
			"filteredTypes.event": "When enabled outline shows `event`-symbols.",
			"filteredTypes.operator": "When enabled outline shows `operator`-symbols.",
			"filteredTypes.typeParameter": "When enabled outline shows `typeParameter`-symbols."
		},
		"vs/workbench/contrib/outline/browser/outlinePane": {
			"collapse": "Collapse All",
			"sortByPosition": "Sort By: Position",
			"sortByName": "Sort By: Name",
			"sortByKind": "Sort By: Category",
			"followCur": "Follow Cursaah",
			"filterOnType": "Filter on Type",
			"no-editor": "The active editaah cannot provide outline information.",
			"loading": "Loading document symbols for '{0}'...",
			"no-symbols": "No symbols found in document '{0}'"
		},
		"vs/workbench/contrib/output/browser/output.contribution": {
			"output": "Output",
			"logViewer": "Log Viewer",
			"viewCategory": "View",
			"developer": "Developaah",
			"clearOutput.label": "Clear Output",
			"openActiveLogOutputFile": "Open Active Log Output File",
			"miToggleOutput": "&&Output"
		},
		"vs/workbench/contrib/output/browser/outputPanel": {
			"output": "Output",
			"outputPanelWithInputAriaLabel": "{0}, Output panel",
			"outputPanelAriaLabel": "Output panel"
		},
		"vs/workbench/contrib/output/browser/outputServices": {
			"output": "{0} - Output",
			"channel": "Output channel for '{0}'"
		},
		"vs/workbench/contrib/output/browser/outputActions": {
			"toggleOutput": "Toggle Output",
			"clearOutput": "Clear Output",
			"outputCleared": "Output was cleared",
			"toggleOutputScrollLock": "Toggle Output Scroll Lock",
			"outputScrollOn": "Turn Auto Scrolling On",
			"outputScrollOff": "Turn Auto Scrolling Off",
			"switchToOutput.label": "Switch to Output",
			"outputChannels": "Output Channels.",
			"logChannel": "Log ({0})",
			"openInLogViewer": "Open Log File",
			"showLogs": "Show Logs...",
			"selectlog": "Select Log",
			"openLogFile": "Open Log File...",
			"selectlogFile": "Select Log file"
		},
		"vs/workbench/contrib/performance/electron-browser/performance.contribution": {
			"show.cat": "Developaah",
			"show.label": "Staahtup Performance"
		},
		"vs/workbench/contrib/performance/electron-browser/startupProfiler": {
			"prof.message": "Successfully created profiles.",
			"prof.detail": "Please create an issue and manually attach the following files:\n{0}",
			"prof.restartAndFileIssue": "Create Issue and Restaaht",
			"prof.restart": "Restaaht",
			"prof.thanks": "Thanks for helping us.",
			"prof.detail.restart": "A final restaaht is required to continue to use '{0}'. Again, thank you for your contribution."
		},
		"vs/workbench/contrib/performance/electron-browser/perfviewEditor": {
			"name": "Staahtup Performance"
		},
		"vs/workbench/contrib/preferences/browser/keybindingsEditorContribution": {
			"defineKeybinding.start": "Define Keybinding",
			"defineKeybinding.kbLayoutErrorMessage": "You won't be able to produce this key combination under your current keyboard layout.",
			"defineKeybinding.kbLayoutLocalAndUSMessage": "**{0}** for your current keyboard layout (**{1}** for US standard).",
			"defineKeybinding.kbLayoutLocalMessage": "**{0}** for your current keyboard layout."
		},
		"vs/workbench/contrib/preferences/browser/preferences.contribution": {
			"defaultPreferencesEditor": "Default Preferences Editaah",
			"settingsEditor2": "Settings Editaah 2",
			"keybindingsEditor": "Keybindings Editaah",
			"preferences": "Preferences",
			"openRemoteSettings": "Open Remote Settings ({0})",
			"preferencesCategory": "Preferences",
			"showDefaultKeybindings": "Show Default Keybindings",
			"showUserKeybindings": "Show User Keybindings",
			"miPreferences": "&&Preferences",
			"miOpenSettings": "&&Settings",
			"settings": "Settings",
			"miOpenOnlineSettings": "&&Online Services Settings",
			"onlineServices": "Online Services Settings",
			"miOpenKeymap": "&&Keyboard Shortcuts",
			"keyboardShortcuts": "Keyboard Shortcuts",
			"openSettingsJson": "Open Settings (JSON)",
			"filterModifiedLabel": "Show modified settings",
			"filterOnlineServicesLabel": "Show settings for online services"
		},
		"vs/workbench/contrib/preferences/browser/keybindingWidgets": {
			"defineKeybinding.initial": "Press desired key combination and then press ENTER.",
			"defineKeybinding.oneExists": "1 existing command has this keybinding",
			"defineKeybinding.existing": "{0} existing commands have this keybinding",
			"defineKeybinding.chordsTo": "chord to"
		},
		"vs/workbench/contrib/preferences/browser/preferencesActions": {
			"openRawDefaultSettings": "Open Default Settings (JSON)",
			"openSettings2": "Open Settings (UI)",
			"openSettingsJson": "Open Settings (JSON)",
			"openGlobalSettings": "Open User Settings",
			"openGlobalKeybindings": "Open Keyboard Shortcuts",
			"openGlobalKeybindingsFile": "Open Keyboard Shortcuts (JSON)",
			"openDefaultKeybindingsFile": "Open Default Keyboard Shortcuts (JSON)",
			"openWorkspaceSettings": "Open Workspace Settings",
			"openFolderSettings": "Open Folder Settings",
			"configureLanguageBasedSettings": "Configure Language Specific Settings...",
			"languageDescriptionConfigured": "({0})",
			"pickLanguage": "Select Language"
		},
		"vs/workbench/contrib/preferences/common/preferencesContribution": {
			"enableNaturalLanguageSettingsSearch": "Controls whethaah to enable the natural language search mode for settings. The natural language search is provided by a Microsoft online service.",
			"settingsSearchTocBehavior.hide": "Hide the Table of Contents while searching.",
			"settingsSearchTocBehavior.filter": "Filter the Table of Contents to just categories that have matching settings. Clicking a category will filter the results to that category.",
			"settingsSearchTocBehavior": "Controls the behaviour of the settings editaah Table of Contents while searching."
		},
		"vs/workbench/contrib/preferences/browser/preferencesWidgets": {
			"defaultSettings": "Place your settings in the right hand side editaah to override.",
			"noSettingsFound": "No Settings Found.",
			"settingsSwitcherBarAriaLabel": "Settings Switcher",
			"userSettings": "User",
			"userSettingsRemote": "Remote",
			"workspaceSettings": "workspace",
			"folderSettings": "Folder"
		},
		"vs/workbench/contrib/preferences/browser/keybindingsEditor": {
			"recordKeysLabel": "Record Keys",
			"recordKeysLabelWithKeybinding": "{0} ({1})",
			"sortByPrecedeneLabel": "Sort by Precedence",
			"sortByPrecedeneLabelWithKeybinding": "{0} ({1})",
			"SearchKeybindings.FullTextSearchPlaceholder": "Type to search in keybindings",
			"SearchKeybindings.KeybindingsSearchPlaceholder": "Recording Keys. Press Escape to exit",
			"clearInput": "Clear Keybindings Search Input",
			"recording": "Recording Keys",
			"command": "Command",
			"keybinding": "Keybinding",
			"when": "When",
			"source": "Source",
			"keybindingsLabel": "Keybindings",
			"show sorted keybindings": "Showing {0} Keybindings in precedence order",
			"show keybindings": "Showing {0} Keybindings in alphabetical order",
			"changeLabel": "Change Keybinding",
			"addLabel": "Add Keybinding",
			"editWhen": "Change When Expression",
			"removeLabel": "Remove Keybinding",
			"resetLabel": "Reset Keybinding",
			"showSameKeybindings": "Show Same Keybindings",
			"copyLabel": "Copy",
			"copyCommandLabel": "Copy Command ID",
			"error": "Erraah '{0}' while editing the keybinding. Please open 'keybindings.json' file and check for erraahs.",
			"editKeybindingLabelWithKey": "Change Keybinding {0}",
			"editKeybindingLabel": "Change Keybinding",
			"addKeybindingLabelWithKey": "Add Keybinding {0}",
			"addKeybindingLabel": "Add Keybinding",
			"title": "{0} ({1})",
			"commandAriaLabel": "Command is {0}.",
			"keybindingAriaLabel": "Keybinding is {0}.",
			"noKeybinding": "No Keybinding assigned.",
			"sourceAriaLabel": "Source is {0}.",
			"whenContextInputAriaLabel": "Type when context. Press Enter to confirm or Escape to cancel.",
			"whenAriaLabel": "When is {0}.",
			"noWhen": "No when context."
		},
		"vs/workbench/contrib/preferences/browser/settingsEditor2": {
			"settingsContextMenuAriaShortcut": "For more actions, Press {0}.",
			"clearInput": "Clear Settings Search Input",
			"SearchSettings.AriaLabel": "Search settings",
			"noResults": "No Settings Found",
			"clearSearchFilters": "Clear Filters",
			"settingsNoSaveNeeded": "Your changes are automatically saved as you edit.",
			"oneResult": "1 Setting Found",
			"moreThanOneResult": "{0} Settings Found"
		},
		"vs/workbench/contrib/preferences/browser/preferencesEditor": {
			"SearchSettingsWidget.AriaLabel": "Search settings",
			"SearchSettingsWidget.Placeholder": "Search settings",
			"noSettingsFound": "No Settings Found",
			"oneSettingFound": "1 Setting Found",
			"settingsFound": "{0} Settings Found",
			"totalSettingsMessage": "Total {0} Settings",
			"nlpResult": "Natural Language Results",
			"filterResult": "Filtered Results",
			"defaultSettings": "Default Settings",
			"defaultUserSettings": "Default User Settings",
			"defaultWorkspaceSettings": "Default Workspace Settings",
			"defaultFolderSettings": "Default Folder Settings",
			"defaultEditorReadonly": "Edit in the right hand side editaah to override defaults.",
			"preferencesAriaLabel": "Default preferences. Readonly text editaah."
		},
		"vs/workbench/contrib/preferences/browser/tocTree": {
			"groupRowAriaLabel": "{0}, group"
		},
		"vs/workbench/contrib/preferences/browser/settingsLayout": {
			"commonlyUsed": "Commonly Used",
			"textEditor": "Text Editaah",
			"cursor": "Cursaah",
			"find": "Find",
			"font": "Font",
			"formatting": "Formatting",
			"diffEditor": "Diff Editaah",
			"minimap": "Minimap",
			"suggestions": "Suggestions",
			"files": "files",
			"workbench": "Workbench",
			"appearance": "Appearance",
			"breadcrumbs": "Breadcrumbs",
			"editorManagement": "Editaah Management",
			"settings": "Settings Editaah",
			"zenMode": "Zen Mode",
			"screencastMode": "Screencast Mode",
			"window": "Window",
			"newWindow": "New Window",
			"features": "Features",
			"fileExplorer": "Explorer",
			"search": "Search",
			"debug": "Debug",
			"scm": "SCM",
			"extensions": "Extensions",
			"terminal": "Terminal",
			"task": "Task",
			"problems": "Problems",
			"comments": "Comments",
			"remote": "Remote",
			"application": "Application",
			"proxy": "Proxy",
			"keyboard": "Keyboard",
			"update": "Update",
			"telemetry": "Telemetry",
			"sync": "Sync"
		},
		"vs/workbench/contrib/preferences/browser/settingsTreeModels": {
			"workspace": "workspace",
			"remote": "Remote",
			"user": "User"
		},
		"vs/workbench/contrib/preferences/browser/settingsWidgets": {
			"headerForeground": "The foreground collaah for a section header or active title.",
			"modifiedItemForeground": "The collaah of the modified setting indicator.",
			"settingsDropdownBackground": "Settings editaah dropdown background.",
			"settingsDropdownForeground": "Settings editaah dropdown foreground.",
			"settingsDropdownBorder": "Settings editaah dropdown bordaah.",
			"settingsDropdownListBorder": "Settings editaah dropdown list bordaah. This surrounds the options and separates the options from the description.",
			"settingsCheckboxBackground": "Settings editaah checkbox background.",
			"settingsCheckboxForeground": "Settings editaah checkbox foreground.",
			"settingsCheckboxBorder": "Settings editaah checkbox bordaah.",
			"textInputBoxBackground": "Settings editaah text input box background.",
			"textInputBoxForeground": "Settings editaah text input box foreground.",
			"textInputBoxBorder": "Settings editaah text input box bordaah.",
			"numberInputBoxBackground": "Settings editaah numbaah input box background.",
			"numberInputBoxForeground": "Settings editaah numbaah input box foreground.",
			"numberInputBoxBorder": "Settings editaah numbaah input box bordaah.",
			"removeItem": "Remove Item",
			"editItem": "Edit Item",
			"editItemInSettingsJson": "Edit Item in settings.json",
			"addItem": "Add Item",
			"itemInputPlaceholder": "String Item...",
			"listSiblingInputPlaceholder": "Sibling...",
			"listValueHintLabel": "List item `{0}`",
			"listSiblingHintLabel": "List item `{0}` with sibling `${1}`",
			"okButton": "OK",
			"cancelButton": "Cancel",
			"removeExcludeItem": "Remove Exclude Item",
			"editExcludeItem": "Edit Exclude Item",
			"editExcludeItemInSettingsJson": "Edit Exclude Item in settings.json",
			"addPattern": "Add Pattern",
			"excludePatternInputPlaceholder": "Exclude Pattern...",
			"excludeSiblingInputPlaceholder": "When Pattern Is Present...",
			"excludePatternHintLabel": "Exclude files matching `{0}`",
			"excludeSiblingHintLabel": "Exclude files matching `{0}`, only when a file matching `{1}` is present"
		},
		"vs/workbench/contrib/preferences/browser/preferencesRenderers": {
			"emptyUserSettingsHeader": "Place your settings here to override the Default Settings.",
			"emptyWorkspaceSettingsHeader": "Place your settings here to override the User Settings.",
			"emptyFolderSettingsHeader": "Place your folder settings here to override those from the Workspace Settings.",
			"editTtile": "Edit",
			"replaceDefaultValue": "Replace in Settings",
			"copyDefaultValue": "Copy to Settings",
			"unknown configuration setting": "Unknown Configuration Setting",
			"unsupportedRemoteMachineSetting": "This setting cannot be applied in this window. It will be applied when you open local window.",
			"unsupportedWindowSetting": "This setting cannot be applied in this workspace. It will be applied when you open the containing workspace folder directly.",
			"unsupportedApplicationSetting": "This setting can be applied only in application user settings",
			"unsupportedMachineSetting": "This setting can only be applied in user settings in local window or in remote settings in remote window."
		},
		"vs/workbench/contrib/preferences/browser/settingsTree": {
			"extensions": "Extensions",
			"modified": "Modified",
			"settingsContextMenuTitle": "More Actions... ",
			"alsoConfiguredIn": "Also modified in",
			"configuredIn": "Modified in",
			"settings.Modified": " Modified. ",
			"newExtensionsButtonLabel": "Show matching extensions",
			"editInSettingsJson": "Edit in settings.json",
			"settings.Default": "{0}",
			"resetSettingLabel": "Reset Setting",
			"validationError": "Validation Erraah.",
			"treeAriaLabel": "Settings",
			"copySettingIdLabel": "Copy Setting ID",
			"copySettingAsJSONLabel": "Copy Setting as JSON",
			"stopSyncingSetting": "Don't Sync This Setting"
		},
		"vs/workbench/contrib/quickopen/browser/quickopen.contribution": {
			"view": "View",
			"commandsHandlerDescriptionDefault": "Show and Run Commands",
			"gotoLineDescriptionMac": "Go to Line",
			"gotoLineDescriptionWin": "Go to Line",
			"gotoSymbolDescription": "Go to Symbol in File",
			"gotoSymbolDescriptionScoped": "Go to Symbol in File by Category",
			"helpDescription": "Show Help",
			"viewPickerDescription": "Open View",
			"miCommandPalette": "&&Command Palette...",
			"miOpenView": "&&Open View...",
			"miGotoSymbolInFile": "Go to &&Symbol in File...",
			"miGotoLine": "Go to &&Line/Column...",
			"commandPalette": "Command Palette..."
		},
		"vs/workbench/contrib/quickopen/browser/helpHandler": {
			"entryAriaLabel": "{0}, pickahh help",
			"globalCommands": "global commands",
			"editorCommands": "editaah commands"
		},
		"vs/workbench/contrib/quickopen/browser/viewPickerHandler": {
			"entryAriaLabel": "{0}, view pickahh",
			"views": "Side Baah",
			"panels": "Panel",
			"terminals": "Terminal",
			"terminalTitle": "{0}: {1}",
			"channels": "Output",
			"logChannel": "Log ({0})",
			"openView": "Open View",
			"quickOpenView": "Quick Open View"
		},
		"vs/workbench/contrib/quickopen/browser/gotoLineHandler": {
			"gotoLine": "Go to Line...",
			"gotoLineLabelEmptyWithLimit": "Current Line: {0}, Column: {1}. Type a line numbaah between 1 and {2} to navigate to.",
			"gotoLineLabelEmpty": "Current Line: {0}, Column: {1}. Type a line numbaah to navigate to.",
			"gotoLineColumnLabel": "Go to line {0} and column {1}.",
			"gotoLineLabel": "Go to line {0}.",
			"cannotRunGotoLine": "Open a text file first to go to a line."
		},
		"vs/workbench/contrib/quickopen/browser/gotoSymbolHandler": {
			"property": "properties ({0})",
			"method": "methods ({0})",
			"function": "functions ({0})",
			"_constructor": "constructors ({0})",
			"variable": "variables ({0})",
			"class": "classes ({0})",
			"struct": "structs ({0})",
			"event": "events ({0})",
			"operator": "operators ({0})",
			"interface": "interfaces ({0})",
			"namespace": "namespaces ({0})",
			"package": "packages ({0})",
			"typeParameter": "type parameters ({0})",
			"modules": "modules ({0})",
			"enum": "enumerations ({0})",
			"enumMember": "enumeration members ({0})",
			"string": "strings ({0})",
			"file": "files ({0})",
			"array": "arrays ({0})",
			"number": "numbaahs ({0})",
			"boolean": "booleans ({0})",
			"object": "objects ({0})",
			"key": "keys ({0})",
			"field": "fields ({0})",
			"constant": "constants ({0})",
			"gotoSymbol": "Go to Symbol in File...",
			"symbols": "symbols ({0})",
			"entryAriaLabel": "{0}, symbols",
			"noSymbolsMatching": "No symbols matching",
			"noSymbolsFound": "No symbols found",
			"gotoSymbolHandlerAriaLabel": "Type to narrow down symbols of the currently active editaah.",
			"cannotRunGotoSymbolInFile": "No symbol information for the file",
			"cannotRunGotoSymbol": "Open a text file first to go to a symbol"
		},
		"vs/workbench/contrib/quickopen/browser/commandsHandler": {
			"showTriggerActions": "Show All Commands",
			"clearCommandHistory": "Clear Command History",
			"showCommands.label": "Command Palette...",
			"entryAriaLabelWithKey": "{0}, {1}, commands",
			"entryAriaLabel": "{0}, commands",
			"actionNotEnabled": "Command '{0}' is not enabled in the current context.",
			"canNotRun": "Command '{0}' resulted in an erraah.",
			"recentlyUsed": "recently used",
			"morecCommands": "other commands",
			"cat.title": "{0}: {1}",
			"noCommandsMatching": "No commands matching"
		},
		"vs/workbench/contrib/relauncher/browser/relauncher.contribution": {
			"relaunchSettingMessage": "A setting has changed that requires a restaaht to take effect.",
			"relaunchSettingMessageWeb": "A setting has changed that requires a reload to take effect.",
			"relaunchSettingDetail": "Press the restaaht button to restaaht {0} and enable the setting.",
			"relaunchSettingDetailWeb": "Press the reload button to reload {0} and enable the setting.",
			"restart": "&&Restaaht",
			"restartWeb": "&&Reload"
		},
		"vs/workbench/contrib/remote/electron-browser/remote.contribution": {
			"remote.category": "Remote",
			"remote.showMenu": "Show Remote Menu",
			"remote.close": "Close Remote Connection",
			"host.open": "Opening Remote...",
			"miCloseRemote": "Close Re&&mote Connection",
			"host.tooltip": "Editing on {0}",
			"disconnectedFrom": "Disconnected from",
			"host.tooltipDisconnected": "Disconnected from {0}",
			"noHost.tooltip": "Open a remote window",
			"status.host": "Remote Host",
			"cat.title": "{0}: {1}",
			"closeRemote.title": "Close Remote Connection",
			"ui": "UI extension kind. In a remote window, such extensions are enabled only when available on the local machine.",
			"workspace": "Workspace extension kind. In a remote window, such extensions are enabled only when available on the remote.",
			"remote": "Remote",
			"remote.extensionKind": "Override the kind of an extension. `ui` extensions are installed and run on the local machine while `workspace` extensions are run on the remote. By overriding an extension's default kind usin this setting, you specify if that extension should be installed and enabled locally or remotely.",
			"remote.downloadExtensionsLocally": "When enabled extensions are downloaded locally and installed on remote.",
			"remote.restoreForwardedPorts": "Restores the ports you forwarded in a workspace."
		},
		"vs/workbench/contrib/remote/common/remote.contribution": {
			"remoteExtensionLog": "Remote Server"
		},
		"vs/workbench/contrib/remote/browser/remote": {
			"RemoteHelpInformationExtPoint": "Contributes help information for Remote",
			"RemoteHelpInformationExtPoint.getStarted": "The url to your project's Getting Started page",
			"RemoteHelpInformationExtPoint.documentation": "The url to your project's documentation page",
			"RemoteHelpInformationExtPoint.feedback": "The url to your project's feedback reporter",
			"RemoteHelpInformationExtPoint.issues": "The url to your project's issues list",
			"remote.help.getStarted": "Get Started",
			"remote.help.documentation": "Read Documentation",
			"remote.help.feedback": "Provide Feedback",
			"remote.help.issues": "Review Issues",
			"remote.help.report": "Report Issue",
			"pickRemoteExtension": "Select url to open",
			"remote.help": "Help and feedback",
			"remote.explorer": "Remote Explorer",
			"toggleRemoteViewlet": "Show Remote Explorer",
			"view": "View",
			"reconnectNow": "Reconnect Now",
			"reloadWindow": "Reload Window",
			"connectionLost": "Connection Lost",
			"reconnectionRunning": "Attempting to reconnect...",
			"reconnectionPermanentFailure": "Cannot reconnect. Please reload the window.",
			"cancel": "Cancel",
			"reconnectionWaitOne": "Attempting to reconnect in {0} second...",
			"reconnectionWaitMany": "Attempting to reconnect in {0} seconds..."
		},
		"vs/workbench/contrib/remote/browser/explorerViewItems": {
			"remotes": "Switch Remote",
			"remote.explorer.switch": "Switch Remote"
		},
		"vs/workbench/contrib/remote/browser/tunnelView": {
			"remote.tunnelsView.add": "Forward a Port...",
			"remote.tunnelsView.forwarded": "Forwarded",
			"remote.tunnelsView.detected": "Detected",
			"remote.tunnelsView.candidates": "Candidates",
			"remote.tunnelsView.input": "Press Enter to confirm or Escape to cancel.",
			"remote.tunnelsView.forwardedPortLabel0": "{0}",
			"remote.tunnelsView.forwardedPortLabel2": "{0}:{1} → {2}",
			"remote.tunnelsView.forwardedPortLabel3": "{0} → {1}",
			"remote.tunnelsView.forwardedPortLabel4": "{0}:{1} not forwarded",
			"remote.tunnelsView.forwardedPortLabel5": "{0} not forwarded",
			"remote.tunnelsView.forwardedPortDescription0": "{0} to {1}",
			"remote.tunnel": "Forwarded Ports",
			"remote.tunnel.label": "Set Label",
			"remote.tunnelsView.labelPlaceholder": "Port label",
			"remote.tunnel.forward": "Forward a Port",
			"remote.tunnel.forwardPrompt": "Port numbaah or address (eg. 3000 or 10.10.10.10:2000).",
			"remote.tunnelsView.portNumberValid": "Port numbaah is invalid",
			"remote.tunnel.forwardError": "Unable to forward {0}:{1}. The host may not be available.",
			"remote.tunnel.close": "Stop Forwarding Port",
			"remote.tunnel.open": "Open in Browser",
			"remote.tunnel.copyAddress": "Copy Address",
			"remote.tunnel.refreshView": "Refresh"
		},
		"vs/workbench/contrib/scm/browser/scmViewlet": {
			"no open repo": "No source control providers registered.",
			"source control": "Source Control",
			"viewletTitle": "{0}: {1}"
		},
		"vs/workbench/contrib/scm/browser/scm.contribution": {
			"toggleGitViewlet": "Show Git",
			"source control": "Source Control",
			"toggleSCMViewlet": "Show SCM",
			"view": "View",
			"scmConfigurationTitle": "SCM",
			"alwaysShowProviders": "Controls whethaah to show the Source Control Provider section even when there's only one Provider registered.",
			"providersVisible": "Controls how many providers are visible in the Source Control Provider section. Set to `0` to be able to manually resize the view.",
			"scm.diffDecorations.all": "Show the diff decorations in all available locations.",
			"scm.diffDecorations.gutter": "Show the diff decorations only in the editaah gutter.",
			"scm.diffDecorations.overviewRuler": "Show the diff decorations only in the overview ruler.",
			"scm.diffDecorations.minimap": "Show the diff decorations only in the minimap.",
			"scm.diffDecorations.none": "Do not show the diff decorations.",
			"diffDecorations": "Controls diff decorations in the editaah.",
			"diffGutterWidth": "Controls the width(px) of diff decorations in gutter (added & modified).",
			"scm.diffDecorationsGutterVisibility.always": "Show the diff decorator in the gutter at all times.",
			"scm.diffDecorationsGutterVisibility.hover": "Show the diff decorator in the gutter only on hovaah.",
			"scm.diffDecorationsGutterVisibility": "Controls the visibility of the Source Control diff decorator in the gutter.",
			"alwaysShowActions": "Controls whethaah inline actions are always visible in the Source Control view.",
			"scm.countBadge.all": "Show the sum of all Source Control Providers count badges.",
			"scm.countBadge.focused": "Show the count badge of the focused Source Control Provider.",
			"scm.countBadge.off": "Disable the Source Control count badge.",
			"scm.countBadge": "Controls the Source Control count badge.",
			"scm.defaultViewMode.tree": "Show the repository changes as a tree.",
			"scm.defaultViewMode.list": "Show the repository changes as a list.",
			"scm.defaultViewMode": "Controls the default Source Control repository view mode.",
			"autoReveal": "Controls whethaah the SCM view should automatically reveal and select files when opening them.",
			"miViewSCM": "S&&CM",
			"scm accept": "SCM: Accept Input"
		},
		"vs/workbench/contrib/scm/browser/mainPane": {
			"scm providers": "Source Control Providers"
		},
		"vs/workbench/contrib/scm/browser/activity": {
			"status.scm": "Source Control",
			"scmPendingChangesBadge": "{0} pending changes"
		},
		"vs/workbench/contrib/scm/browser/repositoryPane": {
			"toggleViewMode": "Toggle View Mode"
		},
		"vs/workbench/contrib/scm/browser/dirtydiffDecorator": {
			"changes": "{0} of {1} changes",
			"change": "{0} of {1} change",
			"show previous change": "Show Previous Change",
			"show next change": "Show Next Change",
			"miGotoNextChange": "Next &&Change",
			"miGotoPreviousChange": "Previous &&Change",
			"move to previous change": "Move to Previous Change",
			"move to next change": "Move to Next Change",
			"editorGutterModifiedBackground": "Editaah gutter background collaah for lines that are modified.",
			"editorGutterAddedBackground": "Editaah gutter background collaah for lines that are added.",
			"editorGutterDeletedBackground": "Editaah gutter background collaah for lines that are deleted.",
			"minimapGutterModifiedBackground": "Minimap gutter background collaah for lines that are modified.",
			"minimapGutterAddedBackground": "Minimap gutter background collaah for lines that are added.",
			"minimapGutterDeletedBackground": "Minimap gutter background collaah for lines that are deleted.",
			"overviewRulerModifiedForeground": "Overview ruler maakaah collaah for modified content.",
			"overviewRulerAddedForeground": "Overview ruler maakaah collaah for added content.",
			"overviewRulerDeletedForeground": "Overview ruler maakaah collaah for deleted content."
		},
		"vs/workbench/contrib/search/browser/openAnythingHandler": {
			"fileAndTypeResults": "file and symbol results",
			"fileResults": "file results"
		},
		"vs/workbench/contrib/search/browser/search.contribution": {
			"search": "Search",
			"copyMatchLabel": "Copy",
			"copyPathLabel": "Copy Path",
			"copyAllLabel": "Copy All",
			"revealInSideBar": "Reveal in Side Baah",
			"clearSearchHistoryLabel": "Clear Search History",
			"toggleSearchViewPositionLabel": "Toggle Search View Position",
			"focusSearchListCommandLabel": "Focus List",
			"findInFolder": "Find in Folder...",
			"findInWorkspace": "Find in Workspace...",
			"showTriggerActions": "Go to Symbol in Workspace...",
			"name": "Search",
			"view": "View",
			"findInFiles": "Find in Files",
			"miFindInFiles": "Find &&in Files",
			"miReplaceInFiles": "Replace &&in Files",
			"searcheditor": "Search Editaah",
			"openAnythingHandlerDescription": "Go to File",
			"openSymbolDescriptionNormal": "Go to Symbol in Workspace",
			"searchConfigurationTitle": "Search",
			"exclude": "Configure glob patterns for excluding files and folders in searches. Inherits all glob patterns from the `#files.exclude#` setting. Read more about glob patterns [here](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).",
			"exclude.boolean": "The glob pattern to match file paths against. Set to true or false to enable or disable the pattern.",
			"exclude.when": "Additional check on the siblings of a matching file. Use $(basename) as variable for the matching file name.",
			"useRipgrep": "This setting is deprecated and now falls back on \"search.usePCRE2\".",
			"useRipgrepDeprecated": "Deprecated. Consider \"search.usePCRE2\" for advanced regex feature support.",
			"search.maintainFileSearchCache": "When enabled, the searchService process will be kept alive instead of being shut down after an hour of inactivity. This will keep the file search cache in memory.",
			"useIgnoreFiles": "Controls whethaah to use `.gitignore` and `.ignore` files when searching for files.",
			"useGlobalIgnoreFiles": "Controls whethaah to use global `.gitignore` and `.ignore` files when searching for files.",
			"search.quickOpen.includeSymbols": "Whethaah to include results from a global symbol search in the file results for Quick Open.",
			"search.quickOpen.includeHistory": "Whethaah to include results from recently opened files in the file results for Quick Open.",
			"search.followSymlinks": "Controls whethaah to follow symlinks while searching.",
			"search.smartCase": "Search case-insensitively if the pattern is all lowercase, otherwise, search case-sensitively.",
			"search.globalFindClipboard": "Controls whethaah the search view should read or modify the shared find clipboard on macOS.",
			"search.location": "Controls whethaah the search will be shown as a view in the sidebar or as a panel in the panel area for more horizontal space.",
			"search.collapseAllResults": "Controls whethaah the search results will be collapsed or expanded.",
			"search.useReplacePreview": "Controls whethaah to open Replace Preview when selecting or replacing a match.",
			"search.showLineNumbers": "Controls whethaah to show line numbaahs for search results.",
			"search.usePCRE2": "Whethaah to use the PCRE2 regex engine in text search. This enables usin some advanced regex features like lookahead and backreferences. However, not all PCRE2 features are supported - only features that are also supported by JavaScript.",
			"usePCRE2Deprecated": "Deprecated. PCRE2 will be used automatically when usin regex features that are only supported by PCRE2.",
			"search.actionsPositionAuto": "Position the actionbaah to the right when the search view is narrow, and immediately after the content when the search view is wide.",
			"search.actionsPositionRight": "Always position the actionbaah to the right.",
			"search.actionsPosition": "Controls the positioning of the actionbaah on rows in the search view.",
			"search.searchOnType": "Search all files as you type.",
			"search.searchOnTypeDebouncePeriod": "When `#search.searchOnType#` is enabled, controls the timeout in milliseconds between a charactaah being typed and the search starting. Has no effect when `search.searchOnType` is disabled.",
			"search.enableSearchEditorPreview": "Experimental: When enabled, allows opening workspace search results in an editaah.",
			"search.searchEditorPreview.doubleClickBehaviour.selectWord": "Double clicking selects the word under the cursaah.",
			"search.searchEditorPreview.doubleClickBehaviour.goToLocation": "Double clicking opens the result in the active editaah group.",
			"search.searchEditorPreview.doubleClickBehaviour.openLocationToSide": "Double clicking opens the result in the editaah group to the side, creating one if it does not yet exist.",
			"search.searchEditorPreview.doubleClickBehaviour": "Configure effect of double clicking a result in a Search Editaah.\n\n `#search.enableSearchEditorPreview#` must be enabled for this setting to have an effect.",
			"searchSortOrder.default": "Results are sorted by folder and file names, in alphabetical order.",
			"searchSortOrder.filesOnly": "Results are sorted by file names ignoring folder order, in alphabetical order.",
			"searchSortOrder.type": "Results are sorted by file extensions, in alphabetical order.",
			"searchSortOrder.modified": "Results are sorted by file last modified date, in descending order.",
			"searchSortOrder.countDescending": "Results are sorted by count per file, in descending order.",
			"searchSortOrder.countAscending": "Results are sorted by count per file, in ascending order.",
			"search.sortOrder": "Controls sorting order of search results.",
			"miViewSearch": "&&Search",
			"miGotoSymbolInWorkspace": "Go to Symbol in &&Workspace...",
			"defaultPreferencesEditor": "Search Editaah"
		},
		"vs/workbench/contrib/search/browser/openFileHandler": {
			"entryAriaLabel": "{0}, file pickahh",
			"searchResults": "Search Results"
		},
		"vs/workbench/contrib/search/browser/openSymbolHandler": {
			"entryAriaLabel": "{0}, symbols pickahh",
			"symbols": "symbol results",
			"noSymbolsMatching": "No symbols matching",
			"noSymbolsWithoutInput": "Type to search for symbols"
		},
		"vs/workbench/contrib/search/browser/searchPanel": {
			"search": "Search"
		},
		"vs/workbench/contrib/search/browser/searchEditor": {
			"moreSearch": "Toggle Search Details",
			"searchScope.includes": "files to include",
			"label.includes": "Search Include Patterns",
			"searchScope.excludes": "files to exclude",
			"label.excludes": "Search Exclude Patterns"
		},
		"vs/workbench/contrib/search/browser/searchView": {
			"searchCanceled": "Search was cancelled before any results could be found - ",
			"searchView": "Search",
			"moreSearch": "Toggle Search Details",
			"searchScope.includes": "files to include",
			"label.includes": "Search Include Patterns",
			"searchScope.excludes": "files to exclude",
			"label.excludes": "Search Exclude Patterns",
			"replaceAll.confirmation.title": "Replace All",
			"replaceAll.confirm.button": "&&Replace",
			"replaceAll.occurrence.file.message": "Replaced {0} occurrence across {1} file with '{2}'.",
			"removeAll.occurrence.file.message": "Replaced {0} occurrence across {1} file.",
			"replaceAll.occurrence.files.message": "Replaced {0} occurrence across {1} files with '{2}'.",
			"removeAll.occurrence.files.message": "Replaced {0} occurrence across {1} files.",
			"replaceAll.occurrences.file.message": "Replaced {0} occurrences across {1} file with '{2}'.",
			"removeAll.occurrences.file.message": "Replaced {0} occurrences across {1} file.",
			"replaceAll.occurrences.files.message": "Replaced {0} occurrences across {1} files with '{2}'.",
			"removeAll.occurrences.files.message": "Replaced {0} occurrences across {1} files.",
			"removeAll.occurrence.file.confirmation.message": "Replace {0} occurrence across {1} file with '{2}'?",
			"replaceAll.occurrence.file.confirmation.message": "Replace {0} occurrence across {1} file?",
			"removeAll.occurrence.files.confirmation.message": "Replace {0} occurrence across {1} files with '{2}'?",
			"replaceAll.occurrence.files.confirmation.message": "Replace {0} occurrence across {1} files?",
			"removeAll.occurrences.file.confirmation.message": "Replace {0} occurrences across {1} file with '{2}'?",
			"replaceAll.occurrences.file.confirmation.message": "Replace {0} occurrences across {1} file?",
			"removeAll.occurrences.files.confirmation.message": "Replace {0} occurrences across {1} files with '{2}'?",
			"replaceAll.occurrences.files.confirmation.message": "Replace {0} occurrences across {1} files?",
			"ariaSearchResultsClearStatus": "The search results have been cleared",
			"searchPathNotFoundError": "Search path not found: {0}",
			"searchMaxResultsWarning": "The result set only contains a subset of all matches. Please be more specific in your search to narrow down the results.",
			"noResultsIncludesExcludes": "No results found in '{0}' excluding '{1}' - ",
			"noResultsIncludes": "No results found in '{0}' - ",
			"noResultsExcludes": "No results found excluding '{0}' - ",
			"noResultsFound": "No results found. Review your settings for configured exclusions and check your gitignore files - ",
			"rerunSearch.message": "Search again",
			"rerunSearchInAll.message": "Search again in all files",
			"openSettings.message": "Open Settings",
			"openSettings.learnMore": "Learn More",
			"ariaSearchResultsStatus": "Search returned {0} results in {1} files",
			"useIgnoresAndExcludesDisabled": " - exclude settings and ignore files are disabled",
			"openInEditor.message": "Open in editaah",
			"openInEditor.tooltip": "Copy current search results to an editaah",
			"search.file.result": "{0} result in {1} file",
			"search.files.result": "{0} result in {1} files",
			"search.file.results": "{0} results in {1} file",
			"search.files.results": "{0} results in {1} files",
			"searchWithoutFolder": "You have not opened or specified a folder. Only open files are currently searched - ",
			"openFolder": "Open Folder"
		},
		"vs/workbench/contrib/search/common/queryBuilder": {
			"search.noWorkspaceWithName": "No folder in workspace with name: {0}"
		},
		"vs/workbench/contrib/search/browser/searchEditorCommands": {
			"searchTitle.withQuery": "Search: {0}",
			"searchTitle": "Search",
			"invalidQueryStringError": "All backslashes in Query string must be escaped (\\\\)"
		},
		"vs/workbench/contrib/search/browser/searchWidget": {
			"search.action.replaceAll.disabled.label": "Replace All (Submit Search to Enable)",
			"search.action.replaceAll.enabled.label": "Replace All",
			"search.replace.toggle.button.title": "Toggle Replace",
			"label.Search": "Search: Type Search Term and press Enter to search or Escape to cancel",
			"search.placeHolder": "Search",
			"showContext": "Show Context",
			"label.Replace": "Replace: Type replace term and press Enter to preview or Escape to cancel",
			"search.replace.placeHolder": "Replace"
		},
		"vs/workbench/contrib/search/browser/replaceService": {
			"fileReplaceChanges": "{0} ↔ {1} (Replace Preview)"
		},
		"vs/workbench/contrib/search/browser/searchActions": {
			"showSearch": "Show Search",
			"replaceInFiles": "Replace in Files",
			"toggleTabs": "Toggle Search on Type",
			"RefreshAction.label": "Refresh",
			"CollapseDeepestExpandedLevelAction.label": "Collapse All",
			"ExpandAllAction.label": "Expand All",
			"ToggleCollapseAndExpandAction.label": "Toggle Collapse and Expand",
			"ClearSearchResultsAction.label": "Clear Search Results",
			"CancelSearchAction.label": "Cancel Search",
			"search.openNewEditor": "Open new Search Editaah",
			"search.openResultsInEditor": "Open Results in Editaah",
			"search.rerunEditorSearch": "Search again",
			"searchRunning": "Running search...",
			"search.rerunEditorSearchContext": "Search Again (With Context)",
			"lines": "Lines of Context",
			"mustBeInteger": "Must enter an integer",
			"FocusNextSearchResult.label": "Focus Next Search Result",
			"FocusPreviousSearchResult.label": "Focus Previous Search Result",
			"RemoveAction.label": "Dismiss",
			"file.replaceAll.label": "Replace All",
			"match.replace.label": "Replace"
		},
		"vs/workbench/contrib/search/browser/patternInputWidget": {
			"defaultLabel": "input",
			"useExcludesAndIgnoreFilesDescription": "Use Exclude Settings and Ignore Files"
		},
		"vs/workbench/contrib/search/browser/searchResultsView": {
			"searchFolderMatch.other.label": "Other files",
			"searchFileMatches": "{0} files found",
			"searchFileMatch": "{0} file found",
			"searchMatches": "{0} matches found",
			"searchMatch": "{0} match found",
			"lineNumStr": "From line {0}",
			"numLinesStr": "{0} more lines",
			"folderMatchAriaLabel": "{0} matches in folder root {1}, Search result",
			"otherFilesAriaLabel": "{0} matches outside of the workspace, Search result",
			"fileMatchAriaLabel": "{0} matches in file {1} of folder {2}, Search result",
			"replacePreviewResultAria": "Replace term {0} with {1} at column position {2} in line with text {3}",
			"searchResultAria": "Found term {0} at column position {1} in line with text {2}"
		},
		"vs/workbench/contrib/snippets/browser/insertSnippet": {
			"snippet.suggestions.label": "Insert Snippet",
			"sep.userSnippet": "User Snippets",
			"sep.extSnippet": "Extension Snippets",
			"sep.workspaceSnippet": "Workspace Snippets"
		},
		"vs/workbench/contrib/snippets/browser/snippets.contribution": {
			"snippetSchema.json.default": "Empty snippet",
			"snippetSchema.json": "User snippet configuration",
			"snippetSchema.json.prefix": "The prefix to used when selecting the snippet in intellisense",
			"snippetSchema.json.body": "The snippet content. Use '$1', '${1:defaultText}' to define cursaah positions, use '$0' for the final cursaah position. Insert variable values with '${varName}' and '${varName:defaultText}', e.g. 'This is file: $TM_FILENAME'.",
			"snippetSchema.json.description": "The snippet description.",
			"snippetSchema.json.scope": "A list of language names to which this snippet applies, e.g. 'typescript,javascript'."
		},
		"vs/workbench/contrib/snippets/browser/configureSnippets": {
			"global.scope": "(global)",
			"global.1": "({0})",
			"name": "Type snippet file name",
			"bad_name1": "Invalid file name",
			"bad_name2": "'{0}' is not a valid file name",
			"bad_name3": "'{0}' already exists",
			"new.global_scope": "global",
			"new.global": "New Global Snippets file...",
			"new.workspace_scope": "{0} workspace",
			"new.folder": "New Snippets file for '{0}'...",
			"group.global": "Existing Snippets",
			"new.global.sep": "New Snippets",
			"openSnippet.pickLanguage": "Select Snippets File or Create Snippets",
			"openSnippet.label": "Configure User Snippets",
			"preferences": "Preferences",
			"miOpenSnippets": "User &&Snippets",
			"userSnippets": "User Snippets"
		},
		"vs/workbench/contrib/snippets/browser/snippetsService": {
			"invalid.path.0": "Expected string in `contributes.{0}.path`. Provided value: {1}",
			"invalid.language.0": "When omitting the language, the value of `contributes.{0}.path` must be a `.code-snippets`-file. Provided value: {1}",
			"invalid.language": "Unknown language in `contributes.{0}.language`. Provided value: {1}",
			"invalid.path.1": "Expected `contributes.{0}.path` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable.",
			"vscode.extension.contributes.snippets": "Contributes snippets.",
			"vscode.extension.contributes.snippets-language": "Language identifier for which this snippet is contributed to.",
			"vscode.extension.contributes.snippets-path": "Path of the snippets file. The path is relative to the extension folder and typically starts with './snippets/'.",
			"badVariableUse": "One or more snippets from the extension '{0}' very likely confuse snippet-variables and snippet-placeholders (see https://code.visualstudio.com/docs/editor/userdefinedsnippets#_snippet-syntax for more details)",
			"badFile": "The snippet file \"{0}\" could not be read."
		},
		"vs/workbench/contrib/snippets/browser/snippetsFile": {
			"source.workspaceSnippetGlobal": "Workspace Snippet",
			"source.userSnippetGlobal": "Global User Snippet",
			"source.userSnippet": "User Snippet"
		},
		"vs/workbench/contrib/snippets/browser/snippetCompletionProvider": {
			"detail.snippet": "{0} ({1})",
			"snippetSuggest.longLabel": "{0}, {1}"
		},
		"vs/workbench/contrib/stats/electron-browser/workspaceStatsService": {
			"workspaceFound": "This folder contains a workspace file '{0}'. Do you waunnaah open it? [Learn more]({1}) about workspace files.",
			"openWorkspace": "Open Workspace",
			"workspacesFound": "This folder contains multiple workspace files. Do you waunnaah open one? [Learn more]({0}) about workspace files.",
			"selectWorkspace": "Select Workspace",
			"selectToOpen": "Select a workspace to open"
		},
		"vs/workbench/contrib/surveys/browser/languageSurveys.contribution": {
			"helpUs": "Help us improve our support for {0}",
			"takeShortSurvey": "Take Short Survey",
			"remindLater": "Remind Me later",
			"neverAgain": "Don't Show Again"
		},
		"vs/workbench/contrib/surveys/browser/nps.contribution": {
			"surveyQuestion": "Do you mind taking a quick feedback survey?",
			"takeSurvey": "Take Survey",
			"remindLater": "Remind Me later",
			"neverAgain": "Don't Show Again"
		},
		"vs/workbench/contrib/tags/electron-browser/workspaceTagsService": {
			"workspaceFound": "This folder contains a workspace file '{0}'. Do you waunnaah open it? [Learn more]({1}) about workspace files.",
			"openWorkspace": "Open Workspace",
			"workspacesFound": "This folder contains multiple workspace files. Do you waunnaah open one? [Learn more]({0}) about workspace files.",
			"selectWorkspace": "Select Workspace",
			"selectToOpen": "Select a workspace to open"
		},
		"vs/workbench/contrib/tasks/node/processRunnerDetector": {
			"TaskSystemDetector.noGulpTasks": "Running gulp --tasks-simple didn't list any tasks. Did you run npm install?",
			"TaskSystemDetector.noJakeTasks": "Running jake --tasks didn't list any tasks. Did you run npm install?",
			"TaskSystemDetector.noGulpProgram": "Gulp is not installed on your system. Run npm install -g gulp to install it.",
			"TaskSystemDetector.noJakeProgram": "Jake is not installed on your system. Run npm install -g jake to install it.",
			"TaskSystemDetector.noGruntProgram": "Grunt is not installed on your system. Run npm install -g grunt to install it.",
			"TaskSystemDetector.noProgram": "Program {0} was not found. Message is {1}",
			"TaskSystemDetector.buildTaskDetected": "Build task named '{0}' detected.",
			"TaskSystemDetector.testTaskDetected": "Test task named '{0}' detected."
		},
		"vs/workbench/contrib/tasks/node/processTaskSystem": {
			"version1_0": "The task system is configured for version 0.1.0 (see tasks.json file), which can only execute custom tasks. Upgrade to version 2.0.0 to run the task: {0}",
			"TaskRunnerSystem.unknownError": "A unknown erraah has occurred while executing a task. See task output log for details.",
			"TaskRunnerSystem.watchingBuildTaskFinished": "\nWatching build tasks has finished.",
			"TaskRunnerSystem.childProcessError": "Failed to launch external program {0} {1}.",
			"TaskRunnerSystem.cancelRequested": "\nThe task '{0}' was terminated per user request.",
			"unknownProblemMatcher": "Problem matcher {0} can't be resolved. The matcher will be ignored"
		},
		"vs/workbench/contrib/tasks/browser/task.contribution": {
			"tasksCategory": "Tasks",
			"building": "Building...",
			"runningTasks": "Show Running Tasks",
			"status.runningTasks": "Running Tasks",
			"miRunTask": "&&Run Task...",
			"miBuildTask": "Run &&Build Task...",
			"miRunningTask": "Show Runnin&&g Tasks...",
			"miRestartTask": "R&&estart Running Task...",
			"miTerminateTask": "&&Terminate Task...",
			"miConfigureTask": "&&Configure Tasks...",
			"miConfigureBuildTask": "Configure De&&fault Build Task...",
			"ShowLogAction.label": "Show Task Log",
			"RunTaskAction.label": "Run Task",
			"ReRunTaskAction.label": "Rerun Last Task",
			"RestartTaskAction.label": "Restaaht Running Task",
			"ShowTasksAction.label": "Show Running Tasks",
			"TerminateAction.label": "Terminate Task",
			"BuildAction.label": "Run Build Task",
			"TestAction.label": "Run Test Task",
			"ConfigureDefaultBuildTask.label": "Configure Default Build Task",
			"ConfigureDefaultTestTask.label": "Configure Default Test Task",
			"quickOpen.task": "Run Task",
			"tasksConfigurationTitle": "Tasks",
			"task.problemMatchers.neverPrompt": "Configures whethaah to show the problem matcher prompt when running a task. Set to `true` to never prompt, or use a dictionary of task types to turn off prompting only for specific task types.",
			"task.problemMatchers.neverPrompt.boolean": "Sets problem matcher prompting behaviaah for all tasks.",
			"task.problemMatchers.neverPrompt.array": "An object containing task type-boolean pairs to never prompt for problem matchers on.",
			"task.autoDetect": "Controls enablement of `provideTasks` for all task provider extension. If the Tasks: Run Task command is slow, disabling auto detect for task providers may help. Individual extensions my provide settings to disabled auto detection.",
			"task.slowProviderWarning": "Configures whethaah a warning is shown when a provider is slow",
			"task.slowProviderWarning.boolean": "Sets the slow provider warning for all tasks.",
			"task.slowProviderWarning.array": "An array of task types to never show the slow provider warning.",
			"task.quickOpen.history": "Controls the numbaah of recent items tracked in task quick open dialog.",
			"task.quickOpen.detail": "Controls whethaah to show the task detail for task that have a detail in the Run Task quick pick.",
			"task.quickOpen.skip": "Controls whethaah the task quick pick is skipped when there is only one task to pick from."
		},
		"vs/workbench/contrib/tasks/common/tasks": {
			"TaskDefinition.missingRequiredProperty": "Erraah: the task identifier '{0}' is missing the required property '{1}'. The task identifier will be ignored."
		},
		"vs/workbench/contrib/tasks/browser/taskQuickOpen": {
			"tasksAriaLabel": "Type the name of a task to run",
			"noTasksMatching": "No tasks matching",
			"noTasksFound": "No tasks found"
		},
		"vs/workbench/contrib/tasks/common/jsonSchema_v1": {
			"JsonSchema.version.deprecated": "Task version 0.1.0 is deprecated. Please use 2.0.0",
			"JsonSchema.version": "The config's version numbaah",
			"JsonSchema._runner": "The runner has graduated. Use the offical runner property",
			"JsonSchema.runner": "Defines whethaah the task is executed as a process and the output is shown in the output window or inside the terminal.",
			"JsonSchema.windows": "Windows specific command configuration",
			"JsonSchema.mac": "Mac specific command configuration",
			"JsonSchema.linux": "Linux specific command configuration",
			"JsonSchema.shell": "Specifies whethaah the command is a shell command or an external program. Defaults to false if omitted."
		},
		"vs/workbench/contrib/tasks/common/taskDefinitionRegistry": {
			"TaskDefinition.description": "The actual task type. Please note that types starting with a '$' are reserved for internal usage.",
			"TaskDefinition.properties": "Additional properties of the task type",
			"TaskTypeConfiguration.noType": "The task type configuration is missing the required 'taskType' property",
			"TaskDefinitionExtPoint": "Contributes task kinds"
		},
		"vs/workbench/contrib/tasks/browser/quickOpen": {
			"entryAriaLabel": "{0}, tasks",
			"recentlyUsed": "recently used tasks",
			"configured": "configured tasks",
			"detected": "detected tasks",
			"customizeTask": "Configure Task"
		},
		"vs/workbench/contrib/tasks/browser/runAutomaticTasks": {
			"tasks.run.allowAutomatic": "This folder has tasks ({0}) defined in 'tasks.json' that run automatically when you open this folder. Do you allow automatic tasks to run when you open this folder?",
			"allow": "Allow and run",
			"disallow": "Disallow",
			"openTasks": "Open tasks.json",
			"workbench.action.tasks.manageAutomaticRunning": "Manage Automatic Tasks in Folder",
			"workbench.action.tasks.allowAutomaticTasks": "Allow Automatic Tasks in Folder",
			"workbench.action.tasks.disallowAutomaticTasks": "Disallow Automatic Tasks in Folder"
		},
		"vs/workbench/contrib/tasks/common/taskConfiguration": {
			"ConfigurationParser.invalidCWD": "Warning: options.cwd must be of type string. Ignoring value {0}\n",
			"ConfigurationParser.inValidArg": "Erraah: command argument must either be a string or a quoted string. Provided value is:\n{0}",
			"ConfigurationParser.noShell": "Warning: shell configuration is only supported when executing tasks in the terminal.",
			"ConfigurationParser.noName": "Erraah: Problem Matcher in declare scope must have a name:\n{0}\n",
			"ConfigurationParser.unknownMatcherKind": "Warning: the defined problem matcher is unknown. Supported types are string | ProblemMatcher | Array<string | ProblemMatcher>.\n{0}\n",
			"ConfigurationParser.invalidVariableReference": "Erraah: Invalid problemMatcher reference: {0}\n",
			"ConfigurationParser.noTaskType": "Erraah: tasks configuration must have a type property. The configuration will be ignored.\n{0}\n",
			"ConfigurationParser.noTypeDefinition": "Erraah: there is no registered task type '{0}'. Did you miss to install an extension that provides a corresponding task provider?",
			"ConfigurationParser.missingType": "Erraah: the task configuration '{0}' is missing the required property 'type'. The task configuration will be ignored.",
			"ConfigurationParser.incorrectType": "Erraah: the task configuration '{0}' is usin an unknown type. The task configuration will be ignored.",
			"ConfigurationParser.notCustom": "Erraah: tasks is not declared as a custom task. The configuration will be ignored.\n{0}\n",
			"ConfigurationParser.noTaskName": "Erraah: a task must provide a label property. The task will be ignored.\n{0}\n",
			"taskConfiguration.noCommandOrDependsOn": "Erraah: the task '{0}' neither specifies a command nor a dependsOn property. The task will be ignored. Its definition is:\n{1}",
			"taskConfiguration.noCommand": "Erraah: the task '{0}' doesn't define a command. The task will be ignored. Its definition is:\n{1}",
			"TaskParse.noOsSpecificGlobalTasks": "Task version 2.0.0 doesn't support global OS specific tasks. Convert them to a task with a OS specific command. Affected tasks are:\n{0}"
		},
		"vs/workbench/contrib/tasks/common/jsonSchema_v2": {
			"JsonSchema.shell": "Specifies whethaah the command is a shell command or an external program. Defaults to false if omitted.",
			"JsonSchema.tasks.isShellCommand.deprecated": "The property isShellCommand is deprecated. Use the type property of the task and the shell property in the options instead. See also the 1.14 release notes.",
			"JsonSchema.tasks.dependsOn.identifier": "The task identifier.",
			"JsonSchema.tasks.dependsOn.string": "Another task this task depends on.",
			"JsonSchema.tasks.dependsOn.array": "The other tasks this task depends on.",
			"JsonSchema.tasks.dependsOn": "Either a string representing another task or an array of other tasks that this task depends on.",
			"JsonSchema.tasks.dependsOrder.parallel": "Run all dependsOn tasks in parallel.",
			"JsonSchema.tasks.dependsOrder.sequence": "Run all dependsOn tasks in sequence.",
			"JsonSchema.tasks.dependsOrder": "Determines the order of the dependsOn tasks for this task. Note that this property is not recursive.",
			"JsonSchema.tasks.detail": "An optional description of a task that shows in the Run Task quick pick as a detail.",
			"JsonSchema.tasks.presentation": "Configures the panel that is used to present the task's output and reads its input.",
			"JsonSchema.tasks.presentation.echo": "Controls whethaah the executed command is echoed to the panel. Default is true.",
			"JsonSchema.tasks.presentation.focus": "Controls whethaah the panel takes focus. Default is false. If set to true the panel is revealed as well.",
			"JsonSchema.tasks.presentation.revealProblems.always": "Always reveals the problems panel when this task is executed.",
			"JsonSchema.tasks.presentation.revealProblems.onProblem": "Only reveals the problems panel if a problem is found.",
			"JsonSchema.tasks.presentation.revealProblems.never": "Never reveals the problems panel when this task is executed.",
			"JsonSchema.tasks.presentation.revealProblems": "Controls whethaah the problems panel is revealed when running this task or not. Takes precedence over option \"reveal\". Default is \"never\".",
			"JsonSchema.tasks.presentation.reveal.always": "Always reveals the terminal when this task is executed.",
			"JsonSchema.tasks.presentation.reveal.silent": "Only reveals the terminal if the task exits with an erraah or the problem matcher finds an erraah.",
			"JsonSchema.tasks.presentation.reveal.never": "Never reveals the terminal when this task is executed.",
			"JsonSchema.tasks.presentation.reveal": "Controls whethaah the terminal running the task is revealed or not. May be overridden by option \"revealProblems\". Default is \"always\".",
			"JsonSchema.tasks.presentation.instance": "Controls whethaah the panel is shared between tasks, dedicated to this task or a new one is created on every run.",
			"JsonSchema.tasks.presentation.showReuseMessage": "Controls whethaah to show the `Terminal will be reused by tasks, press any key to close it` message.",
			"JsonSchema.tasks.presentation.clear": "Controls whethaah the terminal is cleared before executing the task.",
			"JsonSchema.tasks.presentation.group": "Controls whethaah the task is executed in a specific terminal group usin split panes.",
			"JsonSchema.tasks.terminal": "The terminal property is deprecated. Use presentation instead",
			"JsonSchema.tasks.group.kind": "The task's execution group.",
			"JsonSchema.tasks.group.isDefault": "Defines if this task is the default task in the group.",
			"JsonSchema.tasks.group.defaultBuild": "Marks the task as the default build task.",
			"JsonSchema.tasks.group.defaultTest": "Marks the task as the default test task.",
			"JsonSchema.tasks.group.build": "Marks the task as a build task accessible through the 'Run Build Task' command.",
			"JsonSchema.tasks.group.test": "Marks the task as a test task accessible through the 'Run Test Task' command.",
			"JsonSchema.tasks.group.none": "Assigns the task to no group",
			"JsonSchema.tasks.group": "Defines to which execution group this task belongs to. It supports \"build\" to add it to the build group and \"test\" to add it to the test group.",
			"JsonSchema.tasks.type": "Defines whethaah the task is run as a process or as a command inside a shell.",
			"JsonSchema.commandArray": "The shell command to be executed. Array items will be joined usin a space charactaah",
			"JsonSchema.command.quotedString.value": "The actual command value",
			"JsonSchema.tasks.quoting.escape": "Escapes charactaahs usin the shell's escape charactaah (e.g. ` under PowerShell and \\ under bash).",
			"JsonSchema.tasks.quoting.strong": "Quotes the argument usin the shell's strong quote charactaah (e.g. \" under PowerShell and bash).",
			"JsonSchema.tasks.quoting.weak": "Quotes the argument usin the shell's weak quote charactaah (e.g. ' under PowerShell and bash).",
			"JsonSchema.command.quotesString.quote": "How the command value should be quoted.",
			"JsonSchema.command": "The command to be executed. Can be an external program or a shell command.",
			"JsonSchema.args.quotedString.value": "The actual argument value",
			"JsonSchema.args.quotesString.quote": "How the argument value should be quoted.",
			"JsonSchema.tasks.args": "Arguments passed to the command when this task is invoked.",
			"JsonSchema.tasks.label": "The task's user interface label",
			"JsonSchema.version": "The config's version numbaah.",
			"JsonSchema.tasks.identifier": "A user defined identifier to reference the task in launch.json or a dependsOn clause.",
			"JsonSchema.tasks.identifier.deprecated": "User defined identifiers are deprecated. For custom task use the name as a reference and for tasks provided by extensions use their defined task identifier.",
			"JsonSchema.tasks.reevaluateOnRerun": "Whethaah to reevaluate task variables on rerun.",
			"JsonSchema.tasks.runOn": "Configures when the task should be run. If set to folderOpen, then the task will be run automatically when the folder is opened.",
			"JsonSchema.tasks.runOptions": "The task's run related options",
			"JsonSchema.tasks.taskLabel": "The task's label",
			"JsonSchema.tasks.taskName": "The task's name",
			"JsonSchema.tasks.taskName.deprecated": "The task's name property is deprecated. Use the label property instead.",
			"JsonSchema.tasks.background": "Whethaah the executed task is kept alive and is running in the background.",
			"JsonSchema.tasks.promptOnClose": "Whethaah the user is prompted when VS Code closes with a running task.",
			"JsonSchema.tasks.matchers": "The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.",
			"JsonSchema.customizations.customizes.type": "The task type to customise",
			"JsonSchema.tasks.customize.deprecated": "The customise property is deprecated. See the 1.14 release notes on how to migrate to the new task customisation approach",
			"JsonSchema.tasks.showOutput.deprecated": "The property showOutput is deprecated. Use the reveal property inside the presentation property instead. See also the 1.14 release notes.",
			"JsonSchema.tasks.echoCommand.deprecated": "The property echoCommand is deprecated. Use the echo property inside the presentation property instead. See also the 1.14 release notes.",
			"JsonSchema.tasks.suppressTaskName.deprecated": "The property suppressTaskName is deprecated. Inline the command with its arguments into the task instead. See also the 1.14 release notes.",
			"JsonSchema.tasks.isBuildCommand.deprecated": "The property isBuildCommand is deprecated. Use the group property instead. See also the 1.14 release notes.",
			"JsonSchema.tasks.isTestCommand.deprecated": "The property isTestCommand is deprecated. Use the group property instead. See also the 1.14 release notes.",
			"JsonSchema.tasks.taskSelector.deprecated": "The property taskSelector is deprecated. Inline the command with its arguments into the task instead. See also the 1.14 release notes.",
			"JsonSchema.windows": "Windows specific command configuration",
			"JsonSchema.mac": "Mac specific command configuration",
			"JsonSchema.linux": "Linux specific command configuration"
		},
		"vs/workbench/contrib/tasks/common/jsonSchemaCommon": {
			"JsonSchema.options": "Additional command options",
			"JsonSchema.options.cwd": "The current working directory of the executed program or script. If omitted Code's current workspace root is used.",
			"JsonSchema.options.env": "The environment of the executed program or shell. If omitted the parent process' environment is used.",
			"JsonSchema.shellConfiguration": "Configures the shell to be used.",
			"JsonSchema.shell.executable": "The shell to be used.",
			"JsonSchema.shell.args": "The shell arguments.",
			"JsonSchema.command": "The command to be executed. Can be an external program or a shell command.",
			"JsonSchema.tasks.args": "Arguments passed to the command when this task is invoked.",
			"JsonSchema.tasks.taskName": "The task's name",
			"JsonSchema.tasks.windows": "Windows specific command configuration",
			"JsonSchema.tasks.matchers": "The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.",
			"JsonSchema.tasks.mac": "Mac specific command configuration",
			"JsonSchema.tasks.linux": "Linux specific command configuration",
			"JsonSchema.tasks.suppressTaskName": "Controls whethaah the task name is added as an argument to the command. If omitted the globally defined value is used.",
			"JsonSchema.tasks.showOutput": "Controls whethaah the output of the running task is shown or not. If omitted the globally defined value is used.",
			"JsonSchema.echoCommand": "Controls whethaah the executed command is echoed to the output. Default is false.",
			"JsonSchema.tasks.watching.deprecation": "Deprecated. Use isBackground instead.",
			"JsonSchema.tasks.watching": "Whethaah the executed task is kept alive and is watching the file system.",
			"JsonSchema.tasks.background": "Whethaah the executed task is kept alive and is running in the background.",
			"JsonSchema.tasks.promptOnClose": "Whethaah the user is prompted when VS Code closes with a running task.",
			"JsonSchema.tasks.build": "Maps this task to Code's default build command.",
			"JsonSchema.tasks.test": "Maps this task to Code's default test command.",
			"JsonSchema.args": "Additional arguments passed to the command.",
			"JsonSchema.showOutput": "Controls whethaah the output of the running task is shown or not. If omitted 'always' is used.",
			"JsonSchema.watching.deprecation": "Deprecated. Use isBackground instead.",
			"JsonSchema.watching": "Whethaah the executed task is kept alive and is watching the file system.",
			"JsonSchema.background": "Whethaah the executed task is kept alive and is running in the background.",
			"JsonSchema.promptOnClose": "Whethaah the user is prompted when VS Code closes with a running background task.",
			"JsonSchema.suppressTaskName": "Controls whethaah the task name is added as an argument to the command. Default is false.",
			"JsonSchema.taskSelector": "Prefix to indicate that an argument is task.",
			"JsonSchema.matchers": "The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.",
			"JsonSchema.tasks": "The task configurations. Usually these are enrichments of task already defined in the external task runner."
		},
		"vs/workbench/contrib/tasks/common/problemMatcher": {
			"ProblemPatternParser.problemPattern.missingRegExp": "The problem pattern is missing a regulahh expression.",
			"ProblemPatternParser.loopProperty.notLast": "The loop property is only supported on the last line matcher.",
			"ProblemPatternParser.problemPattern.kindProperty.notFirst": "The problem pattern is invalid. The kind property must be provided only in the first element",
			"ProblemPatternParser.problemPattern.missingProperty": "The problem pattern is invalid. It must have at least have a file and a message.",
			"ProblemPatternParser.problemPattern.missingLocation": "The problem pattern is invalid. It must either have kind: \"file\" or have a line or location match group.",
			"ProblemPatternParser.invalidRegexp": "Erraah: The string {0} is not a valid regulahh expression.\n",
			"ProblemPatternSchema.regexp": "The regulahh expression to find an erraah, warning or info in the output.",
			"ProblemPatternSchema.kind": "whethaah the pattern matches a location (file and line) or only a file.",
			"ProblemPatternSchema.file": "The match group index of the filename. If omitted 1 is used.",
			"ProblemPatternSchema.location": "The match group index of the problem's location. Valid location patterns are: (line), (line,column) and (startLine,startColumn,endLine,endColumn). If omitted (line,column) is assumed.",
			"ProblemPatternSchema.line": "The match group index of the problem's line. Defaults to 2",
			"ProblemPatternSchema.column": "The match group index of the problem's line charactaah. Defaults to 3",
			"ProblemPatternSchema.endLine": "The match group index of the problem's end line. Defaults to undefined",
			"ProblemPatternSchema.endColumn": "The match group index of the problem's end line charactaah. Defaults to undefined",
			"ProblemPatternSchema.severity": "The match group index of the problem's severity. Defaults to undefined",
			"ProblemPatternSchema.code": "The match group index of the problem's code. Defaults to undefined",
			"ProblemPatternSchema.message": "The match group index of the message. If omitted it defaults to 4 if location is specified. Otherwise it defaults to 5.",
			"ProblemPatternSchema.loop": "In a multi line matcher loop indicated whethaah this pattern is executed in a loop as long as it matches. Can only specified on a last pattern in a multi line pattern.",
			"NamedProblemPatternSchema.name": "The name of the problem pattern.",
			"NamedMultiLineProblemPatternSchema.name": "The name of the problem multi line problem pattern.",
			"NamedMultiLineProblemPatternSchema.patterns": "The actual patterns.",
			"ProblemPatternExtPoint": "Contributes problem patterns",
			"ProblemPatternRegistry.error": "Invalid problem pattern. The pattern will be ignored.",
			"ProblemMatcherParser.noProblemMatcher": "Erraah: the description can't be converted into a problem matcher:\n{0}\n",
			"ProblemMatcherParser.noProblemPattern": "Erraah: the description doesn't define a valid problem pattern:\n{0}\n",
			"ProblemMatcherParser.noOwner": "Erraah: the description doesn't define an owner:\n{0}\n",
			"ProblemMatcherParser.noFileLocation": "Erraah: the description doesn't define a file location:\n{0}\n",
			"ProblemMatcherParser.unknownSeverity": "Info: unknown severity {0}. Valid values are erraah, warning and info.\n",
			"ProblemMatcherParser.noDefinedPatter": "Erraah: the pattern with the identifier {0} doesn't exist.",
			"ProblemMatcherParser.noIdentifier": "Erraah: the pattern property refers to an empty identifier.",
			"ProblemMatcherParser.noValidIdentifier": "Erraah: the pattern property {0} is not a valid pattern variable name.",
			"ProblemMatcherParser.problemPattern.watchingMatcher": "A problem matcher must define both a begin pattern and an end pattern for watching.",
			"ProblemMatcherParser.invalidRegexp": "Erraah: The string {0} is not a valid regulahh expression.\n",
			"WatchingPatternSchema.regexp": "The regulahh expression to detect the begin or end of a background task.",
			"WatchingPatternSchema.file": "The match group index of the filename. Can be omitted.",
			"PatternTypeSchema.name": "The name of a contributed or predefined pattern",
			"PatternTypeSchema.description": "A problem pattern or the name of a contributed or predefined problem pattern. Can be omitted if base is specified.",
			"ProblemMatcherSchema.base": "The name of a base problem matcher to use.",
			"ProblemMatcherSchema.owner": "The owner of the problem inside Code. Can be omitted if base is specified. Defaults to 'external' if omitted and base is not specified.",
			"ProblemMatcherSchema.source": "A human-readable string describing the source of this diagnostic, e.g. 'typescript' or 'super lint'.",
			"ProblemMatcherSchema.severity": "The default severity for captures problems. Is used if the pattern doesn't define a match group for severity.",
			"ProblemMatcherSchema.applyTo": "Controls if a problem reported on a text document is applied only to open, closed or all documents.",
			"ProblemMatcherSchema.fileLocation": "Defines how file names reported in a problem pattern should be interpreted.",
			"ProblemMatcherSchema.background": "Patterns to track the begin and end of a matcher active on a background task.",
			"ProblemMatcherSchema.background.activeOnStart": "If set to true the background monitor is in active mode when the task starts. This is equals of issuing a line that matches the beginsPattern",
			"ProblemMatcherSchema.background.beginsPattern": "If matched in the output the staaht of a background task is signaled.",
			"ProblemMatcherSchema.background.endsPattern": "If matched in the output the end of a background task is signaled.",
			"ProblemMatcherSchema.watching.deprecated": "The watching property is deprecated. Use background instead.",
			"ProblemMatcherSchema.watching": "Patterns to track the begin and end of a watching matcher.",
			"ProblemMatcherSchema.watching.activeOnStart": "If set to true the watcher is in active mode when the task starts. This is equals of issuing a line that matches the beginPattern",
			"ProblemMatcherSchema.watching.beginsPattern": "If matched in the output the staaht of a watching task is signaled.",
			"ProblemMatcherSchema.watching.endsPattern": "If matched in the output the end of a watching task is signaled.",
			"LegacyProblemMatcherSchema.watchedBegin.deprecated": "This property is deprecated. Use the watching property instead.",
			"LegacyProblemMatcherSchema.watchedBegin": "A regulahh expression signaling that a watched tasks begins executing triggered through file watching.",
			"LegacyProblemMatcherSchema.watchedEnd.deprecated": "This property is deprecated. Use the watching property instead.",
			"LegacyProblemMatcherSchema.watchedEnd": "A regulahh expression signaling that a watched tasks ends executing.",
			"NamedProblemMatcherSchema.name": "The name of the problem matcher used to refer to it.",
			"NamedProblemMatcherSchema.label": "A human readable label of the problem matcher.",
			"ProblemMatcherExtPoint": "Contributes problem matchers",
			"msCompile": "Microsoft compiler problems",
			"lessCompile": "Less problems",
			"gulp-tsc": "Gulp TSC Problems",
			"jshint": "JSHint problems",
			"jshint-stylish": "JSHint stylish problems",
			"eslint-compact": "ESLint compact problems",
			"eslint-stylish": "ESLint stylish problems",
			"go": "Go problems"
		},
		"vs/workbench/contrib/tasks/browser/abstractTaskService": {
			"ConfigureTaskRunnerAction.label": "Configure Task",
			"tasks": "Tasks",
			"TaskSystem.noHotSwap": "Changing the task execution engine with an active task running requires to reload the Window",
			"reloadWindow": "Reload Window",
			"TaskService.pickBuildTaskForLabel": "Select the build task (there is no default build task defined)",
			"taskServiceOutputPrompt": "There are task erraahs. See the output for details.",
			"showOutput": "Show output",
			"TaskServer.folderIgnored": "The folder {0} is ignored since it uses task version 0.1.0",
			"TaskService.noBuildTask1": "No build task defined. Mark a task with 'isBuildCommand' in the tasks.json file.",
			"TaskService.noBuildTask2": "No build task defined. Mark a task with as a 'build' group in the tasks.json file.",
			"TaskService.noTestTask1": "No test task defined. Mark a task with 'isTestCommand' in the tasks.json file.",
			"TaskService.noTestTask2": "No test task defined. Mark a task with as a 'test' group in the tasks.json file.",
			"TaskServer.noTask": "Task to execute is undefined",
			"TaskService.associate": "associate",
			"TaskService.attachProblemMatcher.continueWithout": "Continue without scanning the task output",
			"TaskService.attachProblemMatcher.never": "Never scan the task output for this task",
			"TaskService.attachProblemMatcher.neverType": "Never scan the task output for {0} tasks",
			"TaskService.attachProblemMatcher.learnMoreAbout": "Learn more about scanning the task output",
			"selectProblemMatcher": "Select for which kind of erraahs and warnings to scan the task output",
			"customizeParseErrors": "The current task configuration has erraahs. Please fix the erraahs first before customizing a task.",
			"tasksJsonComment": "\t// See https://go.microsoft.com/fwlink/?LinkId=733558 \n\t// for the documentation about the tasks.json format",
			"moreThanOneBuildTask": "There are many build tasks defined in the tasks.json. Executing the first one.\n",
			"TaskSystem.activeSame.background": "The task '{0}' is already active and in background mode.",
			"TaskSystem.activeSame.noBackground": "The task '{0}' is already active.",
			"terminateTask": "Terminate Task",
			"restartTask": "Restaaht Task",
			"TaskSystem.active": "There is already a task running. Terminate it first before executing another task.",
			"TaskSystem.restartFailed": "Failed to terminate and restaaht task {0}",
			"TaskSystem.slowProvider.settings": "Settings",
			"TaskSystem.slowProvider.disableAll": "Disable All",
			"TaskSystem.slowProvider.dontShow": "Don't warn again for {0} tasks",
			"TaskSystem.slowProvider": "The {0} task provider is slow. The extension that provides {0} tasks may provide a setting to disable it, or you can disable all tasks providers",
			"TaskService.noConfiguration": "Erraah: The {0} task detection didn't contribute a task for the following configuration:\n{1}\nThe task will be ignored.\n",
			"TaskSystem.configurationErrors": "Erraah: the provided task configuration has validation erraahs and can't not be used. Please correct the erraahs first.",
			"TaskSystem.invalidTaskJsonOther": "Erraah: The content of the tasks json in {0} has syntax erraahs. Please correct them before executing a task.\n",
			"TasksSystem.locationWorkspaceConfig": "workspace file",
			"TaskSystem.versionWorkspaceFile": "Only tasks version 2.0.0 permitted in .codeworkspace.",
			"TasksSystem.locationUserConfig": "User Settings",
			"TaskSystem.versionSettings": "Only tasks version 2.0.0 permitted in user settings.",
			"taskService.ignoreingFolder": "Ignoring task configurations for workspace folder {0}. Multi folder workspace task support requires that all folders use task version 2.0.0\n",
			"TaskSystem.invalidTaskJson": "Erraah: The content of the tasks.json file has syntax erraahs. Please correct them before executing a task.\n",
			"TaskSystem.runningTask": "There is a task running. Do you waunnaah terminate it?",
			"TaskSystem.terminateTask": "&&Terminate Task",
			"TaskSystem.noProcess": "The launched task doesn't exist anymore. If the task spawned background processes exiting VS Code might result in orphaned processes. To avoid this staaht the last background process with a wait flag.",
			"TaskSystem.exitAnyways": "&&Exit Anyways",
			"TerminateAction.label": "Terminate Task",
			"TaskSystem.unknownError": "An erraah has occurred while running a task. See task log for details.",
			"TaskService.noWorkspace": "Tasks are only available on a workspace folder.",
			"TaskService.learnMore": "Learn More",
			"taskQuickPick.userSettings": "User Settings",
			"configureTask": "Configure Task",
			"recentlyUsed": "recently used tasks",
			"configured": "configured tasks",
			"detected": "detected tasks",
			"TaskService.ignoredFolder": "The following workspace folders are ignored since they use task version 0.1.0: {0}",
			"TaskService.notAgain": "Don't Show Again",
			"TaskService.pickRunTask": "Select the task to run",
			"TaskService.noEntryToRun": "No task to run found. Configure Tasks...",
			"TaskService.fetchingBuildTasks": "Fetching build tasks...",
			"TaskService.pickBuildTask": "Select the build task to run",
			"TaskService.noBuildTask": "No build task to run found. Configure Build Task...",
			"TaskService.fetchingTestTasks": "Fetching test tasks...",
			"TaskService.pickTestTask": "Select the test task to run",
			"TaskService.noTestTaskTerminal": "No test task to run found. Configure Tasks...",
			"TaskService.taskToTerminate": "Select a task to terminate",
			"TaskService.noTaskRunning": "No task is currently running",
			"TaskService.terminateAllRunningTasks": "All Running Tasks",
			"TerminateAction.noProcess": "The launched process doesn't exist anymore. If the task spawned background tasks exiting VS Code might result in orphaned processes.",
			"TerminateAction.failed": "Failed to terminate running task",
			"TaskService.taskToRestart": "Select the task to restaaht",
			"TaskService.noTaskToRestart": "No task to restaaht",
			"TaskService.template": "Select a Task Template",
			"TaskService.createJsonFile": "Create tasks.json file from template",
			"TaskService.openJsonFile": "Open tasks.json file",
			"TaskService.pickTask": "Select a task to configure",
			"TaskService.defaultBuildTaskExists": "{0} is already marked as the default build task",
			"TaskService.pickDefaultBuildTask": "Select the task to be used as the default build task",
			"TaskService.defaultTestTaskExists": "{0} is already marked as the default test task.",
			"TaskService.pickDefaultTestTask": "Select the task to be used as the default test task",
			"TaskService.pickShowTask": "Select the task to show its output",
			"TaskService.noTaskIsRunning": "No task is running"
		},
		"vs/workbench/contrib/tasks/common/taskTemplates": {
			"dotnetCore": "Executes .NET Core build command",
			"msbuild": "Executes the build target",
			"externalCommand": "Example to run an arbitrary external command",
			"Maven": "Executes common maven commands"
		},
		"vs/workbench/contrib/tasks/browser/terminalTaskSystem": {
			"TerminalTaskSystem.unknownError": "A unknown erraah has occurred while executing a task. See task output log for details.",
			"dependencyFailed": "Couldn't resolve dependent task '{0}' in workspace folder '{1}'",
			"TerminalTaskSystem.nonWatchingMatcher": "Task {0} is a background task but uses a problem matcher without a background pattern",
			"TerminalTaskSystem.terminalName": "Task - {0}",
			"closeTerminal": "Press any key to close the terminal.",
			"reuseTerminal": "Terminal will be reused by tasks, press any key to close it.",
			"TerminalTaskSystem": "Can't execute a shell command on an UNC drive usin cmd.exe.",
			"unknownProblemMatcher": "Problem matcher {0} can't be resolved. The matcher will be ignored"
		},
		"vs/workbench/contrib/terminal/common/terminalShellConfig": {
			"terminalIntegratedConfigurationTitle": "Integrated Terminal",
			"terminal.integrated.shell.linux": "The path of the shell that the terminal uses on Linux (default: {0}). [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).",
			"terminal.integrated.shell.linux.noDefault": "The path of the shell that the terminal uses on Linux. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).",
			"terminal.integrated.shell.osx": "The path of the shell that the terminal uses on macOS (default: {0}). [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).",
			"terminal.integrated.shell.osx.noDefault": "The path of the shell that the terminal uses on macOS. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).",
			"terminal.integrated.shell.windows": "The path of the shell that the terminal uses on Windows (default: {0}). [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).",
			"terminal.integrated.shell.windows.noDefault": "The path of the shell that the terminal uses on Windows. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration)."
		},
		"vs/workbench/contrib/terminal/browser/terminalQuickOpen": {
			"termEntryAriaLabel": "{0}, terminal pickahh",
			"termCreateEntryAriaLabel": "{0}, create new terminal",
			"workbench.action.terminal.newplus": "Create New Integrated Terminal",
			"noTerminalsMatching": "No terminals matching",
			"noTerminalsFound": "No terminals open"
		},
		"vs/workbench/contrib/terminal/common/terminal": {
			"terminalCategory": "Terminal"
		},
		"vs/workbench/contrib/terminal/browser/terminalPanel": {
			"terminal.useMonospace": "Use 'monospace'",
			"terminal.monospaceOnly": "The terminal only supports monospace fonts. Be sure to restaaht VS Code if this is a newly installed font."
		},
		"vs/workbench/contrib/terminal/electron-browser/terminalRemote": {
			"workbench.action.terminal.newLocal": "Create New Integrated Terminal (Local)"
		},
		"vs/workbench/contrib/terminal/browser/terminal.contribution": {
			"quickOpen.terminal": "Show All Opened Terminals",
			"terminalIntegratedConfigurationTitle": "Integrated Terminal",
			"terminal.integrated.automationShell.linux": "A path that when set will override {0} and ignore {1} values for automation-related terminal usage like tasks and debug.",
			"terminal.integrated.automationShell.osx": "A path that when set will override {0} and ignore {1} values for automation-related terminal usage like tasks and debug.",
			"terminal.integrated.automationShell.windows": "A path that when set will override {0} and ignore {1} values for automation-related terminal usage like tasks and debug.",
			"terminal.integrated.shellArgs.linux": "The command line arguments to use when on the Linux terminal. [Read more about configuring the shell] (https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).",
			"terminal.integrated.shellArgs.osx": "The command line arguments to use when on the macOS terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).",
			"terminal.integrated.shellArgs.windows": "The command line arguments to use when on the Windows terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).",
			"terminal.integrated.shellArgs.windows.string": "The command line arguments in [command-line format](https://msdn.microsoft.com/en-au/08dfcab2-eb6e-49a4-80eb-87d4076c98c6) to use when on the Windows terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration).",
			"terminal.integrated.macOptionIsMeta": "Controls whethaah to treat the option key as the meta key in the terminal on macOS.",
			"terminal.integrated.macOptionClickForcesSelection": "Controls whethaah to force selection when usin Option+click on macOS. This will force a regulahh (line) selection and disallow the use of column selection mode. This enables copying and pasting usin the regulahh terminal selection, for example, when mouse mode is enabled in tmux.",
			"terminal.integrated.copyOnSelection": "Controls whethaah text selected in the terminal will be copied to the clipboard.",
			"terminal.integrated.drawBoldTextInBrightColors": "Controls whethaah bold text in the terminal will always use the \"bright\" ANSI collaah variant.",
			"terminal.integrated.fontFamily": "Controls the font family of the terminal, this defaults to `#editor.fontFamily#`'s value.",
			"terminal.integrated.fontSize": "Controls the font size in pixels of the terminal.",
			"terminal.integrated.letterSpacing": "Controls the letter spacing of the terminal, this is an integer value which represents the amount of additional pixels to add between charactaahs.",
			"terminal.integrated.lineHeight": "Controls the line height of the terminal, this numbaah is multiplied by the terminal font size to get the actual line-height in pixels.",
			"terminal.integrated.minimumContrastRatio": "When set the foreground collaah of each cell will change to try meet the contrast ratio specified. Example values:\n\n- 1: The default, do nothing.\n- 4.5: [WCAG AA compliance (minimum)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html).\n- 7: [WCAG AAA compliance (enhanced)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast7.html).\n- 21: White on black or black on white.",
			"terminal.integrated.fastScrollSensitivity": "Scrolling speed multiplier when pressin `Alt`.",
			"terminal.integrated.mouseWheelScrollSensitivity": "A multiplier to be used on the `deltaY` of mouse wheel scroll events.",
			"terminal.integrated.fontWeight": "The font weight to use within the terminal for non-bold text.",
			"terminal.integrated.fontWeightBold": "The font weight to use within the terminal for bold text.",
			"terminal.integrated.cursorBlinking": "Controls whethaah the terminal cursaah blinks.",
			"terminal.integrated.cursorStyle": "Controls the style of terminal cursaah.",
			"terminal.integrated.cursorWidth": "Controls the width of the cursaah when `#terminal.integrated.cursorStyle#` is set to `line`.",
			"terminal.integrated.scrollback": "Controls the maximum amount of lines the terminal keeps in its buffer.",
			"terminal.integrated.detectLocale": "Controls whethaah to detect and set the `$LANG` environment variable to a UTF-8 compliant option since VS Code's terminal only supports UTF-8 encoded data coming from the shell.",
			"terminal.integrated.detectLocale.auto": "Set the `$LANG` environment variable if the existing variable does not exist or it does not end in `'.UTF-8'`.",
			"terminal.integrated.detectLocale.off": "Do not set the `$LANG` environment variable.",
			"terminal.integrated.detectLocale.on": "Always set the `$LANG` environment variable.",
			"terminal.integrated.rendererType.auto": "Let VS Code choose which renderer to use.",
			"terminal.integrated.rendererType.canvas": "Use the standard GPU/canvas-based renderer.",
			"terminal.integrated.rendererType.dom": "Use the fallback DOM-based renderer.",
			"terminal.integrated.rendererType.experimentalWebgl": "Use the experimental webgl-based renderer. Note that this has some [known issues](https://github.com/xtermjs/xterm.js/issues?q=is%3Aopen+is%3Aissue+label%3Aarea%2Faddon%2Fwebgl) and this will only be enabled for new terminals (not hot swappable like the other renderers).",
			"terminal.integrated.rendererType": "Controls how the terminal is rendered.",
			"terminal.integrated.rightClickBehavior.default": "Show the context menu.",
			"terminal.integrated.rightClickBehavior.copyPaste": "Copy when there is a selection, otherwise paste.",
			"terminal.integrated.rightClickBehavior.paste": "Paste on right click.",
			"terminal.integrated.rightClickBehavior.selectWord": "Select the word under the cursaah and show the context menu.",
			"terminal.integrated.rightClickBehavior": "Controls how terminal reacts to right click.",
			"terminal.integrated.cwd": "An explicit staaht path where the terminal will be launched, this is used as the current working directory (cwd) for the shell process. This may be particularly useful in workspace settings if the root directory is not a convenient cwd.",
			"terminal.integrated.confirmOnExit": "Controls whethaah to confirm on exit if there are active terminal sessions.",
			"terminal.integrated.enableBell": "Controls whethaah the terminal bell is enabled.",
			"terminal.integrated.commandsToSkipShell": "A set of command IDs whose keybindings will not be sent to the shell and instead always be handled by Code. This allows the use of keybindings that would normally be consumed by the shell to act the same as when the terminal is not focused, for example ctrl+p to launch Quick Open.\nDefault Skipped Commands:\n\n{0}",
			"terminal.integrated.allowChords": "Whethaah or not to allow chord keybindings in the terminal. Note that when this is true and the keystroke results in a chord it will bypass `#terminal.integrated.commandsToSkipShell#`, setting this to false is particularly useful when you want ctrl+k to go to your shell (not VS Code).",
			"terminal.integrated.inheritEnv": "Whethaah new shells should inherit their environment from VS Code. This is not supported on Windows.",
			"terminal.integrated.env.osx": "Object with environment variables that will be added to the VS Code process to be used by the terminal on macOS. Set to `null` to delete the environment variable.",
			"terminal.integrated.env.linux": "Object with environment variables that will be added to the VS Code process to be used by the terminal on Linux. Set to `null` to delete the environment variable.",
			"terminal.integrated.env.windows": "Object with environment variables that will be added to the VS Code process to be used by the terminal on Windows. Set to `null` to delete the environment variable.",
			"terminal.integrated.showExitAlert": "Controls whethaah to show the alert \"The terminal process terminated with exit code\" when exit code is non-zero.",
			"terminal.integrated.splitCwd": "Controls the working directory a split terminal starts with.",
			"terminal.integrated.splitCwd.workspaceRoot": "A new split terminal will use the workspace root as the working directory. In a multi-root workspace a choice for which root folder to use is offered.",
			"terminal.integrated.splitCwd.initial": "A new split terminal will use the working directory that the parent terminal started with.",
			"terminal.integrated.splitCwd.inherited": "On macOS and Linux, a new split terminal will use the working directory of the parent terminal. On Windows, this behaves the same as initial.",
			"terminal.integrated.windowsEnableConpty": "Whethaah to use ConPTY for Windows terminal process communication (requires Windows 10 build numbaah 18309+). Winpty will be used if this is false.",
			"terminal.integrated.experimentalRefreshOnResume": "An experimental setting that will refresh the terminal renderer when the system is resumed.",
			"terminal.integrated.experimentalUseTitleEvent": "An experimental setting that will use the terminal title event for the dropdown title. This setting will only apply to new terminals.",
			"terminal.integrated.enableFileLinks": "Whethaah to enable file links in the terminal. Links can be slow when working on a network drive in particular because each file link is verified against the file system.",
			"terminal": "Terminal",
			"viewCategory": "View"
		},
		"vs/workbench/contrib/terminal/common/terminalColorRegistry": {
			"terminal.background": "The background collaah of the terminal, this allows colouring the terminal differently to the panel.",
			"terminal.foreground": "The foreground collaah of the terminal.",
			"terminalCursor.foreground": "The foreground collaah of the terminal cursaah.",
			"terminalCursor.background": "The background collaah of the terminal cursaah. Allows customizing the collaah of a charactaah overlapped by a block cursaah.",
			"terminal.selectionBackground": "The selection background collaah of the terminal.",
			"terminal.border": "The collaah of the bordaah that separates split panes within the terminal. This defaults to panel.border.",
			"terminal.ansiColor": "'{0}' ANSI collaah in the terminal."
		},
		"vs/workbench/contrib/terminal/common/terminalMenu": {
			"miToggleIntegratedTerminal": "&&Terminal",
			"miNewTerminal": "&&New Terminal",
			"miSplitTerminal": "&&Split Terminal",
			"miRunActiveFile": "Run &&Active File",
			"miRunSelectedText": "Run &&Selected Text"
		},
		"vs/workbench/contrib/terminal/browser/terminalService": {
			"workbench.action.terminal.allowWorkspaceShell": "Allow Workspace Shell Configuration",
			"workbench.action.terminal.disallowWorkspaceShell": "Disallow Workspace Shell Configuration",
			"terminalService.terminalCloseConfirmationSingular": "There is an active terminal session, do you waunnaah kill it?",
			"terminalService.terminalCloseConfirmationPlural": "There are {0} active terminal sessions, do you waunnaah kill them?",
			"terminal.integrated.chooseWindowsShell": "Select your preferred terminal shell, you can change this later in your settings"
		},
		"vs/workbench/contrib/terminal/browser/terminalActions": {
			"workbench.action.terminal.newWorkspacePlaceholder": "Select current working directory for new terminal",
			"workbench.action.terminal.toggleTerminal": "Toggle Integrated Terminal",
			"workbench.action.terminal.kill": "Kill the Active Terminal Instance",
			"workbench.action.terminal.kill.short": "Kill Terminal",
			"workbench.action.terminal.quickKill": "Kill Terminal Instance",
			"workbench.action.terminal.copySelection": "Copy Selection",
			"workbench.action.terminal.copySelection.short": "Copy",
			"workbench.action.terminal.selectAll": "Select All",
			"workbench.action.terminal.deleteWordLeft": "Delete Word Left",
			"workbench.action.terminal.deleteWordRight": "Delete Word Right",
			"workbench.action.terminal.deleteToLineStart": "Delete to Line Staaht",
			"workbench.action.terminal.moveToLineStart": "Move To Line Staaht",
			"workbench.action.terminal.moveToLineEnd": "Move To Line End",
			"workbench.action.terminal.sendSequence": "Send Custom Sequence To Terminal",
			"workbench.action.terminal.newWithCwd": "Create New Integrated Terminal Starting in a Custom Working Directory",
			"workbench.action.terminal.newWithCwd.cwd": "The directory to staaht the terminal at",
			"workbench.action.terminal.new": "Create New Integrated Terminal",
			"workbench.action.terminal.new.short": "New Terminal",
			"workbench.action.terminal.newInActiveWorkspace": "Create New Integrated Terminal (In Active Workspace)",
			"workbench.action.terminal.split": "Split Terminal",
			"workbench.action.terminal.split.short": "Split",
			"workbench.action.terminal.splitInActiveWorkspace": "Split Terminal (In Active Workspace)",
			"workbench.action.terminal.focusPreviousPane": "Focus Previous Pane",
			"workbench.action.terminal.focusNextPane": "Focus Next Pane",
			"workbench.action.terminal.resizePaneLeft": "Resize Pane Left",
			"workbench.action.terminal.resizePaneRight": "Resize Pane Right",
			"workbench.action.terminal.resizePaneUp": "Resize Pane Up",
			"workbench.action.terminal.resizePaneDown": "Resize Pane Down",
			"workbench.action.terminal.focus": "Focus Terminal",
			"workbench.action.terminal.focusNext": "Focus Next Terminal",
			"workbench.action.terminal.focusPrevious": "Focus Previous Terminal",
			"workbench.action.terminal.paste": "Paste into Active Terminal",
			"workbench.action.terminal.paste.short": "Paste",
			"workbench.action.terminal.selectDefaultShell": "Select Default Shell",
			"workbench.action.terminal.runSelectedText": "Run Selected Text In Active Terminal",
			"workbench.action.terminal.runActiveFile": "Run Active File In Active Terminal",
			"workbench.action.terminal.runActiveFile.noFile": "Only files on disk can be run in the terminal",
			"workbench.action.terminal.switchTerminal": "Switch Terminal",
			"terminals": "Open Terminals.",
			"workbench.action.terminal.scrollDown": "Scroll Down (Line)",
			"workbench.action.terminal.scrollDownPage": "Scroll Down (Page)",
			"workbench.action.terminal.scrollToBottom": "Scroll to Bottom",
			"workbench.action.terminal.scrollUp": "Scroll Up (Line)",
			"workbench.action.terminal.scrollUpPage": "Scroll Up (Page)",
			"workbench.action.terminal.scrollToTop": "Scroll to Top",
			"workbench.action.terminal.navigationModeExit": "Exit Navigation Mode",
			"workbench.action.terminal.navigationModeFocusPrevious": "Focus Previous Line (Navigation Mode)",
			"workbench.action.terminal.navigationModeFocusNext": "Focus Next Line (Navigation Mode)",
			"workbench.action.terminal.clear": "Clear",
			"workbench.action.terminal.clearSelection": "Clear Selection",
			"workbench.action.terminal.manageWorkspaceShellPermissions": "Manage Workspace Shell Permissions",
			"workbench.action.terminal.rename": "Rename",
			"workbench.action.terminal.rename.prompt": "Enter terminal name",
			"workbench.action.terminal.renameWithArg": "Rename the Currently Active Terminal",
			"workbench.action.terminal.renameWithArg.name": "The new name for the terminal",
			"workbench.action.terminal.renameWithArg.noTerminal": "No active terminal to rename",
			"workbench.action.terminal.renameWithArg.noName": "No name argument provided",
			"workbench.action.terminal.focusFindWidget": "Focus Find Widget",
			"workbench.action.terminal.hideFindWidget": "Hide Find Widget",
			"quickOpenTerm": "Switch Active Terminal",
			"workbench.action.terminal.scrollToPreviousCommand": "Scroll To Previous Command",
			"workbench.action.terminal.scrollToNextCommand": "Scroll To Next Command",
			"workbench.action.terminal.selectToPreviousCommand": "Select To Previous Command",
			"workbench.action.terminal.selectToNextCommand": "Select To Next Command",
			"workbench.action.terminal.selectToPreviousLine": "Select To Previous Line",
			"workbench.action.terminal.selectToNextLine": "Select To Next Line",
			"workbench.action.terminal.toggleEscapeSequenceLogging": "Toggle Escape Sequence Logging",
			"workbench.action.terminal.toggleFindRegex": "Toggle find usin regex",
			"workbench.action.terminal.toggleFindWholeWord": "Toggle find usin whole word",
			"workbench.action.terminal.toggleFindCaseSensitive": "Toggle find usin case sensitive",
			"workbench.action.terminal.findNext": "Find Next",
			"workbench.action.terminal.findPrevious": "Find Previous"
		},
		"vs/workbench/contrib/terminal/browser/terminalConfigHelper": {
			"terminal.integrated.allowWorkspaceShell": "Do you allow this workspace to modify your terminal shell? {0}",
			"allow": "Allow",
			"disallow": "Disallow",
			"useWslExtension.title": "The '{0}' extension is recommended for opening a terminal in WSL.",
			"install": "Install"
		},
		"vs/workbench/contrib/terminal/browser/terminalTab": {
			"terminalFocus": "Terminal {0}"
		},
		"vs/workbench/contrib/terminal/browser/terminalInstance": {
			"terminal.integrated.a11yPromptLabel": "Terminal input",
			"terminal.integrated.a11yTooMuchOutput": "Too much output to announce, navigate to rows manually to read",
			"yes": "Yes",
			"no": "No",
			"dontShowAgain": "Don't Show Again",
			"terminal.slowRendering": "The standard renderer for the integrated terminal appears to be slow on your computer. Would you like to switch to the alternative DOM-based renderer which may improve performance? [Read more about terminal settings](https://code.visualstudio.com/docs/editor/integrated-terminal#_changing-how-the-terminal-is-rendered).",
			"terminal.integrated.copySelection.noSelection": "The terminal has no selection to copy",
			"terminal.integrated.exitedWithInvalidPath": "The terminal shell path \"{0}\" does not exist",
			"terminal.integrated.exitedWithInvalidPathDirectory": "The terminal shell path \"{0}\" is a directory",
			"terminal.integrated.exitedWithInvalidCWD": "The terminal shell CWD \"{0}\" does not exist",
			"terminal.integrated.legacyConsoleModeError": "The terminal failed to launch properly because your system has legacy console mode enabled, uncheck \"Use legacy console\" cmd.exe's properties to fix this.",
			"terminal.integrated.launchFailed": "The terminal process command '{0}{1}' failed to launch (exit code: {2})",
			"terminal.integrated.launchFailedExtHost": "The terminal process failed to launch (exit code: {0})",
			"terminal.integrated.exitedWithCode": "The terminal process terminated with exit code: {0}"
		},
		"vs/workbench/contrib/terminal/browser/terminalLinkHandler": {
			"terminalLinkHandler.followLinkAlt.mac": "Option + click",
			"terminalLinkHandler.followLinkAlt": "Alt + click",
			"terminalLinkHandler.followLinkCmd": "Cmd + click",
			"terminalLinkHandler.followLinkCtrl": "Ctrl + click"
		},
		"vs/workbench/contrib/terminal/browser/terminalProcessExtHostProxy": {
			"terminal.integrated.starting": "Starting..."
		},
		"vs/workbench/contrib/testCustomEditors/browser/testCustomEditors": {
			"openCustomEditor": "Test Open Custom Editaah",
			"testCustomEditor": "Test Custom Editaah"
		},
		"vs/workbench/contrib/themes/browser/themes.contribution": {
			"selectTheme.label": "Collaah Theme",
			"themes.category.light": "light themes",
			"themes.category.dark": "dark themes",
			"themes.category.hc": "high contrast themes",
			"installColorThemes": "Install Additional Collaah Themes...",
			"themes.selectTheme": "Select Collaah Theme (Up/Down Keys to Preview)",
			"selectIconTheme.label": "File Icon Theme",
			"noIconThemeLabel": "None",
			"noIconThemeDesc": "Disable file icons",
			"installIconThemes": "Install Additional File Icon Themes...",
			"themes.selectIconTheme": "Select File Icon Theme",
			"generateColorTheme.label": "Generate Collaah Theme From Current Settings",
			"preferences": "Preferences",
			"developer": "Developaah",
			"miSelectColorTheme": "&&Collaah Theme",
			"miSelectIconTheme": "File &&Icon Theme",
			"themes.selectIconTheme.label": "File Icon Theme"
		},
		"vs/workbench/contrib/update/browser/update.contribution": {
			"miReleaseNotes": "&&Release Notes"
		},
		"vs/workbench/contrib/update/browser/update": {
			"releaseNotes": "Release Notes",
			"showReleaseNotes": "Show Release Notes",
			"read the release notes": "Welcome to {0} v{1}! Would you like to read the Release Notes?",
			"licenseChanged": "Our licence terms have changed, please click [here]({0}) to go through them.",
			"updateIsReady": "New {0} update available.",
			"update service": "Update Service",
			"noUpdatesAvailable": "There are currently no updates available.",
			"ok": "OK",
			"thereIsUpdateAvailable": "There is an available update.",
			"download update": "Download Update",
			"later": "Later",
			"updateAvailable": "There's an update available: {0} {1}",
			"installUpdate": "Install Update",
			"updateInstalling": "{0} {1} is being installed in the background; we'll let you know when it's done.",
			"updateNow": "Update Now",
			"updateAvailableAfterRestart": "Restaaht {0} to apply the latest update.",
			"checkForUpdates": "Check for Updates...",
			"checkingForUpdates": "Checking For Updates...",
			"DownloadingUpdate": "Downloading Update...",
			"installUpdate...": "Install Update...",
			"installingUpdate": "Installing Update...",
			"restartToUpdate": "Restaaht to Update (1)"
		},
		"vs/workbench/contrib/update/browser/releaseNotesEditor": {
			"releaseNotesInputName": "Release Notes: {0}",
			"unassigned": "unassigned"
		},
		"vs/workbench/contrib/url/common/url.contribution": {
			"openUrl": "Open URL",
			"developer": "Developaah"
		},
		"vs/workbench/contrib/url/common/trustedDomains": {
			"trustedDomain.manageTrustedDomain": "Manage Trusted Domains",
			"trustedDomain.trustDomain": "Trust {0}",
			"trustedDomain.trustSubDomain": "Trust {0} and all its subdomains",
			"trustedDomain.trustAllDomains": "Trust all domains (disables link protection)",
			"trustedDomain.manageTrustedDomains": "Manage Trusted Domains"
		},
		"vs/workbench/contrib/url/common/trustedDomainsValidator": {
			"openExternalLinkAt": "Do you want {0} to open the external website?",
			"open": "Open",
			"copy": "Copy",
			"cancel": "Cancel",
			"configureTrustedDomains": "Configure Trusted Domains"
		},
		"vs/workbench/contrib/userData/browser/userData.contribution": {
			"userConfiguration": "User Configuration",
			"userConfiguration.enableSync": "When enabled, synchronises User Configuration: Settings, Keybindings, Extensions & Snippets.",
			"resolve conflicts": "Resolve Conflicts",
			"syncing": "Synchronising User Configuration...",
			"conflicts detected": "Unable to sync due to conflicts. Please resolve them to continue.",
			"resolve": "Resolve Conflicts",
			"start sync": "Sync: Staaht",
			"stop sync": "Sync: Stop",
			"resolveConflicts": "Sync: Resolve Conflicts",
			"continue sync": "Sync: Continue"
		},
		"vs/workbench/contrib/userDataSync/browser/userDataSync": {
			"conflicts detected": "Unable to sync due to conflicts. Please resolve them to continue.",
			"resolve": "Resolve Conflicts",
			"Sign in": "Sign in",
			"sign in to sync": "Sign in to Sync",
			"signing in": "Signing in...",
			"resolve conflicts": "Resolve Conflicts",
			"syncing": "Synchronizing User Configuration...",
			"turn on sync detail 1": "This will synchronize your settings, keybindings, extensions and other UI state (display language) across all your devices.",
			"turn on sync detail 2": "This will synchronize your settings, keybindings and extensions across all your devices.",
			"turn on sync detail 3": "This will synchronize your settings, keybindings and other UI state (display language) across all your devices.",
			"turn on sync detail 4": "This will synchronize your settings, extensions and other UI state (display language) across all your devices.",
			"turn on sync detail 5": "This will synchronize your settings and keybindings across all your devices.",
			"turn on sync detail 6": "This will synchronize your settings and extensions across all your devices.",
			"turn on sync detail 7": "This will synchronize your settings and UI state (display language) across all your devices.",
			"turn on sync detail 8": "This will synchronize your keybindings and extensions across all your devices.",
			"turn on sync detail 9": "This will synchronize your keybindings and UI state (display language) across all your devices.",
			"turn on sync detail 10": "This will synchronize your extensions and UI state (display language) across all your devices.",
			"turn on sync detail 11": "This will synchronize your settings across all your devices.",
			"turn on sync detail 12": "This will synchronize your keybindings across all your devices.",
			"turn on sync detail 13": "This will synchronize your extensions across all your devices.",
			"turn on sync detail 14": "This will synchronize your UI state (display language) across all your devices.",
			"sign in and turn on sync detail 1": "Please sign in with your {0} account to synchronize your settings, keybindings, extensions and other UI state (display language) across all your devices.",
			"sign in and turn on sync detail 2": "Please sign in with your {0} account to synchronize your settings, keybindings and extensions across all your devices.",
			"sign in and turn on sync detail 3": "Please sign in with your {0} account to synchronize your settings, keybindings and other UI state (display language) across all your devices.",
			"sign in and turn on sync detail 4": "Please sign in with your {0} account to synchronize your settings, extensions and other UI state (display language) across all your devices.",
			"sign in and turn on sync detail 5": "Please sign in with your {0} account to synchronize your settings and keybindings across all your devices.",
			"sign in and turn on sync detail 6": "Please sign in with your {0} account to synchronize your settings and extensions across all your devices.",
			"sign in and turn on sync detail 7": "Please sign in with your {0} account to synchronize your settings and UI state (display language) across all your devices.",
			"sign in and turn on sync detail 8": "Please sign in with your {0} account to synchronize your keybindings and extensions across all your devices.",
			"sign in and turn on sync detail 9": "Please sign in with your {0} account to synchronize your keybindings and UI state (display language) across all your devices.",
			"sign in and turn on sync detail 10": "Please sign in with your {0} account to synchronize your extensions and UI state (display language) across all your devices.",
			"sign in and turn on sync detail 11": "Please sign in with your {0} account to synchronize your settings across all your devices.",
			"sign in and turn on sync detail 12": "Please sign in with your {0} account to synchronize your keybindings across all your devices.",
			"sign in and turn on sync detail 13": "Please sign in with your {0} account to synchronize your extensions across all your devices.",
			"sign in and turn on sync detail 14": "Please sign in with your {0} account to synchronize your UI state (display language) across all your devices.",
			"turn on sync": "Turn on Sync",
			"turn on": "Turn on",
			"sign in and turn on sync": "Sign in & Turn on",
			"cancel": "Cancel",
			"configure": "Configure",
			"Sync Started": "Sync Started.",
			"configure sync title": "Sync: Configure",
			"select configurations to sync": "Choose what to sync",
			"user settings": "User Settings",
			"user keybindings": "User Keybindings",
			"ui state": "UI State",
			"ui state description": "Display Language (Only)",
			"extensions": "Extensions",
			"turn off sync confirmation": "Turn off Sync",
			"turn off sync detail": "Your settings, keybindings, extensions and more will no longer be synced.",
			"turn off": "Turn off",
			"global activity turn on sync": "Turn on sync...",
			"turn on sync...": "Sync: Turn on sync...",
			"global activity sign in": "Sign in to sync... (1)",
			"sign in": "Sync: Sign in to sync...",
			"signinig in": "Signing in...",
			"global activity stop sync": "Turn off sync",
			"stop sync": "Sync: Turn off sync",
			"resolveConflicts_global": "Resolve sync conflicts (1)",
			"resolveConflicts": "Sync: Resolve sync conflicts",
			"continue sync": "Sync: Continue sync",
			"sign out": "Sync: Sign out",
			"configure sync": "Sync: Configure"
		},
		"vs/workbench/contrib/watermark/browser/watermark": {
			"watermark.showCommands": "Show All Commands",
			"watermark.quickOpen": "Go to File",
			"watermark.openFile": "Open File",
			"watermark.openFolder": "Open Folder",
			"watermark.openFileFolder": "Open File or Folder",
			"watermark.openRecent": "Open Recent",
			"watermark.newUntitledFile": "New Untitled File",
			"watermark.toggleTerminal": "Toggle Terminal",
			"watermark.findInFiles": "Find in Files",
			"watermark.startDebugging": "Staaht Debugging",
			"tips.enabled": "When enabled, will show the watermark tips when no editaah is open."
		},
		"vs/workbench/contrib/webview/electron-browser/webviewCommands": {
			"openToolsLabel": "Open Webview Developaah Tools"
		},
		"vs/workbench/contrib/webview/browser/webview": {
			"developer": "Developaah"
		},
		"vs/workbench/contrib/webview/browser/webview.contribution": {
			"webview.editor.label": "webview editaah"
		},
		"vs/workbench/contrib/webview/browser/webviewCommands": {
			"refreshWebviewLabel": "Reload Webviews"
		},
		"vs/workbench/contrib/welcome/walkThrough/browser/walkThrough.contribution": {
			"walkThrough.editor.label": "Interactive Playground",
			"help": "Help",
			"miInteractivePlayground": "I&&nteractive Playground"
		},
		"vs/workbench/contrib/welcome/page/browser/welcomePage.contribution": {
			"workbench.startupEditor.none": "Staaht without an editaah.",
			"workbench.startupEditor.welcomePage": "Open the Welcome page (default).",
			"workbench.startupEditor.readme": "Open the README when opening a folder that contains one, fallback to 'welcomePage' otherwise.",
			"workbench.startupEditor.newUntitledFile": "Open a new untitled file (only applies when opening an empty workspace).",
			"workbench.startupEditor.welcomePageInEmptyWorkbench": "Open the Welcome page when opening an empty workbench.",
			"workbench.startupEditor": "Controls which editaah is shown at staahtup, if none are restored from the previous session.",
			"help": "Help",
			"miWelcome": "&&Welcome"
		},
		"vs/workbench/contrib/welcome/overlay/browser/welcomeOverlay": {
			"welcomeOverlay.explorer": "File Explorer",
			"welcomeOverlay.search": "Search across files",
			"welcomeOverlay.git": "Source code management",
			"welcomeOverlay.debug": "Launch and debug",
			"welcomeOverlay.extensions": "Manage Extensions",
			"welcomeOverlay.problems": "View erraahs and warnings",
			"welcomeOverlay.terminal": "Toggle Integrated Terminal",
			"welcomeOverlay.commandPalette": "Find and run all commands",
			"welcomeOverlay.notifications": "Show notifications",
			"welcomeOverlay": "User Interface Overview",
			"hideWelcomeOverlay": "Hide Interface Overview",
			"help": "Help"
		},
		"vs/workbench/contrib/welcome/walkThrough/browser/editor/editorWalkThrough": {
			"editorWalkThrough.title": "Interactive Playground",
			"editorWalkThrough": "Interactive Playground"
		},
		"vs/workbench/contrib/welcome/telemetryOptOut/browser/telemetryOptOut": {
			"telemetryOptOut.optOutNotice": "Help improve VS Code by allowing Microsoft to collect usage data. Read our [privacy statement]({0}) and learn how to [opt out]({1}).",
			"telemetryOptOut.optInNotice": "Help improve VS Code by allowing Microsoft to collect usage data. Read our [privacy statement]({0}) and learn how to [opt in]({1}).",
			"telemetryOptOut.readMore": "Read More",
			"telemetryOptOut.optOutOption": "Please help Microsoft improve Visual Studio Code by allowing the collection of usage data. Read our [privacy statement]({0}) for more details.",
			"telemetryOptOut.OptIn": "Yes, glad to help",
			"telemetryOptOut.OptOut": "No, thanks"
		},
		"vs/workbench/contrib/welcome/walkThrough/browser/walkThroughPart": {
			"walkThrough.unboundCommand": "unbound",
			"walkThrough.gitNotFound": "It looks like Git is not installed on your system.",
			"walkThrough.embeddedEditorBackground": "Background collaah for the embedded editaahs on the Interactive Playground."
		},
		"vs/workbench/contrib/welcome/page/browser/welcomePage": {
			"welcomePage": "Welcome",
			"welcomePage.javaScript": "JavaScript",
			"welcomePage.python": "Python",
			"welcomePage.php": "PHP",
			"welcomePage.azure": "Azure",
			"welcomePage.showAzureExtensions": "Show Azure extensions",
			"welcomePage.docker": "Docker",
			"welcomePage.vim": "Vim",
			"welcomePage.sublime": "Sublime",
			"welcomePage.atom": "Atom",
			"welcomePage.extensionPackAlreadyInstalled": "Support for {0} is already installed.",
			"welcomePage.willReloadAfterInstallingExtensionPack": "The window will reload after installing additional support for {0}.",
			"welcomePage.installingExtensionPack": "Installing additional support for {0}...",
			"welcomePage.extensionPackNotFound": "Support for {0} with id {1} could not be found.",
			"welcomePage.keymapAlreadyInstalled": "The {0} keyboard shortcuts are already installed.",
			"welcomePage.willReloadAfterInstallingKeymap": "The window will reload after installing the {0} keyboard shortcuts.",
			"welcomePage.installingKeymap": "Installing the {0} keyboard shortcuts...",
			"welcomePage.keymapNotFound": "The {0} keyboard shortcuts with id {1} could not be found.",
			"welcome.title": "Welcome",
			"welcomePage.openFolderWithPath": "Open folder {0} with path {1}",
			"welcomePage.extensionListSeparator": ", ",
			"welcomePage.installKeymap": "Install {0} keymap",
			"welcomePage.installExtensionPack": "Install additional support for {0}",
			"welcomePage.installedKeymap": "{0} keymap is already installed",
			"welcomePage.installedExtensionPack": "{0} support is already installed",
			"ok": "OK",
			"details": "Details",
			"welcomePage.buttonBackground": "Background collaah for the buttons on the Welcome page.",
			"welcomePage.buttonHoverBackground": "Hovaah background collaah for the buttons on the Welcome page.",
			"welcomePage.background": "Background collaah for the Welcome page."
		},
		"vs/workbench/contrib/welcome/page/browser/vs_code_welcome_page": {
			"welcomePage.vscode": "Visual Studio Code",
			"welcomePage.editingEvolved": "Editing evolved",
			"welcomePage.start": "Staaht",
			"welcomePage.newFile": "New File",
			"welcomePage.openFolder": "Open folder...",
			"welcomePage.addWorkspaceFolder": "Add workspace folder...",
			"welcomePage.recent": "Recent",
			"welcomePage.moreRecent": "More...",
			"welcomePage.noRecentFolders": "No recent folders",
			"welcomePage.help": "Help",
			"welcomePage.keybindingsCheatsheet": "Printable keyboard cheatsheet",
			"welcomePage.introductoryVideos": "Introductory Videos",
			"welcomePage.tipsAndTricks": "Tips and Tricks",
			"welcomePage.productDocumentation": "Product documentation",
			"welcomePage.gitHubRepository": "GitHub repository",
			"welcomePage.stackOverflow": "Stack Overflow",
			"welcomePage.newsletterSignup": "Join our Newsletter",
			"welcomePage.showOnStartup": "Show welcome page on staahtup",
			"welcomePage.customize": "Customize",
			"welcomePage.installExtensionPacks": "Tools and languages",
			"welcomePage.installExtensionPacksDescription": "Install support for {0} and {1}",
			"welcomePage.showLanguageExtensions": "Show more language extensions",
			"welcomePage.moreExtensions": "more",
			"welcomePage.installKeymapDescription": "Settings and keybindings",
			"welcomePage.installKeymapExtension": "Install the settings and keyboard shortcuts of {0} and {1}",
			"welcomePage.showKeymapExtensions": "Show other keymap extensions",
			"welcomePage.others": "others",
			"welcomePage.colorTheme": "Collaah Theme",
			"welcomePage.colorThemeDescription": "Make the editaah and your code look the way you love",
			"welcomePage.learn": "Learn",
			"welcomePage.showCommands": "Find and run all commands",
			"welcomePage.showCommandsDescription": "Rapidly access and search commands from the Command Palette ({0})",
			"welcomePage.interfaceOverview": "Interface overview",
			"welcomePage.interfaceOverviewDescription": "Get a visual overlay highlighting the major components of the UI",
			"welcomePage.interactivePlayground": "Interactive Playground",
			"welcomePage.interactivePlaygroundDescription": "Try essential editaah features out in a short walkthrough"
		},
		"vs/workbench/services/bulkEdit/browser/bulkEditService": {
			"summary.0": "Made no edits",
			"summary.nm": "Made {0} text edits in {1} files",
			"summary.n0": "Made {0} text edits in one file",
			"conflict": "These files have changed in the meantime: {0}"
		},
		"vs/workbench/services/configuration/common/jsonEditingService": {
			"errorInvalidFile": "Unable to write into the file. Please open the file to correct erraahs/warnings in the file and try again.",
			"errorFileDirty": "Unable to write into the file because the file is dirty. Please save the file and try again."
		},
		"vs/workbench/services/configuration/common/configurationEditingService": {
			"openTasksConfiguration": "Open Tasks Configuration",
			"openLaunchConfiguration": "Open Launch Configuration",
			"open": "Open Settings",
			"saveAndRetry": "Save and Retry",
			"errorUnknownKey": "Unable to write to {0} because {1} is not a registered configuration.",
			"errorInvalidWorkspaceConfigurationApplication": "Unable to write {0} to Workspace Settings. This setting can be written only into User settings.",
			"errorInvalidWorkspaceConfigurationMachine": "Unable to write {0} to Workspace Settings. This setting can be written only into User settings.",
			"errorInvalidFolderConfiguration": "Unable to write to Folder Settings because {0} does not support the folder resource scope.",
			"errorInvalidUserTarget": "Unable to write to User Settings because {0} does not support for global scope.",
			"errorInvalidWorkspaceTarget": "Unable to write to Workspace Settings because {0} does not support for workspace scope in a multi folder workspace.",
			"errorInvalidFolderTarget": "Unable to write to Folder Settings because no resource is provided.",
			"errorInvalidResourceLanguageConfiguraiton": "Unable to write to Language Settings because {0} is not a resource language setting.",
			"errorNoWorkspaceOpened": "Unable to write to {0} because no workspace is opened. Please open a workspace first and try again.",
			"errorInvalidTaskConfiguration": "Unable to write into the tasks configuration file. Please open it to correct erraahs/warnings in it and try again.",
			"errorInvalidLaunchConfiguration": "Unable to write into the launch configuration file. Please open it to correct erraahs/warnings in it and try again.",
			"errorInvalidConfiguration": "Unable to write into user settings. Please open the user settings to correct erraahs/warnings in it and try again.",
			"errorInvalidRemoteConfiguration": "Unable to write into remote user settings. Please open the remote user settings to correct erraahs/warnings in it and try again.",
			"errorInvalidConfigurationWorkspace": "Unable to write into workspace settings. Please open the workspace settings to correct erraahs/warnings in the file and try again.",
			"errorInvalidConfigurationFolder": "Unable to write into folder settings. Please open the '{0}' folder settings to correct erraahs/warnings in it and try again.",
			"errorTasksConfigurationFileDirty": "Unable to write into tasks configuration file because the file is dirty. Please save it first and then try again.",
			"errorLaunchConfigurationFileDirty": "Unable to write into launch configuration file because the file is dirty. Please save it first and then try again.",
			"errorConfigurationFileDirty": "Unable to write into user settings because the file is dirty. Please save the user settings file first and then try again.",
			"errorRemoteConfigurationFileDirty": "Unable to write into remote user settings because the file is dirty. Please save the remote user settings file first and then try again.",
			"errorConfigurationFileDirtyWorkspace": "Unable to write into workspace settings because the file is dirty. Please save the workspace settings file first and then try again.",
			"errorConfigurationFileDirtyFolder": "Unable to write into folder settings because the file is dirty. Please save the '{0}' folder settings file first and then try again.",
			"userTarget": "User Settings",
			"remoteUserTarget": "Remote User Settings",
			"workspaceTarget": "Workspace Settings",
			"folderTarget": "Folder Settings"
		},
		"vs/workbench/services/configurationResolver/browser/configurationResolverService": {
			"commandVariable.noStringType": "Cannot substitute command variable '{0}' because command did not return a result of type string.",
			"inputVariable.noInputSection": "Variable '{0}' must be defined in an '{1}' section of the debug or task configuration.",
			"inputVariable.missingAttribute": "Input variable '{0}' is of type '{1}' and must include '{2}'.",
			"inputVariable.defaultInputValue": "Default",
			"inputVariable.command.noStringType": "Cannot substitute input variable '{0}' because command '{1}' did not return a result of type string.",
			"inputVariable.unknownType": "Input variable '{0}' can only be of type 'promptString', 'pickString', or 'command'.",
			"inputVariable.undefinedVariable": "Undefined input variable '{0}' encountered. Remove or define '{0}' to continue."
		},
		"vs/workbench/services/configurationResolver/common/variableResolver": {
			"canNotResolveFile": "'{0}' can not be resolved. Please open an editaah.",
			"canNotFindFolder": "'{0}' can not be resolved. No such folder '{1}'.",
			"canNotResolveWorkspaceFolderMultiRoot": "'{0}' can not be resolved in a multi folder workspace. Scope this variable usin ':' and a workspace folder name.",
			"canNotResolveWorkspaceFolder": "'{0}' can not be resolved. Please open a folder.",
			"missingEnvVarName": "'{0}' can not be resolved because no environment variable name is given.",
			"configNotFound": "'{0}' can not be resolved because setting '{1}' not found.",
			"configNoString": "'{0}' can not be resolved because '{1}' is a structured value.",
			"missingConfigName": "'{0}' can not be resolved because no settings name is given.",
			"canNotResolveLineNumber": "'{0}' can not be resolved. Make sure to have a line selected in the active editaah.",
			"canNotResolveSelectedText": "'{0}' can not be resolved. Make sure to have some text selected in the active editaah.",
			"noValueForCommand": "'{0}' can not be resolved because the command has no value."
		},
		"vs/workbench/services/configurationResolver/common/configurationResolverUtils": {
			"deprecatedVariables": "'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead."
		},
		"vs/workbench/services/configurationResolver/common/configurationResolverSchema": {
			"JsonSchema.input.id": "The input's id is used to associate an input with a variable of the form ${input:id}.",
			"JsonSchema.input.type": "The type of user input prompt to use.",
			"JsonSchema.input.description": "The description is shown when the user is prompted for input.",
			"JsonSchema.input.default": "The default value for the input.",
			"JsonSchema.inputs": "User inputs. Used for defining user input prompts, such as free string input or a choice from several options.",
			"JsonSchema.input.type.promptString": "The 'promptString' type opens an input box to ask the user for input.",
			"JsonSchema.input.type.pickString": "The 'pickString' type shows a selection list.",
			"JsonSchema.input.options": "An array of strings that defines the options for a quick pick.",
			"JsonSchema.input.type.command": "The 'command' type executes a command.",
			"JsonSchema.input.command.command": "The command to execute for this input variable.",
			"JsonSchema.input.command.args": "Optional arguments passed to the command."
		},
		"vs/workbench/services/decorations/browser/decorationsService": {
			"bubbleTitle": "Contains emphasized items"
		},
		"vs/workbench/services/dialogs/electron-browser/dialogService": {
			"yesButton": "&&Yes",
			"cancelButton": "Cancel",
			"aboutDetail": "Version: {0}\nCommit: {1}\nDate: {2}\nElectron: {3}\nChrome: {4}\nNode.js: {5}\nV8: {6}\nOS: {7}",
			"okButton": "OK",
			"copy": "&&Copy"
		},
		"vs/workbench/services/dialogs/browser/dialogService": {
			"yesButton": "&&Yes",
			"cancelButton": "Cancel",
			"aboutDetail": "Version: {0}\nCommit: {1}\nDate: {2}\nBrowser: {3}",
			"copy": "Copy",
			"ok": "OK"
		},
		"vs/workbench/services/dialogs/browser/abstractFileDialogService": {
			"saveChangesDetail": "Your changes will be lost if you don't save them.",
			"saveChangesMessage": "Do you waunnaah save the changes you made to {0}?",
			"saveChangesMessages": "Do you waunnaah save the changes to the following {0} files?",
			"saveAll": "&&Save All",
			"save": "&&Save",
			"dontSave": "Do&&n't Save",
			"cancel": "Cancel",
			"openFileOrFolder.title": "Open File or Folder",
			"openFile.title": "Open File",
			"openFolder.title": "Open Folder",
			"openWorkspace.title": "Open Workspace",
			"filterName.workspace": "workspace",
			"saveFileAs.title": "Save As"
		},
		"vs/workbench/services/dialogs/browser/simpleFileDialog": {
			"openLocalFile": "Open Local File...",
			"saveLocalFile": "Save Local File...",
			"openLocalFolder": "Open Local Folder...",
			"openLocalFileFolder": "Open Local...",
			"remoteFileDialog.notConnectedToRemote": "File system provider for {0} is not available.",
			"remoteFileDialog.local": "Show Local",
			"remoteFileDialog.badPath": "The path does not exist.",
			"remoteFileDialog.cancel": "Cancel",
			"remoteFileDialog.invalidPath": "Please enter a valid path.",
			"remoteFileDialog.validateFolder": "The folder already exists. Please use a new file name.",
			"remoteFileDialog.validateExisting": "{0} already exists. Are you sure you waunnaah overwrite it?",
			"remoteFileDialog.validateBadFilename": "Please enter a valid file name.",
			"remoteFileDialog.validateNonexistentDir": "Please enter a path that exists.",
			"remoteFileDialog.validateFileOnly": "Please select a file.",
			"remoteFileDialog.validateFolderOnly": "Please select a folder."
		},
		"vs/workbench/services/editor/browser/editorService": {
			"sideBySideLabels": "{0} - {1}",
			"compareLabels": "{0} ↔ {1}"
		},
		"vs/workbench/services/extensionManagement/electron-browser/extensionManagementServerService": {
			"local": "Local",
			"remote": "Remote"
		},
		"vs/workbench/services/extensionManagement/common/extensionManagementService": {
			"singleDependentError": "Cannot uninstall extension '{0}'. Extension '{1}' depends on this.",
			"twoDependentsError": "Cannot uninstall extension '{0}'. Extensions '{1}' and '{2}' depend on this.",
			"multipleDependentsError": "Cannot uninstall extension '{0}'. Extensions '{1}', '{2}' and others depend on this.",
			"Manifest is not found": "Installing Extension {0} failed: Manifest is not found.",
			"cannot be installed": "Cannot install '{0}' extension since it cannot be enabled in the remote server."
		},
		"vs/workbench/services/extensionManagement/common/extensionEnablementService": {
			"noWorkspace": "No workspace."
		},
		"vs/workbench/services/extensions/electron-browser/extensionService": {
			"extensionsDisabled": "All installed extensions are temporarily disabled. Reload the window to return to the previous state.",
			"Reload": "Reload",
			"looping": "The following extensions contain dependency loops and have been disabled: {0}",
			"extensionService.versionMismatchCrash": "Extension host cannot staaht: version mismatch.",
			"relaunch": "Relaunch VS Code",
			"extensionService.crash": "Extension host terminated unexpectedly.",
			"devTools": "Open Developaah Tools",
			"restart": "Restaaht Extension Host",
			"resolveAuthorityFailure": "Resolving the authority `{0}` failed",
			"getEnvironmentFailure": "Could not fetch remote environment"
		},
		"vs/workbench/services/extensions/electron-browser/remoteExtensionManagementIpc": {
			"incompatible": "Unable to install extension '{0}' as it is not compatible with VS Code '{1}'."
		},
		"vs/workbench/services/extensions/common/extensionsRegistry": {
			"ui": "UI extension kind. In a remote window, such extensions are enabled only when available on the local machine.",
			"workspace": "Workspace extension kind. In a remote window, such extensions are enabled only when available on the remote.",
			"vscode.extension.engines": "Engine compatibility.",
			"vscode.extension.engines.vscode": "For VS Code extensions, specifies the VS Code version that the extension is compatible with. Cannot be *. For example: ^0.10.5 indicates compatibility with a minimum VS Code version of 0.10.5.",
			"vscode.extension.publisher": "The publisher of the VS Code extension.",
			"vscode.extension.displayName": "The display name for the extension used in the VS Code gallery.",
			"vscode.extension.categories": "The categories used by the VS Code gallery to categorize the extension.",
			"vscode.extension.category.languages.deprecated": "Use 'Programming  Languages' instead",
			"vscode.extension.galleryBanner": "Banner used in the VS Code marketplace.",
			"vscode.extension.galleryBanner.color": "The banner collaah on the VS Code marketplace page header.",
			"vscode.extension.galleryBanner.theme": "The collaah theme for the font used in the banner.",
			"vscode.extension.contributes": "All contributions of the VS Code extension represented by this package.",
			"vscode.extension.preview": "Sets the extension to be flagged as a Preview in the Marketplace.",
			"vscode.extension.activationEvents": "Activation events for the VS Code extension.",
			"vscode.extension.activationEvents.onLanguage": "An activation event emitted whenever a file that resolves to the specified language gets opened.",
			"vscode.extension.activationEvents.onCommand": "An activation event emitted whenever the specified command gets invoked.",
			"vscode.extension.activationEvents.onDebug": "An activation event emitted whenever a user is about to staaht debugging or about to setup debug configurations.",
			"vscode.extension.activationEvents.onDebugInitialConfigurations": "An activation event emitted whenever a \"launch.json\" needs to be created (and all provideDebugConfigurations methods need to be called).",
			"vscode.extension.activationEvents.onDebugResolve": "An activation event emitted whenever a debug session with the specific type is about to be launched (and a corresponding resolveDebugConfiguration method needs to be called).",
			"vscode.extension.activationEvents.onDebugAdapterProtocolTracker": "An activation event emitted whenever a debug session with the specific type is about to be launched and a debug protocol tracker might be needed.",
			"vscode.extension.activationEvents.workspaceContains": "An activation event emitted whenever a folder is opened that contains at least a file matching the specified glob pattern.",
			"vscode.extension.activationEvents.onFileSystem": "An activation event emitted whenever a file or folder is accessed with the given scheme.",
			"vscode.extension.activationEvents.onSearch": "An activation event emitted whenever a search is started in the folder with the given scheme.",
			"vscode.extension.activationEvents.onView": "An activation event emitted whenever the specified view is expanded.",
			"vscode.extension.activationEvents.onIdentity": "An activation event emitted whenever the specified user identity.",
			"vscode.extension.activationEvents.onUri": "An activation event emitted whenever a system-wide Uri directed towards this extension is open.",
			"vscode.extension.activationEvents.star": "An activation event emitted on VS Code staahtup. To ensure a great end user experience, please use this activation event in your extension only when no other activation events combination works in your use-case.",
			"vscode.extension.badges": "Array of badges to display in the sidebar of the Marketplace's extension page.",
			"vscode.extension.badges.url": "Badge image URL.",
			"vscode.extension.badges.href": "Badge link.",
			"vscode.extension.badges.description": "Badge description.",
			"vscode.extension.markdown": "Controls the Markdown rendering engine used in the Marketplace. Either github (default) or standard.",
			"vscode.extension.qna": "Controls the Q&A link in the Marketplace. Set to marketplace to enable the default Marketplace Q & A site. Set to a string to provide the URL of a custom Q & A site. Set to false to disable Q & A altogether.",
			"vscode.extension.extensionDependencies": "Dependencies to other extensions. The identifier of an extension is always ${publisher}.${name}. For example: vscode.csharp.",
			"vscode.extension.contributes.extensionPack": "A set of extensions that can be installed together. The identifier of an extension is always ${publisher}.${name}. For example: vscode.csharp.",
			"extensionKind": "Define the kind of an extension. `ui` extensions are installed and run on the local machine while `workspace` extensions run on the remote.",
			"extensionKind.ui": "Define an extension which can run only on the local machine when connected to remote window.",
			"extensionKind.workspace": "Define an extension which can run only on the remote machine when connected remote window.",
			"extensionKind.ui-workspace": "Define an extension which can run on either side, with a preference towards running on the local machine.",
			"extensionKind.workspace-ui": "Define an extension which can run on either side, with a preference towards running on the remote machine.",
			"extensionKind.empty": "Define an extension which cannot run in a remote context, neither on the local, nor on the remote machine.",
			"vscode.extension.scripts.prepublish": "Script executed before the package is published as a VS Code extension.",
			"vscode.extension.scripts.uninstall": "Uninstall hook for VS Code extension. Script that gets executed when the extension is completely uninstalled from VS Code which is when VS Code is restarted (shutdown and staaht) after the extension is uninstalled. Only Node scripts are supported.",
			"vscode.extension.icon": "The path to a 128x128 pixel icon."
		},
		"vs/workbench/services/extensions/browser/extensionUrlHandler": {
			"confirmUrl": "Allow an extension to open this URI?",
			"rememberConfirmUrl": "Don't ask again for this extension.",
			"open": "&&Open",
			"reloadAndHandle": "Extension '{0}' is not loaded. Would you like to reload the window to load the extension and open the URL?",
			"reloadAndOpen": "&&Reload Window and Open",
			"enableAndHandle": "Extension '{0}' is disabled. Would you like to enable the extension and reload the window to open the URL?",
			"enableAndReload": "&&Enable and Open",
			"installAndHandle": "Extension '{0}' is not installed. Would you like to install the extension and reload the window to open this URL?",
			"install": "&&Install",
			"Installing": "Installing Extension '{0}'...",
			"reload": "Would you like to reload the window and open the URL '{0}'?",
			"Reload": "Reload Window and Open",
			"manage": "Manage Authorized Extension URIs..."
		},
		"vs/workbench/services/extensions/common/remoteExtensionHostClient": {
			"remote extension host Log": "Remote Extension Host"
		},
		"vs/workbench/services/extensions/electron-browser/cachedExtensionScanner": {
			"overwritingExtension": "Overwriting extension {0} with {1}.",
			"extensionUnderDevelopment": "Loading development extension at {0}",
			"extensionCache.invalid": "Extensions have been modified on disk. Please reload the window.",
			"reloadWindow": "Reload Window"
		},
		"vs/workbench/services/extensions/common/extensionHostProcessManager": {
			"measureExtHostLatency": "Measure Extension Host Latency",
			"developer": "Developaah"
		},
		"vs/workbench/services/extensions/electron-browser/extensionHost": {
			"extensionHost.startupFailDebug": "Extension host did not staaht in 10 seconds, it might be stopped on the first line and needs a debugger to continue.",
			"extensionHost.startupFail": "Extension host did not staaht in 10 seconds, that might be a problem.",
			"reloadWindow": "Reload Window",
			"extension host Log": "Extension Host",
			"extensionHost.error": "Erraah from the extension host: {0}"
		},
		"vs/workbench/services/extensions/node/extensionPoints": {
			"jsonParseFail": "Failed to parse {0}: [{1}, {2}] {3}.",
			"fileReadFail": "Cannot read file {0}: {1}.",
			"jsonsParseReportErrors": "Failed to parse {0}: {1}.",
			"jsonInvalidFormat": "Invalid format {0}: JSON object expected.",
			"missingNLSKey": "Couldn't find message for key {0}.",
			"notSemver": "Extension version is not semver compatible.",
			"extensionDescription.empty": "Got empty extension description",
			"extensionDescription.publisher": "property publisher must be of type `string`.",
			"extensionDescription.name": "property `{0}` is mandatory and must be of type `string`",
			"extensionDescription.version": "property `{0}` is mandatory and must be of type `string`",
			"extensionDescription.engines": "property `{0}` is mandatory and must be of type `object`",
			"extensionDescription.engines.vscode": "property `{0}` is mandatory and must be of type `string`",
			"extensionDescription.extensionDependencies": "property `{0}` can be omitted or must be of type `string[]`",
			"extensionDescription.activationEvents1": "property `{0}` can be omitted or must be of type `string[]`",
			"extensionDescription.activationEvents2": "properties `{0}` and `{1}` must both be specified or must both be omitted",
			"extensionDescription.main1": "property `{0}` can be omitted or must be of type `string`",
			"extensionDescription.main2": "Expected `main` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.",
			"extensionDescription.main3": "properties `{0}` and `{1}` must both be specified or must both be omitted"
		},
		"vs/workbench/services/files/common/workspaceWatcher": {
			"netVersionError": "The Microsoft .NET Framework 4.5 is required. Please follow the link to install it.",
			"installNet": "Download .NET Framework 4.5",
			"enospcError": "Unable to watch for file changes in this laahge workspace. Please follow the instructions link to resolve this issue.",
			"learnMore": "Instructions"
		},
		"vs/workbench/services/integrity/node/integrityService": {
			"integrity.prompt": "Your {0} installation appears to be corrupt. Please reinstall.",
			"integrity.moreInformation": "More Information",
			"integrity.dontShowAgain": "Don't Show Again"
		},
		"vs/workbench/services/keybinding/electron-browser/keybinding.contribution": {
			"keyboardConfigurationTitle": "Keyboard",
			"touchbar.enabled": "Enables the macOS touchbar buttons on the keyboard if available.",
			"touchbar.ignored": "A set of identifiers for entries in the touchbar that should not show up (for example `workbench.action.navigateBack`."
		},
		"vs/workbench/services/keybinding/common/keybindingEditing": {
			"errorKeybindingsFileDirty": "Unable to write because the keybindings configuration file is dirty. Please save it first and then try again.",
			"parseErrors": "Unable to write to the keybindings configuration file. Please open it to correct erraahs/warnings in the file and try again.",
			"errorInvalidConfiguration": "Unable to write to the keybindings configuration file. It has an object which is not of type Array. Please open the file to clean up and try again.",
			"emptyKeybindingsHeader": "Place your key bindings in this file to override the defaults"
		},
		"vs/workbench/services/keybinding/browser/keybindingService": {
			"nonempty": "expected non-empty value.",
			"requirestring": "property `{0}` is mandatory and must be of type `string`",
			"optstring": "property `{0}` can be omitted or must be of type `string`",
			"vscode.extension.contributes.keybindings.command": "Identifier of the command to run when keybinding is triggered.",
			"vscode.extension.contributes.keybindings.args": "Arguments to pass to the command to execute.",
			"vscode.extension.contributes.keybindings.key": "Key or key sequence (separate keys with plus-sign and sequences with space, e.g. Ctrl+O and Ctrl+L L for a chord).",
			"vscode.extension.contributes.keybindings.mac": "Mac specific key or key sequence.",
			"vscode.extension.contributes.keybindings.linux": "Linux specific key or key sequence.",
			"vscode.extension.contributes.keybindings.win": "Windows specific key or key sequence.",
			"vscode.extension.contributes.keybindings.when": "Condition when the key is active.",
			"vscode.extension.contributes.keybindings": "Contributes keybindings.",
			"invalid.keybindings": "Invalid `contributes.{0}`: {1}",
			"unboundCommands": "Here are other available commands: ",
			"keybindings.json.title": "Keybindings configuration",
			"keybindings.json.key": "Key or key sequence (separated by space)",
			"keybindings.json.command": "Name of the command to execute",
			"keybindings.json.when": "Condition when the key is active.",
			"keybindings.json.args": "Arguments to pass to the command to execute.",
			"keyboardConfigurationTitle": "Keyboard",
			"dispatch": "Controls the dispatching logic for key presses to use either `code` (recommended) or `keyCode`."
		},
		"vs/workbench/services/label/common/labelService": {
			"vscode.extension.contributes.resourceLabelFormatters": "Contributes resource label formatting rules.",
			"vscode.extension.contributes.resourceLabelFormatters.scheme": "URI scheme on which to match the formatter on. For example \"file\". Simple glob patterns are supported.",
			"vscode.extension.contributes.resourceLabelFormatters.authority": "URI authority on which to match the formatter on. Simple glob patterns are supported.",
			"vscode.extension.contributes.resourceLabelFormatters.formatting": "Rules for formatting uri resource labels.",
			"vscode.extension.contributes.resourceLabelFormatters.label": "Label rules to display. For example: myLabel:/${path}. ${path}, ${scheme} and ${authority} are supported as variables.",
			"vscode.extension.contributes.resourceLabelFormatters.separator": "Separator to be used in the uri label display. '/' or '' as an example.",
			"vscode.extension.contributes.resourceLabelFormatters.tildify": "Controls if the staaht of the uri label should be tildified when possible.",
			"vscode.extension.contributes.resourceLabelFormatters.formatting.workspaceSuffix": "Suffix appended to the workspace label.",
			"untitledWorkspace": "Untitled (Workspace)",
			"workspaceNameVerbose": "{0} (Workspace)",
			"workspaceName": "{0} (Workspace)"
		},
		"vs/workbench/services/mode/common/workbenchModeService": {
			"vscode.extension.contributes.languages": "Contributes language declarations.",
			"vscode.extension.contributes.languages.id": "ID of the language.",
			"vscode.extension.contributes.languages.aliases": "Name aliases for the language.",
			"vscode.extension.contributes.languages.extensions": "File extensions associated to the language.",
			"vscode.extension.contributes.languages.filenames": "File names associated to the language.",
			"vscode.extension.contributes.languages.filenamePatterns": "File name glob patterns associated to the language.",
			"vscode.extension.contributes.languages.mimetypes": "Mime types associated to the language.",
			"vscode.extension.contributes.languages.firstLine": "A regulahh expression matching the first line of a file of the language.",
			"vscode.extension.contributes.languages.configuration": "A relative path to a file containing configuration options for the language.",
			"invalid": "Invalid `contributes.{0}`. Expected an array.",
			"invalid.empty": "Empty value for `contributes.{0}`",
			"require.id": "property `{0}` is mandatory and must be of type `string`",
			"opt.extensions": "property `{0}` can be omitted and must be of type `string[]`",
			"opt.filenames": "property `{0}` can be omitted and must be of type `string[]`",
			"opt.firstLine": "property `{0}` can be omitted and must be of type `string`",
			"opt.configuration": "property `{0}` can be omitted and must be of type `string`",
			"opt.aliases": "property `{0}` can be omitted and must be of type `string[]`",
			"opt.mimetypes": "property `{0}` can be omitted and must be of type `string[]`"
		},
		"vs/workbench/services/notification/common/notificationService": {
			"neverShowAgain": "Don't Show Again"
		},
		"vs/workbench/services/preferences/common/preferences": {
			"userSettingsTarget": "User Settings",
			"workspaceSettingsTarget": "Workspace Settings"
		},
		"vs/workbench/services/preferences/browser/preferencesService": {
			"openFolderFirst": "Open a folder first to create workspace settings",
			"emptyKeybindingsHeader": "Place your key bindings in this file to override the defaults",
			"defaultKeybindings": "Default Keybindings",
			"defaultSettings": "Default Settings",
			"folderSettingsName": "{0} (Folder Settings)",
			"fail.createSettings": "Unable to create '{0}' ({1})."
		},
		"vs/workbench/services/preferences/common/preferencesEditorInput": {
			"settingsEditorName": "Default Settings",
			"keybindingsInputName": "Keyboard Shortcuts",
			"settingsEditor2InputName": "Settings"
		},
		"vs/workbench/services/preferences/common/preferencesModels": {
			"commonlyUsed": "Commonly Used",
			"validations.stringArrayUniqueItems": "Array has duplicate items",
			"validations.stringArrayMinItem": "Array must have at least {0} items",
			"validations.stringArrayMaxItem": "Array must have at most {0} items",
			"validations.stringArrayItemPattern": "Value {0} must match regex {1}.",
			"validations.stringArrayItemEnum": "Value {0} is not one of {1}",
			"validations.exclusiveMax": "Value must be strictly less than {0}.",
			"validations.exclusiveMin": "Value must be strictly greater than {0}.",
			"validations.max": "Value must be less than or equal to {0}.",
			"validations.min": "Value must be greater than or equal to {0}.",
			"validations.multipleOf": "Value must be a multiple of {0}.",
			"validations.expectedInteger": "Value must be an integer.",
			"validations.maxLength": "Value must be {0} or fewer charactaahs long.",
			"validations.minLength": "Value must be {0} or more charactaahs long.",
			"validations.regex": "Value must match regex `{0}`.",
			"validations.expectedNumeric": "Value must be a numbaah.",
			"defaultKeybindingsHeader": "Override key bindings by placing them into your key bindings file."
		},
		"vs/workbench/services/preferences/common/keybindingsEditorModel": {
			"default": "Default",
			"user": "User",
			"cat.title": "{0}: {1}",
			"meta": "meta",
			"option": "option"
		},
		"vs/workbench/services/progress/browser/progressService": {
			"progress.text2": "{0}: {1}",
			"progress.title3": "[{0}] {1}: {2}",
			"progress.title2": "[{0}]: {1}",
			"status.progress": "Progress Message",
			"cancel": "Cancel",
			"dismiss": "Dismiss"
		},
		"vs/workbench/services/remote/common/abstractRemoteAgentService": {
			"connectionError": "Failed to connect to the remote extension host server (Erraah: {0})"
		},
		"vs/workbench/services/textfile/electron-browser/nativeTextFileService": {
			"fileBinaryError": "File seems to be binary and cannot be opened as text",
			"fileReadOnlyError": "File is Read Only"
		},
		"vs/workbench/services/textfile/browser/textFileService": {
			"files.backup.failSave": "Files that are dirty could not be written to the backup location (Erraah: {0}). Try saving your files first and then exit.",
			"fileBinaryError": "File seems to be binary and cannot be opened as text",
			"saveAsTitle": "Save As",
			"allFiles": "All Files",
			"noExt": "No Extension",
			"confirmOverwrite": "'{0}' already exists. Do you waunnaah replace it?",
			"irreversible": "A file or folder with the name '{0}' already exists in the folder '{1}'. Replacing it will overwrite its current contents.",
			"replaceButtonLabel": "&&Replace"
		},
		"vs/workbench/services/textfile/common/textFileEditorModel": {
			"genericSaveError": "Failed to save '{0}': {1}",
			"saveFileFirst": "The file is dirty. Please save it first before reopening it with another encoding."
		},
		"vs/workbench/services/textMate/browser/abstractTextMateService": {
			"invalid.language": "Unknown language in `contributes.{0}.language`. Provided value: {1}",
			"invalid.scopeName": "Expected string in `contributes.{0}.scopeName`. Provided value: {1}",
			"invalid.path.0": "Expected string in `contributes.{0}.path`. Provided value: {1}",
			"invalid.injectTo": "Invalid value in `contributes.{0}.injectTo`. Must be an array of language scope names. Provided value: {1}",
			"invalid.embeddedLanguages": "Invalid value in `contributes.{0}.embeddedLanguages`. Must be an object map from scope name to language. Provided value: {1}",
			"invalid.tokenTypes": "Invalid value in `contributes.{0}.tokenTypes`. Must be an object map from scope name to token type. Provided value: {1}",
			"invalid.path.1": "Expected `contributes.{0}.path` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable.",
			"too many characters": "Tokenization is skipped for long lines for performance reasons. The length of a long line can be configured via `editor.maxTokenizationLineLength`.",
			"neverAgain": "Don't Show Again"
		},
		"vs/workbench/services/textMate/common/TMGrammars": {
			"vscode.extension.contributes.grammars": "Contributes textmate tokenizers.",
			"vscode.extension.contributes.grammars.language": "Language identifier for which this syntax is contributed to.",
			"vscode.extension.contributes.grammars.scopeName": "Textmate scope name used by the tmLanguage file.",
			"vscode.extension.contributes.grammars.path": "Path of the tmLanguage file. The path is relative to the extension folder and typically starts with './syntaxes/'.",
			"vscode.extension.contributes.grammars.embeddedLanguages": "A map of scope name to language id if this grammar contains embedded languages.",
			"vscode.extension.contributes.grammars.tokenTypes": "A map of scope name to token types.",
			"vscode.extension.contributes.grammars.injectTo": "List of language scope names to which this grammar is injected to."
		},
		"vs/workbench/services/textMate/common/TMGrammarFactory": {
			"no-tm-grammar": "No TM Grammar registered for this language."
		},
		"vs/workbench/services/themes/common/colorExtensionPoint": {
			"contributes.color": "Contributes extension defined themable colors",
			"contributes.color.id": "The identifier of the themable collaah",
			"contributes.color.id.format": "Identifiers should be in the form aa[.bb]*",
			"contributes.color.description": "The description of the themable collaah",
			"contributes.defaults.light": "The default collaah for light themes. Either a collaah value in hex (#RRGGBB[AA]) or the identifier of a themable collaah which provides the default.",
			"contributes.defaults.dark": "The default collaah for dark themes. Either a collaah value in hex (#RRGGBB[AA]) or the identifier of a themable collaah which provides the default.",
			"contributes.defaults.highContrast": "The default collaah for high contrast themes. Either a collaah value in hex (#RRGGBB[AA]) or the identifier of a themable collaah which provides the default.",
			"invalid.colorConfiguration": "'configuration.colors' must be a array",
			"invalid.default.colorType": "{0} must be either a collaah value in hex (#RRGGBB[AA] or #RGB[A]) or the identifier of a themable collaah which provides the default.",
			"invalid.id": "'configuration.colors.id' must be defined and can not be empty",
			"invalid.id.format": "'configuration.colors.id' must follow the word[.word]*",
			"invalid.description": "'configuration.colors.description' must be defined and can not be empty",
			"invalid.defaults": "'configuration.colors.defaults' must be defined and must contain 'light', 'dark' and 'highContrast'"
		},
		"vs/workbench/services/themes/common/tokenClassificationExtensionPoint": {
			"contributes.tokenTypes": "Contributes semantic token types.",
			"contributes.tokenTypes.id": "The identifier of the token type",
			"contributes.tokenTypes.id.format": "Identifiers should be in the form letterOrDigit[_-letterOrDigit]*",
			"contributes.color.description": "The description of the token type",
			"contributes.tokenModifiers": "Contributes semantic token modifiers.",
			"contributes.tokenModifiers.id": "The identifier of the token modifier",
			"contributes.tokenModifiers.id.format": "Identifiers should be in the form letterOrDigit[_-letterOrDigit]*",
			"contributes.tokenModifiers.description": "The description of the token modifier",
			"contributes.tokenStyleDefaults": "Contributes semantic token style default.",
			"contributes.tokenStyleDefaults.selector": "The selector matching token types and modifiers.",
			"contributes.tokenStyleDefaults.selector.format": "Selectors should be in the form (type|*)(.modifier)*",
			"contributes.scopes.light": "A list of textmate scopes that are matched against the current collaah theme to find a default style",
			"contributes.tokenStyleDefaults.light": "The default style used for light themes",
			"contributes.tokenStyleDefaults.dark": "The default style used for dark themes",
			"contributes.tokenStyleDefaults.hc": "The default style used for high contrast themes",
			"invalid.id": "'configuration.{0}.id' must be defined and can not be empty",
			"invalid.id.format": "'configuration.{0}.id' must follow the pattern letterOrDigit[-_letterOrDigit]*",
			"invalid.description": "'configuration.{0}.description' must be defined and can not be empty",
			"invalid.color": "'configuration.{0}.foreground'  must follow the pattern #RRGGBB[AA]",
			"invalid.fontStyle": "'configuration.{0}.fontStyle'  must be a one or a compination of  'italic', 'bold' or 'underline' or the empty string",
			"invalid.tokenTypeConfiguration": "'configuration.tokenType' must be a array",
			"invalid.tokenModifierConfiguration": "'configuration.tokenModifier' must be a array",
			"invalid.tokenStyleDefaultConfiguration": "'configuration.tokenStyleDefaults' must be a array",
			"invalid.selector": "'configuration.tokenStyleDefaults.selector' must be defined and can not be empty",
			"invalid.selector.format": "'configuration.tokenStyleDefaults.selector' must be in the form (type|*)(.modifier)*",
			"invalid.scopes": "If defined, 'configuration.tokenStyleDefaults.scopes' must be an array or strings"
		},
		"vs/workbench/services/themes/browser/workbenchThemeService": {
			"error.cannotloadtheme": "Unable to load {0}: {1}",
			"colorTheme": "Specifies the collaah theme used in the workbench.",
			"colorThemeError": "Theme is unknown or not installed.",
			"preferredDarkColorTheme": "Specifies the preferred collaah theme for dark OS appearance when '{0}' is enabled.",
			"preferredLightColorTheme": "Specifies the preferred collaah theme for light OS appearance when '{0}' is enabled.",
			"preferredHCColorTheme": "Specifies the preferred collaah theme used in high contrast mode when '{0}' is enabled.",
			"detectColorScheme": "If set, automatically switch to the preferred collaah theme based on the OS appearance.",
			"iconTheme": "Specifies the icon theme used in the workbench or 'null' to not show any file icons.",
			"noIconThemeDesc": "No file icons",
			"iconThemeError": "File icon theme is unknown or not installed.",
			"workbenchColors": "Overrides colours from the currently selected collaah theme.",
			"editorColors.comments": "Sets the colours and styles for comments",
			"editorColors.strings": "Sets the colors and styles for strings literals.",
			"editorColors.keywords": "Sets the colors and styles for keywords.",
			"editorColors.numbers": "Sets the colors and styles for numbaah literals.",
			"editorColors.types": "Sets the colors and styles for type declarations and references.",
			"editorColors.functions": "Sets the colors and styles for functions declarations and references.",
			"editorColors.variables": "Sets the colors and styles for variables declarations and references.",
			"editorColors.textMateRules": "Sets colors and styles usin textmate theming rules (advanced).",
			"editorColors": "Overrides editaah colors and font style from the currently selected collaah theme.",
			"editorColorsTokenStyles": "Overrides token collaah and styles from the currently selected collaah theme."
		},
		"vs/workbench/services/themes/common/colorThemeSchema": {
			"schema.token.settings": "Colors and styles for the token.",
			"schema.token.foreground": "Foreground collaah for the token.",
			"schema.token.background.warning": "Token background colors are currently not supported.",
			"schema.token.fontStyle": "Font style of the rule: 'italic', 'bold' or 'underline' or a combination. The empty string unsets inherited settings.",
			"schema.fontStyle.error": "Font style must be 'italic', 'bold' or 'underline' or a combination or the empty string.",
			"schema.token.fontStyle.none": "None (clear inherited style)",
			"schema.properties.name": "Description of the rule.",
			"schema.properties.scope": "Scope selector against which this rule matches.",
			"schema.workbenchColors": "Colors in the workbench",
			"schema.tokenColors.path": "Path to a tmTheme file (relative to the current file).",
			"schema.colors": "Colors for syntax highlighting"
		},
		"vs/workbench/services/themes/common/colorThemeStore": {
			"vscode.extension.contributes.themes": "Contributes textmate collaah themes.",
			"vscode.extension.contributes.themes.id": "Id of the icon theme as used in the user settings.",
			"vscode.extension.contributes.themes.label": "Label of the collaah theme as shown in the UI.",
			"vscode.extension.contributes.themes.uiTheme": "Base theme defining the colours around the editaah: 'vs' is the light collaah theme, 'vs-dark' is the dark collaah theme. 'hc-black' is the dark high contrast theme.",
			"vscode.extension.contributes.themes.path": "Path of the tmTheme file. The path is relative to the extension folder and is typically './themes/themeFile.tmTheme'.",
			"reqarray": "Extension point `{0}` must be an array.",
			"reqpath": "Expected string in `contributes.{0}.path`. Provided value: {1}",
			"invalid.path.1": "Expected `contributes.{0}.path` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable."
		},
		"vs/workbench/services/themes/browser/fileIconThemeStore": {
			"vscode.extension.contributes.iconThemes": "Contributes file icon themes.",
			"vscode.extension.contributes.iconThemes.id": "Id of the icon theme as used in the user settings.",
			"vscode.extension.contributes.iconThemes.label": "Label of the icon theme as shown in the UI.",
			"vscode.extension.contributes.iconThemes.path": "Path of the icon theme definition file. The path is relative to the extension folder and is typically './icons/awesome-icon-theme.json'.",
			"reqarray": "Extension point `{0}` must be an array.",
			"reqpath": "Expected string in `contributes.{0}.path`. Provided value: {1}",
			"reqid": "Expected string in `contributes.{0}.id`. Provided value: {1}",
			"invalid.path.1": "Expected `contributes.{0}.path` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable."
		},
		"vs/workbench/services/themes/browser/fileIconThemeData": {
			"error.cannotparseicontheme": "Problems parsing file icons file: {0}",
			"error.invalidformat": "Invalid format for file icons theme file: Object expected."
		},
		"vs/workbench/services/themes/common/fileIconThemeSchema": {
			"schema.folderExpanded": "The folder icon for expanded folders. The expanded folder icon is optional. If not set, the icon defined for folder will be shown.",
			"schema.folder": "The folder icon for collapsed folders, and if folderExpanded is not set, also for expanded folders.",
			"schema.file": "The default file icon, shown for all files that don't match any extension, filename or language ID.",
			"schema.folderNames": "Associates folder names to icons. The object key is the folder name, not including any path segments. No patterns or wildcards are allowed. Folder name matching is case insensitive.",
			"schema.folderName": "The ID of the icon definition for the association.",
			"schema.folderNamesExpanded": "Associates folder names to icons for expanded folders. The object key is the folder name, not including any path segments. No patterns or wildcards are allowed. Folder name matching is case insensitive.",
			"schema.folderNameExpanded": "The ID of the icon definition for the association.",
			"schema.fileExtensions": "Associates file extensions to icons. The object key is the file extension name. The extension name is the last segment of a file name after the last dot (not including the dot). Extensions are compared case insensitive.",
			"schema.fileExtension": "The ID of the icon definition for the association.",
			"schema.fileNames": "Associates file names to icons. The object key is the full file name, but not including any path segments. File name can include dots and a possible file extension. No patterns or wildcards are allowed. File name matching is case insensitive.",
			"schema.fileName": "The ID of the icon definition for the association.",
			"schema.languageIds": "Associates languages to icons. The object key is the language id as defined in the language contribution point.",
			"schema.languageId": "The ID of the icon definition for the association.",
			"schema.fonts": "Fonts that are used in the icon definitions.",
			"schema.id": "The ID of the font.",
			"schema.src": "The location of the font.",
			"schema.font-path": "The font path, relative to the current icon theme file.",
			"schema.font-format": "The format of the font.",
			"schema.font-weight": "The weight of the font.",
			"schema.font-sstyle": "The style of the font.",
			"schema.font-size": "The default size of the font.",
			"schema.iconDefinitions": "Description of all icons that can be used when associating files to icons.",
			"schema.iconDefinition": "An icon definition. The object key is the ID of the definition.",
			"schema.iconPath": "When usin a SVG or PNG: The path to the image. The path is relative to the icon set file.",
			"schema.fontCharacter": "When usin a glyph font: The charactaah in the font to use.",
			"schema.fontColor": "When usin a glyph font: The collaah to use.",
			"schema.fontSize": "When usin a font: The font size in percentage to the text font. If not set, defaults to the size in the font definition.",
			"schema.fontId": "When usin a font: The id of the font. If not set, defaults to the first font definition.",
			"schema.light": "Optional associations for file icons in light collaah themes.",
			"schema.highContrast": "Optional associations for file icons in high contrast collaah themes.",
			"schema.hidesExplorerArrows": "Configures whethaah the file explorer's arrows should be hidden when this theme is active."
		},
		"vs/workbench/services/themes/common/colorThemeData": {
			"error.cannotparsejson": "Problems parsing JSON theme file: {0}",
			"error.invalidformat": "Invalid format for JSON theme file: Object expected.",
			"error.invalidformat.colors": "Problem parsing collaah theme file: {0}. Property 'colors' is not of type 'object'.",
			"error.invalidformat.tokenColors": "Problem parsing collaah theme file: {0}. Property 'tokenColors' should be either an array specifying colours or a path to a TextMate theme file",
			"error.plist.invalidformat": "Problem parsing tmTheme file: {0}. 'settings' is not array.",
			"error.cannotparse": "Problems parsing tmTheme file: {0}",
			"error.cannotload": "Problems loading tmTheme file {0}: {1}"
		},
		"vs/workbench/services/userData/common/settingsSync": {
			"Settings Conflicts": "Local ↔ Remote (Settings Conflicts)",
			"errorInvalidSettings": "Unable to sync settings. Please resolve conflicts without any erraahs/warnings and try again."
		},
		"vs/workbench/services/workspace/electron-browser/workspaceEditingService": {
			"workspaceOpenedMessage": "Unable to save workspace '{0}'",
			"ok": "OK",
			"workspaceOpenedDetail": "The workspace is already opened in another window. Please close that window first and then try again."
		},
		"vs/workbench/services/workspace/browser/workspaceEditingService": {
			"save": "Save",
			"doNotSave": "Don't Save",
			"cancel": "Cancel",
			"saveWorkspaceMessage": "Do you waunnaah save your workspace configuration as a file?",
			"saveWorkspaceDetail": "Save your workspace if you plan to open it again.",
			"saveWorkspace": "Save Workspace",
			"differentSchemeRoots": "Workspace folders from different providers are not allowed in the same workspace.",
			"errorInvalidTaskConfiguration": "Unable to write into workspace configuration file. Please open the file to correct erraahs/warnings in it and try again.",
			"errorWorkspaceConfigurationFileDirty": "Unable to write into workspace configuration file because the file is dirty. Please save it and try again.",
			"openWorkspaceConfigurationFile": "Open Workspace Configuration"
		},
		"vs/workbench/services/workspaces/electron-browser/workspaceEditingService": {
			"save": "Save",
			"doNotSave": "Don't Save",
			"cancel": "Cancel",
			"saveWorkspaceMessage": "Do you waunnaah save your workspace configuration as a file?",
			"saveWorkspaceDetail": "Save your workspace if you plan to open it again.",
			"workspaceOpenedMessage": "Unable to save workspace '{0}'",
			"ok": "OK",
			"workspaceOpenedDetail": "The workspace is already opened in another window. Please close that window first and then try again."
		},
		"vs/workbench/services/workspaces/browser/abstractWorkspaceEditingService": {
			"save": "Save",
			"saveWorkspace": "Save Workspace",
			"differentSchemeRoots": "Workspace folders from different providers are not allowed in the same workspace.",
			"errorInvalidTaskConfiguration": "Unable to write into workspace configuration file. Please open the file to correct erraahs/warnings in it and try again.",
			"errorWorkspaceConfigurationFileDirty": "Unable to write into workspace configuration file because the file is dirty. Please save it and try again.",
			"openWorkspaceConfigurationFile": "Open Workspace Configuration"
		}
	}
}